
# generated 2022-03-10 18:59:39.102061 from codegen/math/templates/_math.pyi

__all__ = [

    'BVector2',

    'DVector2',

    'FVector2',

    'I8Vector2',

    'U8Vector2',

    'I16Vector2',

    'U16Vector2',

    'I32Vector2',

    'U32Vector2',

    'IVector2',

    'UVector2',

    'I64Vector2',

    'U64Vector2',

    'BVector3',

    'DVector3',

    'FVector3',

    'I8Vector3',

    'U8Vector3',

    'I16Vector3',

    'U16Vector3',

    'I32Vector3',

    'U32Vector3',

    'IVector3',

    'UVector3',

    'I64Vector3',

    'U64Vector3',

    'BVector4',

    'DVector4',

    'FVector4',

    'I8Vector4',

    'U8Vector4',

    'I16Vector4',

    'U16Vector4',

    'I32Vector4',

    'U32Vector4',

    'IVector4',

    'UVector4',

    'I64Vector4',

    'U64Vector4',

]

# python
from typing import Any, final, overload, SupportsFloat, SupportsInt

Number = SupportsFloat | SupportsInt






@final
class BVector2:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...


    @overload
    def __init__(self, x: Number, y: Number, /): ...




    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> bool: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: BVector2) -> BVector2: ...
    @overload
    def __add__(self, other: Number) -> BVector2: ...
    @overload
    def __radd__(self, other: BVector2) -> BVector2: ...
    @overload
    def __radd__(self, other: Number) -> BVector2: ...

    @overload
    def __sub__(self, other: BVector2) -> BVector2: ...
    @overload
    def __sub__(self, other: Number) -> BVector2: ...
    @overload
    def __rsub__(self, other: BVector2) -> BVector2: ...
    @overload
    def __rsub__(self, other: Number) -> BVector2: ...

    @overload
    def __mul__(self, other: BVector2) -> BVector2: ...
    @overload
    def __mul__(self, other: Number) -> BVector2: ...
    @overload
    def __rmul__(self, other: BVector2) -> BVector2: ...
    @overload
    def __rmul__(self, other: Number) -> BVector2: ...







    def __abs__(self) -> BVector2: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> bool: ...

    @property
    def y(self) -> bool: ...

    @property
    def z(self) -> bool: ...

    @property
    def w(self) -> bool: ...



    @property
    def xx(self) -> tuple[bool, bool, ]: ...

    @property
    def xy(self) -> tuple[bool, bool, ]: ...

    @property
    def xz(self) -> tuple[bool, bool, ]: ...

    @property
    def xw(self) -> tuple[bool, bool, ]: ...

    @property
    def yy(self) -> tuple[bool, bool, ]: ...

    @property
    def yz(self) -> tuple[bool, bool, ]: ...

    @property
    def yw(self) -> tuple[bool, bool, ]: ...

    @property
    def zz(self) -> tuple[bool, bool, ]: ...

    @property
    def zw(self) -> tuple[bool, bool, ]: ...

    @property
    def ww(self) -> tuple[bool, bool, ]: ...





    @property
    def r(self) -> bool: ...

    @property
    def g(self) -> bool: ...

    @property
    def b(self) -> bool: ...

    @property
    def a(self) -> bool: ...



    @property
    def rr(self) -> tuple[bool, bool, ]: ...

    @property
    def rg(self) -> tuple[bool, bool, ]: ...

    @property
    def rb(self) -> tuple[bool, bool, ]: ...

    @property
    def ra(self) -> tuple[bool, bool, ]: ...

    @property
    def gg(self) -> tuple[bool, bool, ]: ...

    @property
    def gb(self) -> tuple[bool, bool, ]: ...

    @property
    def ga(self) -> tuple[bool, bool, ]: ...

    @property
    def bb(self) -> tuple[bool, bool, ]: ...

    @property
    def ba(self) -> tuple[bool, bool, ]: ...

    @property
    def aa(self) -> tuple[bool, bool, ]: ...





    @property
    def s(self) -> bool: ...

    @property
    def t(self) -> bool: ...

    @property
    def q(self) -> bool: ...

    @property
    def p(self) -> bool: ...



    @property
    def ss(self) -> tuple[bool, bool, ]: ...

    @property
    def st(self) -> tuple[bool, bool, ]: ...

    @property
    def sq(self) -> tuple[bool, bool, ]: ...

    @property
    def sp(self) -> tuple[bool, bool, ]: ...

    @property
    def tt(self) -> tuple[bool, bool, ]: ...

    @property
    def tq(self) -> tuple[bool, bool, ]: ...

    @property
    def tp(self) -> tuple[bool, bool, ]: ...

    @property
    def qq(self) -> tuple[bool, bool, ]: ...

    @property
    def qp(self) -> tuple[bool, bool, ]: ...

    @property
    def pp(self) -> tuple[bool, bool, ]: ...





    @property
    def u(self) -> bool: ...

    @property
    def v(self) -> bool: ...



    @property
    def uu(self) -> tuple[bool, bool, ]: ...

    @property
    def uv(self) -> tuple[bool, bool, ]: ...

    @property
    def vv(self) -> tuple[bool, bool, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[bool, bool]: ...









@final
class DVector2:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...


    @overload
    def __init__(self, x: Number, y: Number, /): ...




    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: DVector2) -> DVector2: ...
    @overload
    def __add__(self, other: Number) -> DVector2: ...
    @overload
    def __radd__(self, other: DVector2) -> DVector2: ...
    @overload
    def __radd__(self, other: Number) -> DVector2: ...

    @overload
    def __sub__(self, other: DVector2) -> DVector2: ...
    @overload
    def __sub__(self, other: Number) -> DVector2: ...
    @overload
    def __rsub__(self, other: DVector2) -> DVector2: ...
    @overload
    def __rsub__(self, other: Number) -> DVector2: ...

    @overload
    def __mul__(self, other: DVector2) -> DVector2: ...
    @overload
    def __mul__(self, other: Number) -> DVector2: ...
    @overload
    def __rmul__(self, other: DVector2) -> DVector2: ...
    @overload
    def __rmul__(self, other: Number) -> DVector2: ...




    @overload
    def __truediv__(self, other: DVector2) -> DVector2: ...
    @overload
    def __truediv__(self, other: Number) -> DVector2: ...
    @overload
    def __rtruediv__(self, other: DVector2) -> DVector2: ...
    @overload
    def __rtruediv__(self, other: Number) -> DVector2: ...




    def __abs__(self) -> DVector2: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class FVector2:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...


    @overload
    def __init__(self, x: Number, y: Number, /): ...




    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> float: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: FVector2) -> FVector2: ...
    @overload
    def __add__(self, other: Number) -> FVector2: ...
    @overload
    def __radd__(self, other: FVector2) -> FVector2: ...
    @overload
    def __radd__(self, other: Number) -> FVector2: ...

    @overload
    def __sub__(self, other: FVector2) -> FVector2: ...
    @overload
    def __sub__(self, other: Number) -> FVector2: ...
    @overload
    def __rsub__(self, other: FVector2) -> FVector2: ...
    @overload
    def __rsub__(self, other: Number) -> FVector2: ...

    @overload
    def __mul__(self, other: FVector2) -> FVector2: ...
    @overload
    def __mul__(self, other: Number) -> FVector2: ...
    @overload
    def __rmul__(self, other: FVector2) -> FVector2: ...
    @overload
    def __rmul__(self, other: Number) -> FVector2: ...


    def __matmul__(self, other: FVector2) -> FVector2: ...
    def __rmatmul__(self, other: FVector2) -> FVector2: ...

    @overload
    def __mod__(self, other: FVector2) -> FVector2: ...
    @overload
    def __mod__(self, other: Number) -> FVector2: ...
    @overload
    def __rmod__(self, other: FVector2) -> FVector2: ...
    @overload
    def __rmod__(self, other: Number) -> FVector2: ...

    @overload
    def __pow__(self, other: FVector2) -> FVector2: ...
    @overload
    def __pow__(self, other: Number) -> FVector2: ...
    @overload
    def __rpow__(self, other: FVector2) -> FVector2: ...
    @overload
    def __rpow__(self, other: Number) -> FVector2: ...



    @overload
    def __truediv__(self, other: FVector2) -> FVector2: ...
    @overload
    def __truediv__(self, other: Number) -> FVector2: ...
    @overload
    def __rtruediv__(self, other: FVector2) -> FVector2: ...
    @overload
    def __rtruediv__(self, other: Number) -> FVector2: ...




    def __abs__(self) -> FVector2: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> float: ...

    @property
    def y(self) -> float: ...

    @property
    def z(self) -> float: ...

    @property
    def w(self) -> float: ...



    @property
    def xx(self) -> tuple[float, float, ]: ...

    @property
    def xy(self) -> tuple[float, float, ]: ...

    @property
    def xz(self) -> tuple[float, float, ]: ...

    @property
    def xw(self) -> tuple[float, float, ]: ...

    @property
    def yy(self) -> tuple[float, float, ]: ...

    @property
    def yz(self) -> tuple[float, float, ]: ...

    @property
    def yw(self) -> tuple[float, float, ]: ...

    @property
    def zz(self) -> tuple[float, float, ]: ...

    @property
    def zw(self) -> tuple[float, float, ]: ...

    @property
    def ww(self) -> tuple[float, float, ]: ...





    @property
    def r(self) -> float: ...

    @property
    def g(self) -> float: ...

    @property
    def b(self) -> float: ...

    @property
    def a(self) -> float: ...



    @property
    def rr(self) -> tuple[float, float, ]: ...

    @property
    def rg(self) -> tuple[float, float, ]: ...

    @property
    def rb(self) -> tuple[float, float, ]: ...

    @property
    def ra(self) -> tuple[float, float, ]: ...

    @property
    def gg(self) -> tuple[float, float, ]: ...

    @property
    def gb(self) -> tuple[float, float, ]: ...

    @property
    def ga(self) -> tuple[float, float, ]: ...

    @property
    def bb(self) -> tuple[float, float, ]: ...

    @property
    def ba(self) -> tuple[float, float, ]: ...

    @property
    def aa(self) -> tuple[float, float, ]: ...





    @property
    def s(self) -> float: ...

    @property
    def t(self) -> float: ...

    @property
    def q(self) -> float: ...

    @property
    def p(self) -> float: ...



    @property
    def ss(self) -> tuple[float, float, ]: ...

    @property
    def st(self) -> tuple[float, float, ]: ...

    @property
    def sq(self) -> tuple[float, float, ]: ...

    @property
    def sp(self) -> tuple[float, float, ]: ...

    @property
    def tt(self) -> tuple[float, float, ]: ...

    @property
    def tq(self) -> tuple[float, float, ]: ...

    @property
    def tp(self) -> tuple[float, float, ]: ...

    @property
    def qq(self) -> tuple[float, float, ]: ...

    @property
    def qp(self) -> tuple[float, float, ]: ...

    @property
    def pp(self) -> tuple[float, float, ]: ...





    @property
    def u(self) -> float: ...

    @property
    def v(self) -> float: ...



    @property
    def uu(self) -> tuple[float, float, ]: ...

    @property
    def uv(self) -> tuple[float, float, ]: ...

    @property
    def vv(self) -> tuple[float, float, ]: ...





    @property
    def magnitude(self) -> float: ...

    def cross(self, other: FVector2, /) -> FVector2: ...
    def normalize(self) -> float: ...
    def distance(self, other: FVector2, /) -> float: ...


    @classmethod
    def get_limits(cls) -> tuple[float, float]: ...









@final
class I8Vector2:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...


    @overload
    def __init__(self, x: Number, y: Number, /): ...




    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: I8Vector2) -> I8Vector2: ...
    @overload
    def __add__(self, other: Number) -> I8Vector2: ...
    @overload
    def __radd__(self, other: I8Vector2) -> I8Vector2: ...
    @overload
    def __radd__(self, other: Number) -> I8Vector2: ...

    @overload
    def __sub__(self, other: I8Vector2) -> I8Vector2: ...
    @overload
    def __sub__(self, other: Number) -> I8Vector2: ...
    @overload
    def __rsub__(self, other: I8Vector2) -> I8Vector2: ...
    @overload
    def __rsub__(self, other: Number) -> I8Vector2: ...

    @overload
    def __mul__(self, other: I8Vector2) -> I8Vector2: ...
    @overload
    def __mul__(self, other: Number) -> I8Vector2: ...
    @overload
    def __rmul__(self, other: I8Vector2) -> I8Vector2: ...
    @overload
    def __rmul__(self, other: Number) -> I8Vector2: ...




    @overload
    def __truediv__(self, other: I8Vector2) -> I8Vector2: ...
    @overload
    def __truediv__(self, other: Number) -> I8Vector2: ...
    @overload
    def __rtruediv__(self, other: I8Vector2) -> I8Vector2: ...
    @overload
    def __rtruediv__(self, other: Number) -> I8Vector2: ...




    def __abs__(self) -> I8Vector2: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class U8Vector2:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...


    @overload
    def __init__(self, x: Number, y: Number, /): ...




    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: U8Vector2) -> U8Vector2: ...
    @overload
    def __add__(self, other: Number) -> U8Vector2: ...
    @overload
    def __radd__(self, other: U8Vector2) -> U8Vector2: ...
    @overload
    def __radd__(self, other: Number) -> U8Vector2: ...

    @overload
    def __sub__(self, other: U8Vector2) -> U8Vector2: ...
    @overload
    def __sub__(self, other: Number) -> U8Vector2: ...
    @overload
    def __rsub__(self, other: U8Vector2) -> U8Vector2: ...
    @overload
    def __rsub__(self, other: Number) -> U8Vector2: ...

    @overload
    def __mul__(self, other: U8Vector2) -> U8Vector2: ...
    @overload
    def __mul__(self, other: Number) -> U8Vector2: ...
    @overload
    def __rmul__(self, other: U8Vector2) -> U8Vector2: ...
    @overload
    def __rmul__(self, other: Number) -> U8Vector2: ...




    @overload
    def __truediv__(self, other: U8Vector2) -> U8Vector2: ...
    @overload
    def __truediv__(self, other: Number) -> U8Vector2: ...
    @overload
    def __rtruediv__(self, other: U8Vector2) -> U8Vector2: ...
    @overload
    def __rtruediv__(self, other: Number) -> U8Vector2: ...



    def __neg__(self) -> U8Vector2: ...


    def __abs__(self) -> U8Vector2: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class I16Vector2:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...


    @overload
    def __init__(self, x: Number, y: Number, /): ...




    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: I16Vector2) -> I16Vector2: ...
    @overload
    def __add__(self, other: Number) -> I16Vector2: ...
    @overload
    def __radd__(self, other: I16Vector2) -> I16Vector2: ...
    @overload
    def __radd__(self, other: Number) -> I16Vector2: ...

    @overload
    def __sub__(self, other: I16Vector2) -> I16Vector2: ...
    @overload
    def __sub__(self, other: Number) -> I16Vector2: ...
    @overload
    def __rsub__(self, other: I16Vector2) -> I16Vector2: ...
    @overload
    def __rsub__(self, other: Number) -> I16Vector2: ...

    @overload
    def __mul__(self, other: I16Vector2) -> I16Vector2: ...
    @overload
    def __mul__(self, other: Number) -> I16Vector2: ...
    @overload
    def __rmul__(self, other: I16Vector2) -> I16Vector2: ...
    @overload
    def __rmul__(self, other: Number) -> I16Vector2: ...




    @overload
    def __truediv__(self, other: I16Vector2) -> I16Vector2: ...
    @overload
    def __truediv__(self, other: Number) -> I16Vector2: ...
    @overload
    def __rtruediv__(self, other: I16Vector2) -> I16Vector2: ...
    @overload
    def __rtruediv__(self, other: Number) -> I16Vector2: ...




    def __abs__(self) -> I16Vector2: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class U16Vector2:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...


    @overload
    def __init__(self, x: Number, y: Number, /): ...




    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: U16Vector2) -> U16Vector2: ...
    @overload
    def __add__(self, other: Number) -> U16Vector2: ...
    @overload
    def __radd__(self, other: U16Vector2) -> U16Vector2: ...
    @overload
    def __radd__(self, other: Number) -> U16Vector2: ...

    @overload
    def __sub__(self, other: U16Vector2) -> U16Vector2: ...
    @overload
    def __sub__(self, other: Number) -> U16Vector2: ...
    @overload
    def __rsub__(self, other: U16Vector2) -> U16Vector2: ...
    @overload
    def __rsub__(self, other: Number) -> U16Vector2: ...

    @overload
    def __mul__(self, other: U16Vector2) -> U16Vector2: ...
    @overload
    def __mul__(self, other: Number) -> U16Vector2: ...
    @overload
    def __rmul__(self, other: U16Vector2) -> U16Vector2: ...
    @overload
    def __rmul__(self, other: Number) -> U16Vector2: ...




    @overload
    def __truediv__(self, other: U16Vector2) -> U16Vector2: ...
    @overload
    def __truediv__(self, other: Number) -> U16Vector2: ...
    @overload
    def __rtruediv__(self, other: U16Vector2) -> U16Vector2: ...
    @overload
    def __rtruediv__(self, other: Number) -> U16Vector2: ...



    def __neg__(self) -> U16Vector2: ...


    def __abs__(self) -> U16Vector2: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class I32Vector2:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...


    @overload
    def __init__(self, x: Number, y: Number, /): ...




    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: I32Vector2) -> I32Vector2: ...
    @overload
    def __add__(self, other: Number) -> I32Vector2: ...
    @overload
    def __radd__(self, other: I32Vector2) -> I32Vector2: ...
    @overload
    def __radd__(self, other: Number) -> I32Vector2: ...

    @overload
    def __sub__(self, other: I32Vector2) -> I32Vector2: ...
    @overload
    def __sub__(self, other: Number) -> I32Vector2: ...
    @overload
    def __rsub__(self, other: I32Vector2) -> I32Vector2: ...
    @overload
    def __rsub__(self, other: Number) -> I32Vector2: ...

    @overload
    def __mul__(self, other: I32Vector2) -> I32Vector2: ...
    @overload
    def __mul__(self, other: Number) -> I32Vector2: ...
    @overload
    def __rmul__(self, other: I32Vector2) -> I32Vector2: ...
    @overload
    def __rmul__(self, other: Number) -> I32Vector2: ...




    @overload
    def __truediv__(self, other: I32Vector2) -> I32Vector2: ...
    @overload
    def __truediv__(self, other: Number) -> I32Vector2: ...
    @overload
    def __rtruediv__(self, other: I32Vector2) -> I32Vector2: ...
    @overload
    def __rtruediv__(self, other: Number) -> I32Vector2: ...




    def __abs__(self) -> I32Vector2: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class U32Vector2:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...


    @overload
    def __init__(self, x: Number, y: Number, /): ...




    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: U32Vector2) -> U32Vector2: ...
    @overload
    def __add__(self, other: Number) -> U32Vector2: ...
    @overload
    def __radd__(self, other: U32Vector2) -> U32Vector2: ...
    @overload
    def __radd__(self, other: Number) -> U32Vector2: ...

    @overload
    def __sub__(self, other: U32Vector2) -> U32Vector2: ...
    @overload
    def __sub__(self, other: Number) -> U32Vector2: ...
    @overload
    def __rsub__(self, other: U32Vector2) -> U32Vector2: ...
    @overload
    def __rsub__(self, other: Number) -> U32Vector2: ...

    @overload
    def __mul__(self, other: U32Vector2) -> U32Vector2: ...
    @overload
    def __mul__(self, other: Number) -> U32Vector2: ...
    @overload
    def __rmul__(self, other: U32Vector2) -> U32Vector2: ...
    @overload
    def __rmul__(self, other: Number) -> U32Vector2: ...




    @overload
    def __truediv__(self, other: U32Vector2) -> U32Vector2: ...
    @overload
    def __truediv__(self, other: Number) -> U32Vector2: ...
    @overload
    def __rtruediv__(self, other: U32Vector2) -> U32Vector2: ...
    @overload
    def __rtruediv__(self, other: Number) -> U32Vector2: ...



    def __neg__(self) -> U32Vector2: ...


    def __abs__(self) -> U32Vector2: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class IVector2:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...


    @overload
    def __init__(self, x: Number, y: Number, /): ...




    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: IVector2) -> IVector2: ...
    @overload
    def __add__(self, other: Number) -> IVector2: ...
    @overload
    def __radd__(self, other: IVector2) -> IVector2: ...
    @overload
    def __radd__(self, other: Number) -> IVector2: ...

    @overload
    def __sub__(self, other: IVector2) -> IVector2: ...
    @overload
    def __sub__(self, other: Number) -> IVector2: ...
    @overload
    def __rsub__(self, other: IVector2) -> IVector2: ...
    @overload
    def __rsub__(self, other: Number) -> IVector2: ...

    @overload
    def __mul__(self, other: IVector2) -> IVector2: ...
    @overload
    def __mul__(self, other: Number) -> IVector2: ...
    @overload
    def __rmul__(self, other: IVector2) -> IVector2: ...
    @overload
    def __rmul__(self, other: Number) -> IVector2: ...




    @overload
    def __truediv__(self, other: IVector2) -> IVector2: ...
    @overload
    def __truediv__(self, other: Number) -> IVector2: ...
    @overload
    def __rtruediv__(self, other: IVector2) -> IVector2: ...
    @overload
    def __rtruediv__(self, other: Number) -> IVector2: ...




    def __abs__(self) -> IVector2: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class UVector2:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...


    @overload
    def __init__(self, x: Number, y: Number, /): ...




    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: UVector2) -> UVector2: ...
    @overload
    def __add__(self, other: Number) -> UVector2: ...
    @overload
    def __radd__(self, other: UVector2) -> UVector2: ...
    @overload
    def __radd__(self, other: Number) -> UVector2: ...

    @overload
    def __sub__(self, other: UVector2) -> UVector2: ...
    @overload
    def __sub__(self, other: Number) -> UVector2: ...
    @overload
    def __rsub__(self, other: UVector2) -> UVector2: ...
    @overload
    def __rsub__(self, other: Number) -> UVector2: ...

    @overload
    def __mul__(self, other: UVector2) -> UVector2: ...
    @overload
    def __mul__(self, other: Number) -> UVector2: ...
    @overload
    def __rmul__(self, other: UVector2) -> UVector2: ...
    @overload
    def __rmul__(self, other: Number) -> UVector2: ...




    @overload
    def __truediv__(self, other: UVector2) -> UVector2: ...
    @overload
    def __truediv__(self, other: Number) -> UVector2: ...
    @overload
    def __rtruediv__(self, other: UVector2) -> UVector2: ...
    @overload
    def __rtruediv__(self, other: Number) -> UVector2: ...



    def __neg__(self) -> UVector2: ...


    def __abs__(self) -> UVector2: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class I64Vector2:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...


    @overload
    def __init__(self, x: Number, y: Number, /): ...




    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: I64Vector2) -> I64Vector2: ...
    @overload
    def __add__(self, other: Number) -> I64Vector2: ...
    @overload
    def __radd__(self, other: I64Vector2) -> I64Vector2: ...
    @overload
    def __radd__(self, other: Number) -> I64Vector2: ...

    @overload
    def __sub__(self, other: I64Vector2) -> I64Vector2: ...
    @overload
    def __sub__(self, other: Number) -> I64Vector2: ...
    @overload
    def __rsub__(self, other: I64Vector2) -> I64Vector2: ...
    @overload
    def __rsub__(self, other: Number) -> I64Vector2: ...

    @overload
    def __mul__(self, other: I64Vector2) -> I64Vector2: ...
    @overload
    def __mul__(self, other: Number) -> I64Vector2: ...
    @overload
    def __rmul__(self, other: I64Vector2) -> I64Vector2: ...
    @overload
    def __rmul__(self, other: Number) -> I64Vector2: ...




    @overload
    def __truediv__(self, other: I64Vector2) -> I64Vector2: ...
    @overload
    def __truediv__(self, other: Number) -> I64Vector2: ...
    @overload
    def __rtruediv__(self, other: I64Vector2) -> I64Vector2: ...
    @overload
    def __rtruediv__(self, other: Number) -> I64Vector2: ...




    def __abs__(self) -> I64Vector2: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class U64Vector2:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...


    @overload
    def __init__(self, x: Number, y: Number, /): ...




    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: U64Vector2) -> U64Vector2: ...
    @overload
    def __add__(self, other: Number) -> U64Vector2: ...
    @overload
    def __radd__(self, other: U64Vector2) -> U64Vector2: ...
    @overload
    def __radd__(self, other: Number) -> U64Vector2: ...

    @overload
    def __sub__(self, other: U64Vector2) -> U64Vector2: ...
    @overload
    def __sub__(self, other: Number) -> U64Vector2: ...
    @overload
    def __rsub__(self, other: U64Vector2) -> U64Vector2: ...
    @overload
    def __rsub__(self, other: Number) -> U64Vector2: ...

    @overload
    def __mul__(self, other: U64Vector2) -> U64Vector2: ...
    @overload
    def __mul__(self, other: Number) -> U64Vector2: ...
    @overload
    def __rmul__(self, other: U64Vector2) -> U64Vector2: ...
    @overload
    def __rmul__(self, other: Number) -> U64Vector2: ...




    @overload
    def __truediv__(self, other: U64Vector2) -> U64Vector2: ...
    @overload
    def __truediv__(self, other: Number) -> U64Vector2: ...
    @overload
    def __rtruediv__(self, other: U64Vector2) -> U64Vector2: ...
    @overload
    def __rtruediv__(self, other: Number) -> U64Vector2: ...



    def __neg__(self) -> U64Vector2: ...


    def __abs__(self) -> U64Vector2: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class BVector3:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...



    @overload
    def __init__(self, x: Number, y: Number, z: Number, /): ...



    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> bool: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: BVector3) -> BVector3: ...
    @overload
    def __add__(self, other: Number) -> BVector3: ...
    @overload
    def __radd__(self, other: BVector3) -> BVector3: ...
    @overload
    def __radd__(self, other: Number) -> BVector3: ...

    @overload
    def __sub__(self, other: BVector3) -> BVector3: ...
    @overload
    def __sub__(self, other: Number) -> BVector3: ...
    @overload
    def __rsub__(self, other: BVector3) -> BVector3: ...
    @overload
    def __rsub__(self, other: Number) -> BVector3: ...

    @overload
    def __mul__(self, other: BVector3) -> BVector3: ...
    @overload
    def __mul__(self, other: Number) -> BVector3: ...
    @overload
    def __rmul__(self, other: BVector3) -> BVector3: ...
    @overload
    def __rmul__(self, other: Number) -> BVector3: ...







    def __abs__(self) -> BVector3: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> bool: ...

    @property
    def y(self) -> bool: ...

    @property
    def z(self) -> bool: ...

    @property
    def w(self) -> bool: ...



    @property
    def xx(self) -> tuple[bool, bool, ]: ...

    @property
    def xy(self) -> tuple[bool, bool, ]: ...

    @property
    def xz(self) -> tuple[bool, bool, ]: ...

    @property
    def xw(self) -> tuple[bool, bool, ]: ...

    @property
    def yy(self) -> tuple[bool, bool, ]: ...

    @property
    def yz(self) -> tuple[bool, bool, ]: ...

    @property
    def yw(self) -> tuple[bool, bool, ]: ...

    @property
    def zz(self) -> tuple[bool, bool, ]: ...

    @property
    def zw(self) -> tuple[bool, bool, ]: ...

    @property
    def ww(self) -> tuple[bool, bool, ]: ...



    @property
    def xxx(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def xxy(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def xxz(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def xxw(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def xyy(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def xyz(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def xyw(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def xzz(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def xzw(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def xww(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def yyy(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def yyz(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def yyw(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def yzz(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def yzw(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def yww(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def zzz(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def zzw(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def zww(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def www(self) -> tuple[bool, bool, bool, ]: ...





    @property
    def r(self) -> bool: ...

    @property
    def g(self) -> bool: ...

    @property
    def b(self) -> bool: ...

    @property
    def a(self) -> bool: ...



    @property
    def rr(self) -> tuple[bool, bool, ]: ...

    @property
    def rg(self) -> tuple[bool, bool, ]: ...

    @property
    def rb(self) -> tuple[bool, bool, ]: ...

    @property
    def ra(self) -> tuple[bool, bool, ]: ...

    @property
    def gg(self) -> tuple[bool, bool, ]: ...

    @property
    def gb(self) -> tuple[bool, bool, ]: ...

    @property
    def ga(self) -> tuple[bool, bool, ]: ...

    @property
    def bb(self) -> tuple[bool, bool, ]: ...

    @property
    def ba(self) -> tuple[bool, bool, ]: ...

    @property
    def aa(self) -> tuple[bool, bool, ]: ...



    @property
    def rrr(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def rrg(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def rrb(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def rra(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def rgg(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def rgb(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def rga(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def rbb(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def rba(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def raa(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def ggg(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def ggb(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def gga(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def gbb(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def gba(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def gaa(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def bbb(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def bba(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def baa(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def aaa(self) -> tuple[bool, bool, bool, ]: ...





    @property
    def s(self) -> bool: ...

    @property
    def t(self) -> bool: ...

    @property
    def q(self) -> bool: ...

    @property
    def p(self) -> bool: ...



    @property
    def ss(self) -> tuple[bool, bool, ]: ...

    @property
    def st(self) -> tuple[bool, bool, ]: ...

    @property
    def sq(self) -> tuple[bool, bool, ]: ...

    @property
    def sp(self) -> tuple[bool, bool, ]: ...

    @property
    def tt(self) -> tuple[bool, bool, ]: ...

    @property
    def tq(self) -> tuple[bool, bool, ]: ...

    @property
    def tp(self) -> tuple[bool, bool, ]: ...

    @property
    def qq(self) -> tuple[bool, bool, ]: ...

    @property
    def qp(self) -> tuple[bool, bool, ]: ...

    @property
    def pp(self) -> tuple[bool, bool, ]: ...



    @property
    def sss(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def sst(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def ssq(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def ssp(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def stt(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def stq(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def stp(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def sqq(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def sqp(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def spp(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def ttt(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def ttq(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def ttp(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def tqq(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def tqp(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def tpp(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def qqq(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def qqp(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def qpp(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def ppp(self) -> tuple[bool, bool, bool, ]: ...





    @property
    def u(self) -> bool: ...

    @property
    def v(self) -> bool: ...



    @property
    def uu(self) -> tuple[bool, bool, ]: ...

    @property
    def uv(self) -> tuple[bool, bool, ]: ...

    @property
    def vv(self) -> tuple[bool, bool, ]: ...



    @property
    def uuu(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def uuv(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def uvv(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def vvv(self) -> tuple[bool, bool, bool, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[bool, bool]: ...









@final
class DVector3:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...



    @overload
    def __init__(self, x: Number, y: Number, z: Number, /): ...



    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: DVector3) -> DVector3: ...
    @overload
    def __add__(self, other: Number) -> DVector3: ...
    @overload
    def __radd__(self, other: DVector3) -> DVector3: ...
    @overload
    def __radd__(self, other: Number) -> DVector3: ...

    @overload
    def __sub__(self, other: DVector3) -> DVector3: ...
    @overload
    def __sub__(self, other: Number) -> DVector3: ...
    @overload
    def __rsub__(self, other: DVector3) -> DVector3: ...
    @overload
    def __rsub__(self, other: Number) -> DVector3: ...

    @overload
    def __mul__(self, other: DVector3) -> DVector3: ...
    @overload
    def __mul__(self, other: Number) -> DVector3: ...
    @overload
    def __rmul__(self, other: DVector3) -> DVector3: ...
    @overload
    def __rmul__(self, other: Number) -> DVector3: ...




    @overload
    def __truediv__(self, other: DVector3) -> DVector3: ...
    @overload
    def __truediv__(self, other: Number) -> DVector3: ...
    @overload
    def __rtruediv__(self, other: DVector3) -> DVector3: ...
    @overload
    def __rtruediv__(self, other: Number) -> DVector3: ...




    def __abs__(self) -> DVector3: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...



    @property
    def xxx(self) -> tuple[int, int, int, ]: ...

    @property
    def xxy(self) -> tuple[int, int, int, ]: ...

    @property
    def xxz(self) -> tuple[int, int, int, ]: ...

    @property
    def xxw(self) -> tuple[int, int, int, ]: ...

    @property
    def xyy(self) -> tuple[int, int, int, ]: ...

    @property
    def xyz(self) -> tuple[int, int, int, ]: ...

    @property
    def xyw(self) -> tuple[int, int, int, ]: ...

    @property
    def xzz(self) -> tuple[int, int, int, ]: ...

    @property
    def xzw(self) -> tuple[int, int, int, ]: ...

    @property
    def xww(self) -> tuple[int, int, int, ]: ...

    @property
    def yyy(self) -> tuple[int, int, int, ]: ...

    @property
    def yyz(self) -> tuple[int, int, int, ]: ...

    @property
    def yyw(self) -> tuple[int, int, int, ]: ...

    @property
    def yzz(self) -> tuple[int, int, int, ]: ...

    @property
    def yzw(self) -> tuple[int, int, int, ]: ...

    @property
    def yww(self) -> tuple[int, int, int, ]: ...

    @property
    def zzz(self) -> tuple[int, int, int, ]: ...

    @property
    def zzw(self) -> tuple[int, int, int, ]: ...

    @property
    def zww(self) -> tuple[int, int, int, ]: ...

    @property
    def www(self) -> tuple[int, int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...



    @property
    def rrr(self) -> tuple[int, int, int, ]: ...

    @property
    def rrg(self) -> tuple[int, int, int, ]: ...

    @property
    def rrb(self) -> tuple[int, int, int, ]: ...

    @property
    def rra(self) -> tuple[int, int, int, ]: ...

    @property
    def rgg(self) -> tuple[int, int, int, ]: ...

    @property
    def rgb(self) -> tuple[int, int, int, ]: ...

    @property
    def rga(self) -> tuple[int, int, int, ]: ...

    @property
    def rbb(self) -> tuple[int, int, int, ]: ...

    @property
    def rba(self) -> tuple[int, int, int, ]: ...

    @property
    def raa(self) -> tuple[int, int, int, ]: ...

    @property
    def ggg(self) -> tuple[int, int, int, ]: ...

    @property
    def ggb(self) -> tuple[int, int, int, ]: ...

    @property
    def gga(self) -> tuple[int, int, int, ]: ...

    @property
    def gbb(self) -> tuple[int, int, int, ]: ...

    @property
    def gba(self) -> tuple[int, int, int, ]: ...

    @property
    def gaa(self) -> tuple[int, int, int, ]: ...

    @property
    def bbb(self) -> tuple[int, int, int, ]: ...

    @property
    def bba(self) -> tuple[int, int, int, ]: ...

    @property
    def baa(self) -> tuple[int, int, int, ]: ...

    @property
    def aaa(self) -> tuple[int, int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...



    @property
    def sss(self) -> tuple[int, int, int, ]: ...

    @property
    def sst(self) -> tuple[int, int, int, ]: ...

    @property
    def ssq(self) -> tuple[int, int, int, ]: ...

    @property
    def ssp(self) -> tuple[int, int, int, ]: ...

    @property
    def stt(self) -> tuple[int, int, int, ]: ...

    @property
    def stq(self) -> tuple[int, int, int, ]: ...

    @property
    def stp(self) -> tuple[int, int, int, ]: ...

    @property
    def sqq(self) -> tuple[int, int, int, ]: ...

    @property
    def sqp(self) -> tuple[int, int, int, ]: ...

    @property
    def spp(self) -> tuple[int, int, int, ]: ...

    @property
    def ttt(self) -> tuple[int, int, int, ]: ...

    @property
    def ttq(self) -> tuple[int, int, int, ]: ...

    @property
    def ttp(self) -> tuple[int, int, int, ]: ...

    @property
    def tqq(self) -> tuple[int, int, int, ]: ...

    @property
    def tqp(self) -> tuple[int, int, int, ]: ...

    @property
    def tpp(self) -> tuple[int, int, int, ]: ...

    @property
    def qqq(self) -> tuple[int, int, int, ]: ...

    @property
    def qqp(self) -> tuple[int, int, int, ]: ...

    @property
    def qpp(self) -> tuple[int, int, int, ]: ...

    @property
    def ppp(self) -> tuple[int, int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...



    @property
    def uuu(self) -> tuple[int, int, int, ]: ...

    @property
    def uuv(self) -> tuple[int, int, int, ]: ...

    @property
    def uvv(self) -> tuple[int, int, int, ]: ...

    @property
    def vvv(self) -> tuple[int, int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class FVector3:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...



    @overload
    def __init__(self, x: Number, y: Number, z: Number, /): ...



    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> float: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: FVector3) -> FVector3: ...
    @overload
    def __add__(self, other: Number) -> FVector3: ...
    @overload
    def __radd__(self, other: FVector3) -> FVector3: ...
    @overload
    def __radd__(self, other: Number) -> FVector3: ...

    @overload
    def __sub__(self, other: FVector3) -> FVector3: ...
    @overload
    def __sub__(self, other: Number) -> FVector3: ...
    @overload
    def __rsub__(self, other: FVector3) -> FVector3: ...
    @overload
    def __rsub__(self, other: Number) -> FVector3: ...

    @overload
    def __mul__(self, other: FVector3) -> FVector3: ...
    @overload
    def __mul__(self, other: Number) -> FVector3: ...
    @overload
    def __rmul__(self, other: FVector3) -> FVector3: ...
    @overload
    def __rmul__(self, other: Number) -> FVector3: ...


    def __matmul__(self, other: FVector3) -> FVector3: ...
    def __rmatmul__(self, other: FVector3) -> FVector3: ...

    @overload
    def __mod__(self, other: FVector3) -> FVector3: ...
    @overload
    def __mod__(self, other: Number) -> FVector3: ...
    @overload
    def __rmod__(self, other: FVector3) -> FVector3: ...
    @overload
    def __rmod__(self, other: Number) -> FVector3: ...

    @overload
    def __pow__(self, other: FVector3) -> FVector3: ...
    @overload
    def __pow__(self, other: Number) -> FVector3: ...
    @overload
    def __rpow__(self, other: FVector3) -> FVector3: ...
    @overload
    def __rpow__(self, other: Number) -> FVector3: ...



    @overload
    def __truediv__(self, other: FVector3) -> FVector3: ...
    @overload
    def __truediv__(self, other: Number) -> FVector3: ...
    @overload
    def __rtruediv__(self, other: FVector3) -> FVector3: ...
    @overload
    def __rtruediv__(self, other: Number) -> FVector3: ...




    def __abs__(self) -> FVector3: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> float: ...

    @property
    def y(self) -> float: ...

    @property
    def z(self) -> float: ...

    @property
    def w(self) -> float: ...



    @property
    def xx(self) -> tuple[float, float, ]: ...

    @property
    def xy(self) -> tuple[float, float, ]: ...

    @property
    def xz(self) -> tuple[float, float, ]: ...

    @property
    def xw(self) -> tuple[float, float, ]: ...

    @property
    def yy(self) -> tuple[float, float, ]: ...

    @property
    def yz(self) -> tuple[float, float, ]: ...

    @property
    def yw(self) -> tuple[float, float, ]: ...

    @property
    def zz(self) -> tuple[float, float, ]: ...

    @property
    def zw(self) -> tuple[float, float, ]: ...

    @property
    def ww(self) -> tuple[float, float, ]: ...



    @property
    def xxx(self) -> tuple[float, float, float, ]: ...

    @property
    def xxy(self) -> tuple[float, float, float, ]: ...

    @property
    def xxz(self) -> tuple[float, float, float, ]: ...

    @property
    def xxw(self) -> tuple[float, float, float, ]: ...

    @property
    def xyy(self) -> tuple[float, float, float, ]: ...

    @property
    def xyz(self) -> tuple[float, float, float, ]: ...

    @property
    def xyw(self) -> tuple[float, float, float, ]: ...

    @property
    def xzz(self) -> tuple[float, float, float, ]: ...

    @property
    def xzw(self) -> tuple[float, float, float, ]: ...

    @property
    def xww(self) -> tuple[float, float, float, ]: ...

    @property
    def yyy(self) -> tuple[float, float, float, ]: ...

    @property
    def yyz(self) -> tuple[float, float, float, ]: ...

    @property
    def yyw(self) -> tuple[float, float, float, ]: ...

    @property
    def yzz(self) -> tuple[float, float, float, ]: ...

    @property
    def yzw(self) -> tuple[float, float, float, ]: ...

    @property
    def yww(self) -> tuple[float, float, float, ]: ...

    @property
    def zzz(self) -> tuple[float, float, float, ]: ...

    @property
    def zzw(self) -> tuple[float, float, float, ]: ...

    @property
    def zww(self) -> tuple[float, float, float, ]: ...

    @property
    def www(self) -> tuple[float, float, float, ]: ...





    @property
    def r(self) -> float: ...

    @property
    def g(self) -> float: ...

    @property
    def b(self) -> float: ...

    @property
    def a(self) -> float: ...



    @property
    def rr(self) -> tuple[float, float, ]: ...

    @property
    def rg(self) -> tuple[float, float, ]: ...

    @property
    def rb(self) -> tuple[float, float, ]: ...

    @property
    def ra(self) -> tuple[float, float, ]: ...

    @property
    def gg(self) -> tuple[float, float, ]: ...

    @property
    def gb(self) -> tuple[float, float, ]: ...

    @property
    def ga(self) -> tuple[float, float, ]: ...

    @property
    def bb(self) -> tuple[float, float, ]: ...

    @property
    def ba(self) -> tuple[float, float, ]: ...

    @property
    def aa(self) -> tuple[float, float, ]: ...



    @property
    def rrr(self) -> tuple[float, float, float, ]: ...

    @property
    def rrg(self) -> tuple[float, float, float, ]: ...

    @property
    def rrb(self) -> tuple[float, float, float, ]: ...

    @property
    def rra(self) -> tuple[float, float, float, ]: ...

    @property
    def rgg(self) -> tuple[float, float, float, ]: ...

    @property
    def rgb(self) -> tuple[float, float, float, ]: ...

    @property
    def rga(self) -> tuple[float, float, float, ]: ...

    @property
    def rbb(self) -> tuple[float, float, float, ]: ...

    @property
    def rba(self) -> tuple[float, float, float, ]: ...

    @property
    def raa(self) -> tuple[float, float, float, ]: ...

    @property
    def ggg(self) -> tuple[float, float, float, ]: ...

    @property
    def ggb(self) -> tuple[float, float, float, ]: ...

    @property
    def gga(self) -> tuple[float, float, float, ]: ...

    @property
    def gbb(self) -> tuple[float, float, float, ]: ...

    @property
    def gba(self) -> tuple[float, float, float, ]: ...

    @property
    def gaa(self) -> tuple[float, float, float, ]: ...

    @property
    def bbb(self) -> tuple[float, float, float, ]: ...

    @property
    def bba(self) -> tuple[float, float, float, ]: ...

    @property
    def baa(self) -> tuple[float, float, float, ]: ...

    @property
    def aaa(self) -> tuple[float, float, float, ]: ...





    @property
    def s(self) -> float: ...

    @property
    def t(self) -> float: ...

    @property
    def q(self) -> float: ...

    @property
    def p(self) -> float: ...



    @property
    def ss(self) -> tuple[float, float, ]: ...

    @property
    def st(self) -> tuple[float, float, ]: ...

    @property
    def sq(self) -> tuple[float, float, ]: ...

    @property
    def sp(self) -> tuple[float, float, ]: ...

    @property
    def tt(self) -> tuple[float, float, ]: ...

    @property
    def tq(self) -> tuple[float, float, ]: ...

    @property
    def tp(self) -> tuple[float, float, ]: ...

    @property
    def qq(self) -> tuple[float, float, ]: ...

    @property
    def qp(self) -> tuple[float, float, ]: ...

    @property
    def pp(self) -> tuple[float, float, ]: ...



    @property
    def sss(self) -> tuple[float, float, float, ]: ...

    @property
    def sst(self) -> tuple[float, float, float, ]: ...

    @property
    def ssq(self) -> tuple[float, float, float, ]: ...

    @property
    def ssp(self) -> tuple[float, float, float, ]: ...

    @property
    def stt(self) -> tuple[float, float, float, ]: ...

    @property
    def stq(self) -> tuple[float, float, float, ]: ...

    @property
    def stp(self) -> tuple[float, float, float, ]: ...

    @property
    def sqq(self) -> tuple[float, float, float, ]: ...

    @property
    def sqp(self) -> tuple[float, float, float, ]: ...

    @property
    def spp(self) -> tuple[float, float, float, ]: ...

    @property
    def ttt(self) -> tuple[float, float, float, ]: ...

    @property
    def ttq(self) -> tuple[float, float, float, ]: ...

    @property
    def ttp(self) -> tuple[float, float, float, ]: ...

    @property
    def tqq(self) -> tuple[float, float, float, ]: ...

    @property
    def tqp(self) -> tuple[float, float, float, ]: ...

    @property
    def tpp(self) -> tuple[float, float, float, ]: ...

    @property
    def qqq(self) -> tuple[float, float, float, ]: ...

    @property
    def qqp(self) -> tuple[float, float, float, ]: ...

    @property
    def qpp(self) -> tuple[float, float, float, ]: ...

    @property
    def ppp(self) -> tuple[float, float, float, ]: ...





    @property
    def u(self) -> float: ...

    @property
    def v(self) -> float: ...



    @property
    def uu(self) -> tuple[float, float, ]: ...

    @property
    def uv(self) -> tuple[float, float, ]: ...

    @property
    def vv(self) -> tuple[float, float, ]: ...



    @property
    def uuu(self) -> tuple[float, float, float, ]: ...

    @property
    def uuv(self) -> tuple[float, float, float, ]: ...

    @property
    def uvv(self) -> tuple[float, float, float, ]: ...

    @property
    def vvv(self) -> tuple[float, float, float, ]: ...





    @property
    def magnitude(self) -> float: ...

    def cross(self, other: FVector3, /) -> FVector3: ...
    def normalize(self) -> float: ...
    def distance(self, other: FVector3, /) -> float: ...


    @classmethod
    def get_limits(cls) -> tuple[float, float]: ...









@final
class I8Vector3:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...



    @overload
    def __init__(self, x: Number, y: Number, z: Number, /): ...



    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: I8Vector3) -> I8Vector3: ...
    @overload
    def __add__(self, other: Number) -> I8Vector3: ...
    @overload
    def __radd__(self, other: I8Vector3) -> I8Vector3: ...
    @overload
    def __radd__(self, other: Number) -> I8Vector3: ...

    @overload
    def __sub__(self, other: I8Vector3) -> I8Vector3: ...
    @overload
    def __sub__(self, other: Number) -> I8Vector3: ...
    @overload
    def __rsub__(self, other: I8Vector3) -> I8Vector3: ...
    @overload
    def __rsub__(self, other: Number) -> I8Vector3: ...

    @overload
    def __mul__(self, other: I8Vector3) -> I8Vector3: ...
    @overload
    def __mul__(self, other: Number) -> I8Vector3: ...
    @overload
    def __rmul__(self, other: I8Vector3) -> I8Vector3: ...
    @overload
    def __rmul__(self, other: Number) -> I8Vector3: ...




    @overload
    def __truediv__(self, other: I8Vector3) -> I8Vector3: ...
    @overload
    def __truediv__(self, other: Number) -> I8Vector3: ...
    @overload
    def __rtruediv__(self, other: I8Vector3) -> I8Vector3: ...
    @overload
    def __rtruediv__(self, other: Number) -> I8Vector3: ...




    def __abs__(self) -> I8Vector3: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...



    @property
    def xxx(self) -> tuple[int, int, int, ]: ...

    @property
    def xxy(self) -> tuple[int, int, int, ]: ...

    @property
    def xxz(self) -> tuple[int, int, int, ]: ...

    @property
    def xxw(self) -> tuple[int, int, int, ]: ...

    @property
    def xyy(self) -> tuple[int, int, int, ]: ...

    @property
    def xyz(self) -> tuple[int, int, int, ]: ...

    @property
    def xyw(self) -> tuple[int, int, int, ]: ...

    @property
    def xzz(self) -> tuple[int, int, int, ]: ...

    @property
    def xzw(self) -> tuple[int, int, int, ]: ...

    @property
    def xww(self) -> tuple[int, int, int, ]: ...

    @property
    def yyy(self) -> tuple[int, int, int, ]: ...

    @property
    def yyz(self) -> tuple[int, int, int, ]: ...

    @property
    def yyw(self) -> tuple[int, int, int, ]: ...

    @property
    def yzz(self) -> tuple[int, int, int, ]: ...

    @property
    def yzw(self) -> tuple[int, int, int, ]: ...

    @property
    def yww(self) -> tuple[int, int, int, ]: ...

    @property
    def zzz(self) -> tuple[int, int, int, ]: ...

    @property
    def zzw(self) -> tuple[int, int, int, ]: ...

    @property
    def zww(self) -> tuple[int, int, int, ]: ...

    @property
    def www(self) -> tuple[int, int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...



    @property
    def rrr(self) -> tuple[int, int, int, ]: ...

    @property
    def rrg(self) -> tuple[int, int, int, ]: ...

    @property
    def rrb(self) -> tuple[int, int, int, ]: ...

    @property
    def rra(self) -> tuple[int, int, int, ]: ...

    @property
    def rgg(self) -> tuple[int, int, int, ]: ...

    @property
    def rgb(self) -> tuple[int, int, int, ]: ...

    @property
    def rga(self) -> tuple[int, int, int, ]: ...

    @property
    def rbb(self) -> tuple[int, int, int, ]: ...

    @property
    def rba(self) -> tuple[int, int, int, ]: ...

    @property
    def raa(self) -> tuple[int, int, int, ]: ...

    @property
    def ggg(self) -> tuple[int, int, int, ]: ...

    @property
    def ggb(self) -> tuple[int, int, int, ]: ...

    @property
    def gga(self) -> tuple[int, int, int, ]: ...

    @property
    def gbb(self) -> tuple[int, int, int, ]: ...

    @property
    def gba(self) -> tuple[int, int, int, ]: ...

    @property
    def gaa(self) -> tuple[int, int, int, ]: ...

    @property
    def bbb(self) -> tuple[int, int, int, ]: ...

    @property
    def bba(self) -> tuple[int, int, int, ]: ...

    @property
    def baa(self) -> tuple[int, int, int, ]: ...

    @property
    def aaa(self) -> tuple[int, int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...



    @property
    def sss(self) -> tuple[int, int, int, ]: ...

    @property
    def sst(self) -> tuple[int, int, int, ]: ...

    @property
    def ssq(self) -> tuple[int, int, int, ]: ...

    @property
    def ssp(self) -> tuple[int, int, int, ]: ...

    @property
    def stt(self) -> tuple[int, int, int, ]: ...

    @property
    def stq(self) -> tuple[int, int, int, ]: ...

    @property
    def stp(self) -> tuple[int, int, int, ]: ...

    @property
    def sqq(self) -> tuple[int, int, int, ]: ...

    @property
    def sqp(self) -> tuple[int, int, int, ]: ...

    @property
    def spp(self) -> tuple[int, int, int, ]: ...

    @property
    def ttt(self) -> tuple[int, int, int, ]: ...

    @property
    def ttq(self) -> tuple[int, int, int, ]: ...

    @property
    def ttp(self) -> tuple[int, int, int, ]: ...

    @property
    def tqq(self) -> tuple[int, int, int, ]: ...

    @property
    def tqp(self) -> tuple[int, int, int, ]: ...

    @property
    def tpp(self) -> tuple[int, int, int, ]: ...

    @property
    def qqq(self) -> tuple[int, int, int, ]: ...

    @property
    def qqp(self) -> tuple[int, int, int, ]: ...

    @property
    def qpp(self) -> tuple[int, int, int, ]: ...

    @property
    def ppp(self) -> tuple[int, int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...



    @property
    def uuu(self) -> tuple[int, int, int, ]: ...

    @property
    def uuv(self) -> tuple[int, int, int, ]: ...

    @property
    def uvv(self) -> tuple[int, int, int, ]: ...

    @property
    def vvv(self) -> tuple[int, int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class U8Vector3:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...



    @overload
    def __init__(self, x: Number, y: Number, z: Number, /): ...



    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: U8Vector3) -> U8Vector3: ...
    @overload
    def __add__(self, other: Number) -> U8Vector3: ...
    @overload
    def __radd__(self, other: U8Vector3) -> U8Vector3: ...
    @overload
    def __radd__(self, other: Number) -> U8Vector3: ...

    @overload
    def __sub__(self, other: U8Vector3) -> U8Vector3: ...
    @overload
    def __sub__(self, other: Number) -> U8Vector3: ...
    @overload
    def __rsub__(self, other: U8Vector3) -> U8Vector3: ...
    @overload
    def __rsub__(self, other: Number) -> U8Vector3: ...

    @overload
    def __mul__(self, other: U8Vector3) -> U8Vector3: ...
    @overload
    def __mul__(self, other: Number) -> U8Vector3: ...
    @overload
    def __rmul__(self, other: U8Vector3) -> U8Vector3: ...
    @overload
    def __rmul__(self, other: Number) -> U8Vector3: ...




    @overload
    def __truediv__(self, other: U8Vector3) -> U8Vector3: ...
    @overload
    def __truediv__(self, other: Number) -> U8Vector3: ...
    @overload
    def __rtruediv__(self, other: U8Vector3) -> U8Vector3: ...
    @overload
    def __rtruediv__(self, other: Number) -> U8Vector3: ...



    def __neg__(self) -> U8Vector3: ...


    def __abs__(self) -> U8Vector3: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...



    @property
    def xxx(self) -> tuple[int, int, int, ]: ...

    @property
    def xxy(self) -> tuple[int, int, int, ]: ...

    @property
    def xxz(self) -> tuple[int, int, int, ]: ...

    @property
    def xxw(self) -> tuple[int, int, int, ]: ...

    @property
    def xyy(self) -> tuple[int, int, int, ]: ...

    @property
    def xyz(self) -> tuple[int, int, int, ]: ...

    @property
    def xyw(self) -> tuple[int, int, int, ]: ...

    @property
    def xzz(self) -> tuple[int, int, int, ]: ...

    @property
    def xzw(self) -> tuple[int, int, int, ]: ...

    @property
    def xww(self) -> tuple[int, int, int, ]: ...

    @property
    def yyy(self) -> tuple[int, int, int, ]: ...

    @property
    def yyz(self) -> tuple[int, int, int, ]: ...

    @property
    def yyw(self) -> tuple[int, int, int, ]: ...

    @property
    def yzz(self) -> tuple[int, int, int, ]: ...

    @property
    def yzw(self) -> tuple[int, int, int, ]: ...

    @property
    def yww(self) -> tuple[int, int, int, ]: ...

    @property
    def zzz(self) -> tuple[int, int, int, ]: ...

    @property
    def zzw(self) -> tuple[int, int, int, ]: ...

    @property
    def zww(self) -> tuple[int, int, int, ]: ...

    @property
    def www(self) -> tuple[int, int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...



    @property
    def rrr(self) -> tuple[int, int, int, ]: ...

    @property
    def rrg(self) -> tuple[int, int, int, ]: ...

    @property
    def rrb(self) -> tuple[int, int, int, ]: ...

    @property
    def rra(self) -> tuple[int, int, int, ]: ...

    @property
    def rgg(self) -> tuple[int, int, int, ]: ...

    @property
    def rgb(self) -> tuple[int, int, int, ]: ...

    @property
    def rga(self) -> tuple[int, int, int, ]: ...

    @property
    def rbb(self) -> tuple[int, int, int, ]: ...

    @property
    def rba(self) -> tuple[int, int, int, ]: ...

    @property
    def raa(self) -> tuple[int, int, int, ]: ...

    @property
    def ggg(self) -> tuple[int, int, int, ]: ...

    @property
    def ggb(self) -> tuple[int, int, int, ]: ...

    @property
    def gga(self) -> tuple[int, int, int, ]: ...

    @property
    def gbb(self) -> tuple[int, int, int, ]: ...

    @property
    def gba(self) -> tuple[int, int, int, ]: ...

    @property
    def gaa(self) -> tuple[int, int, int, ]: ...

    @property
    def bbb(self) -> tuple[int, int, int, ]: ...

    @property
    def bba(self) -> tuple[int, int, int, ]: ...

    @property
    def baa(self) -> tuple[int, int, int, ]: ...

    @property
    def aaa(self) -> tuple[int, int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...



    @property
    def sss(self) -> tuple[int, int, int, ]: ...

    @property
    def sst(self) -> tuple[int, int, int, ]: ...

    @property
    def ssq(self) -> tuple[int, int, int, ]: ...

    @property
    def ssp(self) -> tuple[int, int, int, ]: ...

    @property
    def stt(self) -> tuple[int, int, int, ]: ...

    @property
    def stq(self) -> tuple[int, int, int, ]: ...

    @property
    def stp(self) -> tuple[int, int, int, ]: ...

    @property
    def sqq(self) -> tuple[int, int, int, ]: ...

    @property
    def sqp(self) -> tuple[int, int, int, ]: ...

    @property
    def spp(self) -> tuple[int, int, int, ]: ...

    @property
    def ttt(self) -> tuple[int, int, int, ]: ...

    @property
    def ttq(self) -> tuple[int, int, int, ]: ...

    @property
    def ttp(self) -> tuple[int, int, int, ]: ...

    @property
    def tqq(self) -> tuple[int, int, int, ]: ...

    @property
    def tqp(self) -> tuple[int, int, int, ]: ...

    @property
    def tpp(self) -> tuple[int, int, int, ]: ...

    @property
    def qqq(self) -> tuple[int, int, int, ]: ...

    @property
    def qqp(self) -> tuple[int, int, int, ]: ...

    @property
    def qpp(self) -> tuple[int, int, int, ]: ...

    @property
    def ppp(self) -> tuple[int, int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...



    @property
    def uuu(self) -> tuple[int, int, int, ]: ...

    @property
    def uuv(self) -> tuple[int, int, int, ]: ...

    @property
    def uvv(self) -> tuple[int, int, int, ]: ...

    @property
    def vvv(self) -> tuple[int, int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class I16Vector3:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...



    @overload
    def __init__(self, x: Number, y: Number, z: Number, /): ...



    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: I16Vector3) -> I16Vector3: ...
    @overload
    def __add__(self, other: Number) -> I16Vector3: ...
    @overload
    def __radd__(self, other: I16Vector3) -> I16Vector3: ...
    @overload
    def __radd__(self, other: Number) -> I16Vector3: ...

    @overload
    def __sub__(self, other: I16Vector3) -> I16Vector3: ...
    @overload
    def __sub__(self, other: Number) -> I16Vector3: ...
    @overload
    def __rsub__(self, other: I16Vector3) -> I16Vector3: ...
    @overload
    def __rsub__(self, other: Number) -> I16Vector3: ...

    @overload
    def __mul__(self, other: I16Vector3) -> I16Vector3: ...
    @overload
    def __mul__(self, other: Number) -> I16Vector3: ...
    @overload
    def __rmul__(self, other: I16Vector3) -> I16Vector3: ...
    @overload
    def __rmul__(self, other: Number) -> I16Vector3: ...




    @overload
    def __truediv__(self, other: I16Vector3) -> I16Vector3: ...
    @overload
    def __truediv__(self, other: Number) -> I16Vector3: ...
    @overload
    def __rtruediv__(self, other: I16Vector3) -> I16Vector3: ...
    @overload
    def __rtruediv__(self, other: Number) -> I16Vector3: ...




    def __abs__(self) -> I16Vector3: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...



    @property
    def xxx(self) -> tuple[int, int, int, ]: ...

    @property
    def xxy(self) -> tuple[int, int, int, ]: ...

    @property
    def xxz(self) -> tuple[int, int, int, ]: ...

    @property
    def xxw(self) -> tuple[int, int, int, ]: ...

    @property
    def xyy(self) -> tuple[int, int, int, ]: ...

    @property
    def xyz(self) -> tuple[int, int, int, ]: ...

    @property
    def xyw(self) -> tuple[int, int, int, ]: ...

    @property
    def xzz(self) -> tuple[int, int, int, ]: ...

    @property
    def xzw(self) -> tuple[int, int, int, ]: ...

    @property
    def xww(self) -> tuple[int, int, int, ]: ...

    @property
    def yyy(self) -> tuple[int, int, int, ]: ...

    @property
    def yyz(self) -> tuple[int, int, int, ]: ...

    @property
    def yyw(self) -> tuple[int, int, int, ]: ...

    @property
    def yzz(self) -> tuple[int, int, int, ]: ...

    @property
    def yzw(self) -> tuple[int, int, int, ]: ...

    @property
    def yww(self) -> tuple[int, int, int, ]: ...

    @property
    def zzz(self) -> tuple[int, int, int, ]: ...

    @property
    def zzw(self) -> tuple[int, int, int, ]: ...

    @property
    def zww(self) -> tuple[int, int, int, ]: ...

    @property
    def www(self) -> tuple[int, int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...



    @property
    def rrr(self) -> tuple[int, int, int, ]: ...

    @property
    def rrg(self) -> tuple[int, int, int, ]: ...

    @property
    def rrb(self) -> tuple[int, int, int, ]: ...

    @property
    def rra(self) -> tuple[int, int, int, ]: ...

    @property
    def rgg(self) -> tuple[int, int, int, ]: ...

    @property
    def rgb(self) -> tuple[int, int, int, ]: ...

    @property
    def rga(self) -> tuple[int, int, int, ]: ...

    @property
    def rbb(self) -> tuple[int, int, int, ]: ...

    @property
    def rba(self) -> tuple[int, int, int, ]: ...

    @property
    def raa(self) -> tuple[int, int, int, ]: ...

    @property
    def ggg(self) -> tuple[int, int, int, ]: ...

    @property
    def ggb(self) -> tuple[int, int, int, ]: ...

    @property
    def gga(self) -> tuple[int, int, int, ]: ...

    @property
    def gbb(self) -> tuple[int, int, int, ]: ...

    @property
    def gba(self) -> tuple[int, int, int, ]: ...

    @property
    def gaa(self) -> tuple[int, int, int, ]: ...

    @property
    def bbb(self) -> tuple[int, int, int, ]: ...

    @property
    def bba(self) -> tuple[int, int, int, ]: ...

    @property
    def baa(self) -> tuple[int, int, int, ]: ...

    @property
    def aaa(self) -> tuple[int, int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...



    @property
    def sss(self) -> tuple[int, int, int, ]: ...

    @property
    def sst(self) -> tuple[int, int, int, ]: ...

    @property
    def ssq(self) -> tuple[int, int, int, ]: ...

    @property
    def ssp(self) -> tuple[int, int, int, ]: ...

    @property
    def stt(self) -> tuple[int, int, int, ]: ...

    @property
    def stq(self) -> tuple[int, int, int, ]: ...

    @property
    def stp(self) -> tuple[int, int, int, ]: ...

    @property
    def sqq(self) -> tuple[int, int, int, ]: ...

    @property
    def sqp(self) -> tuple[int, int, int, ]: ...

    @property
    def spp(self) -> tuple[int, int, int, ]: ...

    @property
    def ttt(self) -> tuple[int, int, int, ]: ...

    @property
    def ttq(self) -> tuple[int, int, int, ]: ...

    @property
    def ttp(self) -> tuple[int, int, int, ]: ...

    @property
    def tqq(self) -> tuple[int, int, int, ]: ...

    @property
    def tqp(self) -> tuple[int, int, int, ]: ...

    @property
    def tpp(self) -> tuple[int, int, int, ]: ...

    @property
    def qqq(self) -> tuple[int, int, int, ]: ...

    @property
    def qqp(self) -> tuple[int, int, int, ]: ...

    @property
    def qpp(self) -> tuple[int, int, int, ]: ...

    @property
    def ppp(self) -> tuple[int, int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...



    @property
    def uuu(self) -> tuple[int, int, int, ]: ...

    @property
    def uuv(self) -> tuple[int, int, int, ]: ...

    @property
    def uvv(self) -> tuple[int, int, int, ]: ...

    @property
    def vvv(self) -> tuple[int, int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class U16Vector3:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...



    @overload
    def __init__(self, x: Number, y: Number, z: Number, /): ...



    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: U16Vector3) -> U16Vector3: ...
    @overload
    def __add__(self, other: Number) -> U16Vector3: ...
    @overload
    def __radd__(self, other: U16Vector3) -> U16Vector3: ...
    @overload
    def __radd__(self, other: Number) -> U16Vector3: ...

    @overload
    def __sub__(self, other: U16Vector3) -> U16Vector3: ...
    @overload
    def __sub__(self, other: Number) -> U16Vector3: ...
    @overload
    def __rsub__(self, other: U16Vector3) -> U16Vector3: ...
    @overload
    def __rsub__(self, other: Number) -> U16Vector3: ...

    @overload
    def __mul__(self, other: U16Vector3) -> U16Vector3: ...
    @overload
    def __mul__(self, other: Number) -> U16Vector3: ...
    @overload
    def __rmul__(self, other: U16Vector3) -> U16Vector3: ...
    @overload
    def __rmul__(self, other: Number) -> U16Vector3: ...




    @overload
    def __truediv__(self, other: U16Vector3) -> U16Vector3: ...
    @overload
    def __truediv__(self, other: Number) -> U16Vector3: ...
    @overload
    def __rtruediv__(self, other: U16Vector3) -> U16Vector3: ...
    @overload
    def __rtruediv__(self, other: Number) -> U16Vector3: ...



    def __neg__(self) -> U16Vector3: ...


    def __abs__(self) -> U16Vector3: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...



    @property
    def xxx(self) -> tuple[int, int, int, ]: ...

    @property
    def xxy(self) -> tuple[int, int, int, ]: ...

    @property
    def xxz(self) -> tuple[int, int, int, ]: ...

    @property
    def xxw(self) -> tuple[int, int, int, ]: ...

    @property
    def xyy(self) -> tuple[int, int, int, ]: ...

    @property
    def xyz(self) -> tuple[int, int, int, ]: ...

    @property
    def xyw(self) -> tuple[int, int, int, ]: ...

    @property
    def xzz(self) -> tuple[int, int, int, ]: ...

    @property
    def xzw(self) -> tuple[int, int, int, ]: ...

    @property
    def xww(self) -> tuple[int, int, int, ]: ...

    @property
    def yyy(self) -> tuple[int, int, int, ]: ...

    @property
    def yyz(self) -> tuple[int, int, int, ]: ...

    @property
    def yyw(self) -> tuple[int, int, int, ]: ...

    @property
    def yzz(self) -> tuple[int, int, int, ]: ...

    @property
    def yzw(self) -> tuple[int, int, int, ]: ...

    @property
    def yww(self) -> tuple[int, int, int, ]: ...

    @property
    def zzz(self) -> tuple[int, int, int, ]: ...

    @property
    def zzw(self) -> tuple[int, int, int, ]: ...

    @property
    def zww(self) -> tuple[int, int, int, ]: ...

    @property
    def www(self) -> tuple[int, int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...



    @property
    def rrr(self) -> tuple[int, int, int, ]: ...

    @property
    def rrg(self) -> tuple[int, int, int, ]: ...

    @property
    def rrb(self) -> tuple[int, int, int, ]: ...

    @property
    def rra(self) -> tuple[int, int, int, ]: ...

    @property
    def rgg(self) -> tuple[int, int, int, ]: ...

    @property
    def rgb(self) -> tuple[int, int, int, ]: ...

    @property
    def rga(self) -> tuple[int, int, int, ]: ...

    @property
    def rbb(self) -> tuple[int, int, int, ]: ...

    @property
    def rba(self) -> tuple[int, int, int, ]: ...

    @property
    def raa(self) -> tuple[int, int, int, ]: ...

    @property
    def ggg(self) -> tuple[int, int, int, ]: ...

    @property
    def ggb(self) -> tuple[int, int, int, ]: ...

    @property
    def gga(self) -> tuple[int, int, int, ]: ...

    @property
    def gbb(self) -> tuple[int, int, int, ]: ...

    @property
    def gba(self) -> tuple[int, int, int, ]: ...

    @property
    def gaa(self) -> tuple[int, int, int, ]: ...

    @property
    def bbb(self) -> tuple[int, int, int, ]: ...

    @property
    def bba(self) -> tuple[int, int, int, ]: ...

    @property
    def baa(self) -> tuple[int, int, int, ]: ...

    @property
    def aaa(self) -> tuple[int, int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...



    @property
    def sss(self) -> tuple[int, int, int, ]: ...

    @property
    def sst(self) -> tuple[int, int, int, ]: ...

    @property
    def ssq(self) -> tuple[int, int, int, ]: ...

    @property
    def ssp(self) -> tuple[int, int, int, ]: ...

    @property
    def stt(self) -> tuple[int, int, int, ]: ...

    @property
    def stq(self) -> tuple[int, int, int, ]: ...

    @property
    def stp(self) -> tuple[int, int, int, ]: ...

    @property
    def sqq(self) -> tuple[int, int, int, ]: ...

    @property
    def sqp(self) -> tuple[int, int, int, ]: ...

    @property
    def spp(self) -> tuple[int, int, int, ]: ...

    @property
    def ttt(self) -> tuple[int, int, int, ]: ...

    @property
    def ttq(self) -> tuple[int, int, int, ]: ...

    @property
    def ttp(self) -> tuple[int, int, int, ]: ...

    @property
    def tqq(self) -> tuple[int, int, int, ]: ...

    @property
    def tqp(self) -> tuple[int, int, int, ]: ...

    @property
    def tpp(self) -> tuple[int, int, int, ]: ...

    @property
    def qqq(self) -> tuple[int, int, int, ]: ...

    @property
    def qqp(self) -> tuple[int, int, int, ]: ...

    @property
    def qpp(self) -> tuple[int, int, int, ]: ...

    @property
    def ppp(self) -> tuple[int, int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...



    @property
    def uuu(self) -> tuple[int, int, int, ]: ...

    @property
    def uuv(self) -> tuple[int, int, int, ]: ...

    @property
    def uvv(self) -> tuple[int, int, int, ]: ...

    @property
    def vvv(self) -> tuple[int, int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class I32Vector3:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...



    @overload
    def __init__(self, x: Number, y: Number, z: Number, /): ...



    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: I32Vector3) -> I32Vector3: ...
    @overload
    def __add__(self, other: Number) -> I32Vector3: ...
    @overload
    def __radd__(self, other: I32Vector3) -> I32Vector3: ...
    @overload
    def __radd__(self, other: Number) -> I32Vector3: ...

    @overload
    def __sub__(self, other: I32Vector3) -> I32Vector3: ...
    @overload
    def __sub__(self, other: Number) -> I32Vector3: ...
    @overload
    def __rsub__(self, other: I32Vector3) -> I32Vector3: ...
    @overload
    def __rsub__(self, other: Number) -> I32Vector3: ...

    @overload
    def __mul__(self, other: I32Vector3) -> I32Vector3: ...
    @overload
    def __mul__(self, other: Number) -> I32Vector3: ...
    @overload
    def __rmul__(self, other: I32Vector3) -> I32Vector3: ...
    @overload
    def __rmul__(self, other: Number) -> I32Vector3: ...




    @overload
    def __truediv__(self, other: I32Vector3) -> I32Vector3: ...
    @overload
    def __truediv__(self, other: Number) -> I32Vector3: ...
    @overload
    def __rtruediv__(self, other: I32Vector3) -> I32Vector3: ...
    @overload
    def __rtruediv__(self, other: Number) -> I32Vector3: ...




    def __abs__(self) -> I32Vector3: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...



    @property
    def xxx(self) -> tuple[int, int, int, ]: ...

    @property
    def xxy(self) -> tuple[int, int, int, ]: ...

    @property
    def xxz(self) -> tuple[int, int, int, ]: ...

    @property
    def xxw(self) -> tuple[int, int, int, ]: ...

    @property
    def xyy(self) -> tuple[int, int, int, ]: ...

    @property
    def xyz(self) -> tuple[int, int, int, ]: ...

    @property
    def xyw(self) -> tuple[int, int, int, ]: ...

    @property
    def xzz(self) -> tuple[int, int, int, ]: ...

    @property
    def xzw(self) -> tuple[int, int, int, ]: ...

    @property
    def xww(self) -> tuple[int, int, int, ]: ...

    @property
    def yyy(self) -> tuple[int, int, int, ]: ...

    @property
    def yyz(self) -> tuple[int, int, int, ]: ...

    @property
    def yyw(self) -> tuple[int, int, int, ]: ...

    @property
    def yzz(self) -> tuple[int, int, int, ]: ...

    @property
    def yzw(self) -> tuple[int, int, int, ]: ...

    @property
    def yww(self) -> tuple[int, int, int, ]: ...

    @property
    def zzz(self) -> tuple[int, int, int, ]: ...

    @property
    def zzw(self) -> tuple[int, int, int, ]: ...

    @property
    def zww(self) -> tuple[int, int, int, ]: ...

    @property
    def www(self) -> tuple[int, int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...



    @property
    def rrr(self) -> tuple[int, int, int, ]: ...

    @property
    def rrg(self) -> tuple[int, int, int, ]: ...

    @property
    def rrb(self) -> tuple[int, int, int, ]: ...

    @property
    def rra(self) -> tuple[int, int, int, ]: ...

    @property
    def rgg(self) -> tuple[int, int, int, ]: ...

    @property
    def rgb(self) -> tuple[int, int, int, ]: ...

    @property
    def rga(self) -> tuple[int, int, int, ]: ...

    @property
    def rbb(self) -> tuple[int, int, int, ]: ...

    @property
    def rba(self) -> tuple[int, int, int, ]: ...

    @property
    def raa(self) -> tuple[int, int, int, ]: ...

    @property
    def ggg(self) -> tuple[int, int, int, ]: ...

    @property
    def ggb(self) -> tuple[int, int, int, ]: ...

    @property
    def gga(self) -> tuple[int, int, int, ]: ...

    @property
    def gbb(self) -> tuple[int, int, int, ]: ...

    @property
    def gba(self) -> tuple[int, int, int, ]: ...

    @property
    def gaa(self) -> tuple[int, int, int, ]: ...

    @property
    def bbb(self) -> tuple[int, int, int, ]: ...

    @property
    def bba(self) -> tuple[int, int, int, ]: ...

    @property
    def baa(self) -> tuple[int, int, int, ]: ...

    @property
    def aaa(self) -> tuple[int, int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...



    @property
    def sss(self) -> tuple[int, int, int, ]: ...

    @property
    def sst(self) -> tuple[int, int, int, ]: ...

    @property
    def ssq(self) -> tuple[int, int, int, ]: ...

    @property
    def ssp(self) -> tuple[int, int, int, ]: ...

    @property
    def stt(self) -> tuple[int, int, int, ]: ...

    @property
    def stq(self) -> tuple[int, int, int, ]: ...

    @property
    def stp(self) -> tuple[int, int, int, ]: ...

    @property
    def sqq(self) -> tuple[int, int, int, ]: ...

    @property
    def sqp(self) -> tuple[int, int, int, ]: ...

    @property
    def spp(self) -> tuple[int, int, int, ]: ...

    @property
    def ttt(self) -> tuple[int, int, int, ]: ...

    @property
    def ttq(self) -> tuple[int, int, int, ]: ...

    @property
    def ttp(self) -> tuple[int, int, int, ]: ...

    @property
    def tqq(self) -> tuple[int, int, int, ]: ...

    @property
    def tqp(self) -> tuple[int, int, int, ]: ...

    @property
    def tpp(self) -> tuple[int, int, int, ]: ...

    @property
    def qqq(self) -> tuple[int, int, int, ]: ...

    @property
    def qqp(self) -> tuple[int, int, int, ]: ...

    @property
    def qpp(self) -> tuple[int, int, int, ]: ...

    @property
    def ppp(self) -> tuple[int, int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...



    @property
    def uuu(self) -> tuple[int, int, int, ]: ...

    @property
    def uuv(self) -> tuple[int, int, int, ]: ...

    @property
    def uvv(self) -> tuple[int, int, int, ]: ...

    @property
    def vvv(self) -> tuple[int, int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class U32Vector3:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...



    @overload
    def __init__(self, x: Number, y: Number, z: Number, /): ...



    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: U32Vector3) -> U32Vector3: ...
    @overload
    def __add__(self, other: Number) -> U32Vector3: ...
    @overload
    def __radd__(self, other: U32Vector3) -> U32Vector3: ...
    @overload
    def __radd__(self, other: Number) -> U32Vector3: ...

    @overload
    def __sub__(self, other: U32Vector3) -> U32Vector3: ...
    @overload
    def __sub__(self, other: Number) -> U32Vector3: ...
    @overload
    def __rsub__(self, other: U32Vector3) -> U32Vector3: ...
    @overload
    def __rsub__(self, other: Number) -> U32Vector3: ...

    @overload
    def __mul__(self, other: U32Vector3) -> U32Vector3: ...
    @overload
    def __mul__(self, other: Number) -> U32Vector3: ...
    @overload
    def __rmul__(self, other: U32Vector3) -> U32Vector3: ...
    @overload
    def __rmul__(self, other: Number) -> U32Vector3: ...




    @overload
    def __truediv__(self, other: U32Vector3) -> U32Vector3: ...
    @overload
    def __truediv__(self, other: Number) -> U32Vector3: ...
    @overload
    def __rtruediv__(self, other: U32Vector3) -> U32Vector3: ...
    @overload
    def __rtruediv__(self, other: Number) -> U32Vector3: ...



    def __neg__(self) -> U32Vector3: ...


    def __abs__(self) -> U32Vector3: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...



    @property
    def xxx(self) -> tuple[int, int, int, ]: ...

    @property
    def xxy(self) -> tuple[int, int, int, ]: ...

    @property
    def xxz(self) -> tuple[int, int, int, ]: ...

    @property
    def xxw(self) -> tuple[int, int, int, ]: ...

    @property
    def xyy(self) -> tuple[int, int, int, ]: ...

    @property
    def xyz(self) -> tuple[int, int, int, ]: ...

    @property
    def xyw(self) -> tuple[int, int, int, ]: ...

    @property
    def xzz(self) -> tuple[int, int, int, ]: ...

    @property
    def xzw(self) -> tuple[int, int, int, ]: ...

    @property
    def xww(self) -> tuple[int, int, int, ]: ...

    @property
    def yyy(self) -> tuple[int, int, int, ]: ...

    @property
    def yyz(self) -> tuple[int, int, int, ]: ...

    @property
    def yyw(self) -> tuple[int, int, int, ]: ...

    @property
    def yzz(self) -> tuple[int, int, int, ]: ...

    @property
    def yzw(self) -> tuple[int, int, int, ]: ...

    @property
    def yww(self) -> tuple[int, int, int, ]: ...

    @property
    def zzz(self) -> tuple[int, int, int, ]: ...

    @property
    def zzw(self) -> tuple[int, int, int, ]: ...

    @property
    def zww(self) -> tuple[int, int, int, ]: ...

    @property
    def www(self) -> tuple[int, int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...



    @property
    def rrr(self) -> tuple[int, int, int, ]: ...

    @property
    def rrg(self) -> tuple[int, int, int, ]: ...

    @property
    def rrb(self) -> tuple[int, int, int, ]: ...

    @property
    def rra(self) -> tuple[int, int, int, ]: ...

    @property
    def rgg(self) -> tuple[int, int, int, ]: ...

    @property
    def rgb(self) -> tuple[int, int, int, ]: ...

    @property
    def rga(self) -> tuple[int, int, int, ]: ...

    @property
    def rbb(self) -> tuple[int, int, int, ]: ...

    @property
    def rba(self) -> tuple[int, int, int, ]: ...

    @property
    def raa(self) -> tuple[int, int, int, ]: ...

    @property
    def ggg(self) -> tuple[int, int, int, ]: ...

    @property
    def ggb(self) -> tuple[int, int, int, ]: ...

    @property
    def gga(self) -> tuple[int, int, int, ]: ...

    @property
    def gbb(self) -> tuple[int, int, int, ]: ...

    @property
    def gba(self) -> tuple[int, int, int, ]: ...

    @property
    def gaa(self) -> tuple[int, int, int, ]: ...

    @property
    def bbb(self) -> tuple[int, int, int, ]: ...

    @property
    def bba(self) -> tuple[int, int, int, ]: ...

    @property
    def baa(self) -> tuple[int, int, int, ]: ...

    @property
    def aaa(self) -> tuple[int, int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...



    @property
    def sss(self) -> tuple[int, int, int, ]: ...

    @property
    def sst(self) -> tuple[int, int, int, ]: ...

    @property
    def ssq(self) -> tuple[int, int, int, ]: ...

    @property
    def ssp(self) -> tuple[int, int, int, ]: ...

    @property
    def stt(self) -> tuple[int, int, int, ]: ...

    @property
    def stq(self) -> tuple[int, int, int, ]: ...

    @property
    def stp(self) -> tuple[int, int, int, ]: ...

    @property
    def sqq(self) -> tuple[int, int, int, ]: ...

    @property
    def sqp(self) -> tuple[int, int, int, ]: ...

    @property
    def spp(self) -> tuple[int, int, int, ]: ...

    @property
    def ttt(self) -> tuple[int, int, int, ]: ...

    @property
    def ttq(self) -> tuple[int, int, int, ]: ...

    @property
    def ttp(self) -> tuple[int, int, int, ]: ...

    @property
    def tqq(self) -> tuple[int, int, int, ]: ...

    @property
    def tqp(self) -> tuple[int, int, int, ]: ...

    @property
    def tpp(self) -> tuple[int, int, int, ]: ...

    @property
    def qqq(self) -> tuple[int, int, int, ]: ...

    @property
    def qqp(self) -> tuple[int, int, int, ]: ...

    @property
    def qpp(self) -> tuple[int, int, int, ]: ...

    @property
    def ppp(self) -> tuple[int, int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...



    @property
    def uuu(self) -> tuple[int, int, int, ]: ...

    @property
    def uuv(self) -> tuple[int, int, int, ]: ...

    @property
    def uvv(self) -> tuple[int, int, int, ]: ...

    @property
    def vvv(self) -> tuple[int, int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class IVector3:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...



    @overload
    def __init__(self, x: Number, y: Number, z: Number, /): ...



    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: IVector3) -> IVector3: ...
    @overload
    def __add__(self, other: Number) -> IVector3: ...
    @overload
    def __radd__(self, other: IVector3) -> IVector3: ...
    @overload
    def __radd__(self, other: Number) -> IVector3: ...

    @overload
    def __sub__(self, other: IVector3) -> IVector3: ...
    @overload
    def __sub__(self, other: Number) -> IVector3: ...
    @overload
    def __rsub__(self, other: IVector3) -> IVector3: ...
    @overload
    def __rsub__(self, other: Number) -> IVector3: ...

    @overload
    def __mul__(self, other: IVector3) -> IVector3: ...
    @overload
    def __mul__(self, other: Number) -> IVector3: ...
    @overload
    def __rmul__(self, other: IVector3) -> IVector3: ...
    @overload
    def __rmul__(self, other: Number) -> IVector3: ...




    @overload
    def __truediv__(self, other: IVector3) -> IVector3: ...
    @overload
    def __truediv__(self, other: Number) -> IVector3: ...
    @overload
    def __rtruediv__(self, other: IVector3) -> IVector3: ...
    @overload
    def __rtruediv__(self, other: Number) -> IVector3: ...




    def __abs__(self) -> IVector3: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...



    @property
    def xxx(self) -> tuple[int, int, int, ]: ...

    @property
    def xxy(self) -> tuple[int, int, int, ]: ...

    @property
    def xxz(self) -> tuple[int, int, int, ]: ...

    @property
    def xxw(self) -> tuple[int, int, int, ]: ...

    @property
    def xyy(self) -> tuple[int, int, int, ]: ...

    @property
    def xyz(self) -> tuple[int, int, int, ]: ...

    @property
    def xyw(self) -> tuple[int, int, int, ]: ...

    @property
    def xzz(self) -> tuple[int, int, int, ]: ...

    @property
    def xzw(self) -> tuple[int, int, int, ]: ...

    @property
    def xww(self) -> tuple[int, int, int, ]: ...

    @property
    def yyy(self) -> tuple[int, int, int, ]: ...

    @property
    def yyz(self) -> tuple[int, int, int, ]: ...

    @property
    def yyw(self) -> tuple[int, int, int, ]: ...

    @property
    def yzz(self) -> tuple[int, int, int, ]: ...

    @property
    def yzw(self) -> tuple[int, int, int, ]: ...

    @property
    def yww(self) -> tuple[int, int, int, ]: ...

    @property
    def zzz(self) -> tuple[int, int, int, ]: ...

    @property
    def zzw(self) -> tuple[int, int, int, ]: ...

    @property
    def zww(self) -> tuple[int, int, int, ]: ...

    @property
    def www(self) -> tuple[int, int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...



    @property
    def rrr(self) -> tuple[int, int, int, ]: ...

    @property
    def rrg(self) -> tuple[int, int, int, ]: ...

    @property
    def rrb(self) -> tuple[int, int, int, ]: ...

    @property
    def rra(self) -> tuple[int, int, int, ]: ...

    @property
    def rgg(self) -> tuple[int, int, int, ]: ...

    @property
    def rgb(self) -> tuple[int, int, int, ]: ...

    @property
    def rga(self) -> tuple[int, int, int, ]: ...

    @property
    def rbb(self) -> tuple[int, int, int, ]: ...

    @property
    def rba(self) -> tuple[int, int, int, ]: ...

    @property
    def raa(self) -> tuple[int, int, int, ]: ...

    @property
    def ggg(self) -> tuple[int, int, int, ]: ...

    @property
    def ggb(self) -> tuple[int, int, int, ]: ...

    @property
    def gga(self) -> tuple[int, int, int, ]: ...

    @property
    def gbb(self) -> tuple[int, int, int, ]: ...

    @property
    def gba(self) -> tuple[int, int, int, ]: ...

    @property
    def gaa(self) -> tuple[int, int, int, ]: ...

    @property
    def bbb(self) -> tuple[int, int, int, ]: ...

    @property
    def bba(self) -> tuple[int, int, int, ]: ...

    @property
    def baa(self) -> tuple[int, int, int, ]: ...

    @property
    def aaa(self) -> tuple[int, int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...



    @property
    def sss(self) -> tuple[int, int, int, ]: ...

    @property
    def sst(self) -> tuple[int, int, int, ]: ...

    @property
    def ssq(self) -> tuple[int, int, int, ]: ...

    @property
    def ssp(self) -> tuple[int, int, int, ]: ...

    @property
    def stt(self) -> tuple[int, int, int, ]: ...

    @property
    def stq(self) -> tuple[int, int, int, ]: ...

    @property
    def stp(self) -> tuple[int, int, int, ]: ...

    @property
    def sqq(self) -> tuple[int, int, int, ]: ...

    @property
    def sqp(self) -> tuple[int, int, int, ]: ...

    @property
    def spp(self) -> tuple[int, int, int, ]: ...

    @property
    def ttt(self) -> tuple[int, int, int, ]: ...

    @property
    def ttq(self) -> tuple[int, int, int, ]: ...

    @property
    def ttp(self) -> tuple[int, int, int, ]: ...

    @property
    def tqq(self) -> tuple[int, int, int, ]: ...

    @property
    def tqp(self) -> tuple[int, int, int, ]: ...

    @property
    def tpp(self) -> tuple[int, int, int, ]: ...

    @property
    def qqq(self) -> tuple[int, int, int, ]: ...

    @property
    def qqp(self) -> tuple[int, int, int, ]: ...

    @property
    def qpp(self) -> tuple[int, int, int, ]: ...

    @property
    def ppp(self) -> tuple[int, int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...



    @property
    def uuu(self) -> tuple[int, int, int, ]: ...

    @property
    def uuv(self) -> tuple[int, int, int, ]: ...

    @property
    def uvv(self) -> tuple[int, int, int, ]: ...

    @property
    def vvv(self) -> tuple[int, int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class UVector3:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...



    @overload
    def __init__(self, x: Number, y: Number, z: Number, /): ...



    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: UVector3) -> UVector3: ...
    @overload
    def __add__(self, other: Number) -> UVector3: ...
    @overload
    def __radd__(self, other: UVector3) -> UVector3: ...
    @overload
    def __radd__(self, other: Number) -> UVector3: ...

    @overload
    def __sub__(self, other: UVector3) -> UVector3: ...
    @overload
    def __sub__(self, other: Number) -> UVector3: ...
    @overload
    def __rsub__(self, other: UVector3) -> UVector3: ...
    @overload
    def __rsub__(self, other: Number) -> UVector3: ...

    @overload
    def __mul__(self, other: UVector3) -> UVector3: ...
    @overload
    def __mul__(self, other: Number) -> UVector3: ...
    @overload
    def __rmul__(self, other: UVector3) -> UVector3: ...
    @overload
    def __rmul__(self, other: Number) -> UVector3: ...




    @overload
    def __truediv__(self, other: UVector3) -> UVector3: ...
    @overload
    def __truediv__(self, other: Number) -> UVector3: ...
    @overload
    def __rtruediv__(self, other: UVector3) -> UVector3: ...
    @overload
    def __rtruediv__(self, other: Number) -> UVector3: ...



    def __neg__(self) -> UVector3: ...


    def __abs__(self) -> UVector3: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...



    @property
    def xxx(self) -> tuple[int, int, int, ]: ...

    @property
    def xxy(self) -> tuple[int, int, int, ]: ...

    @property
    def xxz(self) -> tuple[int, int, int, ]: ...

    @property
    def xxw(self) -> tuple[int, int, int, ]: ...

    @property
    def xyy(self) -> tuple[int, int, int, ]: ...

    @property
    def xyz(self) -> tuple[int, int, int, ]: ...

    @property
    def xyw(self) -> tuple[int, int, int, ]: ...

    @property
    def xzz(self) -> tuple[int, int, int, ]: ...

    @property
    def xzw(self) -> tuple[int, int, int, ]: ...

    @property
    def xww(self) -> tuple[int, int, int, ]: ...

    @property
    def yyy(self) -> tuple[int, int, int, ]: ...

    @property
    def yyz(self) -> tuple[int, int, int, ]: ...

    @property
    def yyw(self) -> tuple[int, int, int, ]: ...

    @property
    def yzz(self) -> tuple[int, int, int, ]: ...

    @property
    def yzw(self) -> tuple[int, int, int, ]: ...

    @property
    def yww(self) -> tuple[int, int, int, ]: ...

    @property
    def zzz(self) -> tuple[int, int, int, ]: ...

    @property
    def zzw(self) -> tuple[int, int, int, ]: ...

    @property
    def zww(self) -> tuple[int, int, int, ]: ...

    @property
    def www(self) -> tuple[int, int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...



    @property
    def rrr(self) -> tuple[int, int, int, ]: ...

    @property
    def rrg(self) -> tuple[int, int, int, ]: ...

    @property
    def rrb(self) -> tuple[int, int, int, ]: ...

    @property
    def rra(self) -> tuple[int, int, int, ]: ...

    @property
    def rgg(self) -> tuple[int, int, int, ]: ...

    @property
    def rgb(self) -> tuple[int, int, int, ]: ...

    @property
    def rga(self) -> tuple[int, int, int, ]: ...

    @property
    def rbb(self) -> tuple[int, int, int, ]: ...

    @property
    def rba(self) -> tuple[int, int, int, ]: ...

    @property
    def raa(self) -> tuple[int, int, int, ]: ...

    @property
    def ggg(self) -> tuple[int, int, int, ]: ...

    @property
    def ggb(self) -> tuple[int, int, int, ]: ...

    @property
    def gga(self) -> tuple[int, int, int, ]: ...

    @property
    def gbb(self) -> tuple[int, int, int, ]: ...

    @property
    def gba(self) -> tuple[int, int, int, ]: ...

    @property
    def gaa(self) -> tuple[int, int, int, ]: ...

    @property
    def bbb(self) -> tuple[int, int, int, ]: ...

    @property
    def bba(self) -> tuple[int, int, int, ]: ...

    @property
    def baa(self) -> tuple[int, int, int, ]: ...

    @property
    def aaa(self) -> tuple[int, int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...



    @property
    def sss(self) -> tuple[int, int, int, ]: ...

    @property
    def sst(self) -> tuple[int, int, int, ]: ...

    @property
    def ssq(self) -> tuple[int, int, int, ]: ...

    @property
    def ssp(self) -> tuple[int, int, int, ]: ...

    @property
    def stt(self) -> tuple[int, int, int, ]: ...

    @property
    def stq(self) -> tuple[int, int, int, ]: ...

    @property
    def stp(self) -> tuple[int, int, int, ]: ...

    @property
    def sqq(self) -> tuple[int, int, int, ]: ...

    @property
    def sqp(self) -> tuple[int, int, int, ]: ...

    @property
    def spp(self) -> tuple[int, int, int, ]: ...

    @property
    def ttt(self) -> tuple[int, int, int, ]: ...

    @property
    def ttq(self) -> tuple[int, int, int, ]: ...

    @property
    def ttp(self) -> tuple[int, int, int, ]: ...

    @property
    def tqq(self) -> tuple[int, int, int, ]: ...

    @property
    def tqp(self) -> tuple[int, int, int, ]: ...

    @property
    def tpp(self) -> tuple[int, int, int, ]: ...

    @property
    def qqq(self) -> tuple[int, int, int, ]: ...

    @property
    def qqp(self) -> tuple[int, int, int, ]: ...

    @property
    def qpp(self) -> tuple[int, int, int, ]: ...

    @property
    def ppp(self) -> tuple[int, int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...



    @property
    def uuu(self) -> tuple[int, int, int, ]: ...

    @property
    def uuv(self) -> tuple[int, int, int, ]: ...

    @property
    def uvv(self) -> tuple[int, int, int, ]: ...

    @property
    def vvv(self) -> tuple[int, int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class I64Vector3:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...



    @overload
    def __init__(self, x: Number, y: Number, z: Number, /): ...



    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: I64Vector3) -> I64Vector3: ...
    @overload
    def __add__(self, other: Number) -> I64Vector3: ...
    @overload
    def __radd__(self, other: I64Vector3) -> I64Vector3: ...
    @overload
    def __radd__(self, other: Number) -> I64Vector3: ...

    @overload
    def __sub__(self, other: I64Vector3) -> I64Vector3: ...
    @overload
    def __sub__(self, other: Number) -> I64Vector3: ...
    @overload
    def __rsub__(self, other: I64Vector3) -> I64Vector3: ...
    @overload
    def __rsub__(self, other: Number) -> I64Vector3: ...

    @overload
    def __mul__(self, other: I64Vector3) -> I64Vector3: ...
    @overload
    def __mul__(self, other: Number) -> I64Vector3: ...
    @overload
    def __rmul__(self, other: I64Vector3) -> I64Vector3: ...
    @overload
    def __rmul__(self, other: Number) -> I64Vector3: ...




    @overload
    def __truediv__(self, other: I64Vector3) -> I64Vector3: ...
    @overload
    def __truediv__(self, other: Number) -> I64Vector3: ...
    @overload
    def __rtruediv__(self, other: I64Vector3) -> I64Vector3: ...
    @overload
    def __rtruediv__(self, other: Number) -> I64Vector3: ...




    def __abs__(self) -> I64Vector3: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...



    @property
    def xxx(self) -> tuple[int, int, int, ]: ...

    @property
    def xxy(self) -> tuple[int, int, int, ]: ...

    @property
    def xxz(self) -> tuple[int, int, int, ]: ...

    @property
    def xxw(self) -> tuple[int, int, int, ]: ...

    @property
    def xyy(self) -> tuple[int, int, int, ]: ...

    @property
    def xyz(self) -> tuple[int, int, int, ]: ...

    @property
    def xyw(self) -> tuple[int, int, int, ]: ...

    @property
    def xzz(self) -> tuple[int, int, int, ]: ...

    @property
    def xzw(self) -> tuple[int, int, int, ]: ...

    @property
    def xww(self) -> tuple[int, int, int, ]: ...

    @property
    def yyy(self) -> tuple[int, int, int, ]: ...

    @property
    def yyz(self) -> tuple[int, int, int, ]: ...

    @property
    def yyw(self) -> tuple[int, int, int, ]: ...

    @property
    def yzz(self) -> tuple[int, int, int, ]: ...

    @property
    def yzw(self) -> tuple[int, int, int, ]: ...

    @property
    def yww(self) -> tuple[int, int, int, ]: ...

    @property
    def zzz(self) -> tuple[int, int, int, ]: ...

    @property
    def zzw(self) -> tuple[int, int, int, ]: ...

    @property
    def zww(self) -> tuple[int, int, int, ]: ...

    @property
    def www(self) -> tuple[int, int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...



    @property
    def rrr(self) -> tuple[int, int, int, ]: ...

    @property
    def rrg(self) -> tuple[int, int, int, ]: ...

    @property
    def rrb(self) -> tuple[int, int, int, ]: ...

    @property
    def rra(self) -> tuple[int, int, int, ]: ...

    @property
    def rgg(self) -> tuple[int, int, int, ]: ...

    @property
    def rgb(self) -> tuple[int, int, int, ]: ...

    @property
    def rga(self) -> tuple[int, int, int, ]: ...

    @property
    def rbb(self) -> tuple[int, int, int, ]: ...

    @property
    def rba(self) -> tuple[int, int, int, ]: ...

    @property
    def raa(self) -> tuple[int, int, int, ]: ...

    @property
    def ggg(self) -> tuple[int, int, int, ]: ...

    @property
    def ggb(self) -> tuple[int, int, int, ]: ...

    @property
    def gga(self) -> tuple[int, int, int, ]: ...

    @property
    def gbb(self) -> tuple[int, int, int, ]: ...

    @property
    def gba(self) -> tuple[int, int, int, ]: ...

    @property
    def gaa(self) -> tuple[int, int, int, ]: ...

    @property
    def bbb(self) -> tuple[int, int, int, ]: ...

    @property
    def bba(self) -> tuple[int, int, int, ]: ...

    @property
    def baa(self) -> tuple[int, int, int, ]: ...

    @property
    def aaa(self) -> tuple[int, int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...



    @property
    def sss(self) -> tuple[int, int, int, ]: ...

    @property
    def sst(self) -> tuple[int, int, int, ]: ...

    @property
    def ssq(self) -> tuple[int, int, int, ]: ...

    @property
    def ssp(self) -> tuple[int, int, int, ]: ...

    @property
    def stt(self) -> tuple[int, int, int, ]: ...

    @property
    def stq(self) -> tuple[int, int, int, ]: ...

    @property
    def stp(self) -> tuple[int, int, int, ]: ...

    @property
    def sqq(self) -> tuple[int, int, int, ]: ...

    @property
    def sqp(self) -> tuple[int, int, int, ]: ...

    @property
    def spp(self) -> tuple[int, int, int, ]: ...

    @property
    def ttt(self) -> tuple[int, int, int, ]: ...

    @property
    def ttq(self) -> tuple[int, int, int, ]: ...

    @property
    def ttp(self) -> tuple[int, int, int, ]: ...

    @property
    def tqq(self) -> tuple[int, int, int, ]: ...

    @property
    def tqp(self) -> tuple[int, int, int, ]: ...

    @property
    def tpp(self) -> tuple[int, int, int, ]: ...

    @property
    def qqq(self) -> tuple[int, int, int, ]: ...

    @property
    def qqp(self) -> tuple[int, int, int, ]: ...

    @property
    def qpp(self) -> tuple[int, int, int, ]: ...

    @property
    def ppp(self) -> tuple[int, int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...



    @property
    def uuu(self) -> tuple[int, int, int, ]: ...

    @property
    def uuv(self) -> tuple[int, int, int, ]: ...

    @property
    def uvv(self) -> tuple[int, int, int, ]: ...

    @property
    def vvv(self) -> tuple[int, int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class U64Vector3:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...



    @overload
    def __init__(self, x: Number, y: Number, z: Number, /): ...



    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: U64Vector3) -> U64Vector3: ...
    @overload
    def __add__(self, other: Number) -> U64Vector3: ...
    @overload
    def __radd__(self, other: U64Vector3) -> U64Vector3: ...
    @overload
    def __radd__(self, other: Number) -> U64Vector3: ...

    @overload
    def __sub__(self, other: U64Vector3) -> U64Vector3: ...
    @overload
    def __sub__(self, other: Number) -> U64Vector3: ...
    @overload
    def __rsub__(self, other: U64Vector3) -> U64Vector3: ...
    @overload
    def __rsub__(self, other: Number) -> U64Vector3: ...

    @overload
    def __mul__(self, other: U64Vector3) -> U64Vector3: ...
    @overload
    def __mul__(self, other: Number) -> U64Vector3: ...
    @overload
    def __rmul__(self, other: U64Vector3) -> U64Vector3: ...
    @overload
    def __rmul__(self, other: Number) -> U64Vector3: ...




    @overload
    def __truediv__(self, other: U64Vector3) -> U64Vector3: ...
    @overload
    def __truediv__(self, other: Number) -> U64Vector3: ...
    @overload
    def __rtruediv__(self, other: U64Vector3) -> U64Vector3: ...
    @overload
    def __rtruediv__(self, other: Number) -> U64Vector3: ...



    def __neg__(self) -> U64Vector3: ...


    def __abs__(self) -> U64Vector3: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...



    @property
    def xxx(self) -> tuple[int, int, int, ]: ...

    @property
    def xxy(self) -> tuple[int, int, int, ]: ...

    @property
    def xxz(self) -> tuple[int, int, int, ]: ...

    @property
    def xxw(self) -> tuple[int, int, int, ]: ...

    @property
    def xyy(self) -> tuple[int, int, int, ]: ...

    @property
    def xyz(self) -> tuple[int, int, int, ]: ...

    @property
    def xyw(self) -> tuple[int, int, int, ]: ...

    @property
    def xzz(self) -> tuple[int, int, int, ]: ...

    @property
    def xzw(self) -> tuple[int, int, int, ]: ...

    @property
    def xww(self) -> tuple[int, int, int, ]: ...

    @property
    def yyy(self) -> tuple[int, int, int, ]: ...

    @property
    def yyz(self) -> tuple[int, int, int, ]: ...

    @property
    def yyw(self) -> tuple[int, int, int, ]: ...

    @property
    def yzz(self) -> tuple[int, int, int, ]: ...

    @property
    def yzw(self) -> tuple[int, int, int, ]: ...

    @property
    def yww(self) -> tuple[int, int, int, ]: ...

    @property
    def zzz(self) -> tuple[int, int, int, ]: ...

    @property
    def zzw(self) -> tuple[int, int, int, ]: ...

    @property
    def zww(self) -> tuple[int, int, int, ]: ...

    @property
    def www(self) -> tuple[int, int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...



    @property
    def rrr(self) -> tuple[int, int, int, ]: ...

    @property
    def rrg(self) -> tuple[int, int, int, ]: ...

    @property
    def rrb(self) -> tuple[int, int, int, ]: ...

    @property
    def rra(self) -> tuple[int, int, int, ]: ...

    @property
    def rgg(self) -> tuple[int, int, int, ]: ...

    @property
    def rgb(self) -> tuple[int, int, int, ]: ...

    @property
    def rga(self) -> tuple[int, int, int, ]: ...

    @property
    def rbb(self) -> tuple[int, int, int, ]: ...

    @property
    def rba(self) -> tuple[int, int, int, ]: ...

    @property
    def raa(self) -> tuple[int, int, int, ]: ...

    @property
    def ggg(self) -> tuple[int, int, int, ]: ...

    @property
    def ggb(self) -> tuple[int, int, int, ]: ...

    @property
    def gga(self) -> tuple[int, int, int, ]: ...

    @property
    def gbb(self) -> tuple[int, int, int, ]: ...

    @property
    def gba(self) -> tuple[int, int, int, ]: ...

    @property
    def gaa(self) -> tuple[int, int, int, ]: ...

    @property
    def bbb(self) -> tuple[int, int, int, ]: ...

    @property
    def bba(self) -> tuple[int, int, int, ]: ...

    @property
    def baa(self) -> tuple[int, int, int, ]: ...

    @property
    def aaa(self) -> tuple[int, int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...



    @property
    def sss(self) -> tuple[int, int, int, ]: ...

    @property
    def sst(self) -> tuple[int, int, int, ]: ...

    @property
    def ssq(self) -> tuple[int, int, int, ]: ...

    @property
    def ssp(self) -> tuple[int, int, int, ]: ...

    @property
    def stt(self) -> tuple[int, int, int, ]: ...

    @property
    def stq(self) -> tuple[int, int, int, ]: ...

    @property
    def stp(self) -> tuple[int, int, int, ]: ...

    @property
    def sqq(self) -> tuple[int, int, int, ]: ...

    @property
    def sqp(self) -> tuple[int, int, int, ]: ...

    @property
    def spp(self) -> tuple[int, int, int, ]: ...

    @property
    def ttt(self) -> tuple[int, int, int, ]: ...

    @property
    def ttq(self) -> tuple[int, int, int, ]: ...

    @property
    def ttp(self) -> tuple[int, int, int, ]: ...

    @property
    def tqq(self) -> tuple[int, int, int, ]: ...

    @property
    def tqp(self) -> tuple[int, int, int, ]: ...

    @property
    def tpp(self) -> tuple[int, int, int, ]: ...

    @property
    def qqq(self) -> tuple[int, int, int, ]: ...

    @property
    def qqp(self) -> tuple[int, int, int, ]: ...

    @property
    def qpp(self) -> tuple[int, int, int, ]: ...

    @property
    def ppp(self) -> tuple[int, int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...



    @property
    def uuu(self) -> tuple[int, int, int, ]: ...

    @property
    def uuv(self) -> tuple[int, int, int, ]: ...

    @property
    def uvv(self) -> tuple[int, int, int, ]: ...

    @property
    def vvv(self) -> tuple[int, int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class BVector4:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...




    @overload
    def __init__(self, x: Number, y: Number, z: Number, w: Number, /): ...


    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> bool: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: BVector4) -> BVector4: ...
    @overload
    def __add__(self, other: Number) -> BVector4: ...
    @overload
    def __radd__(self, other: BVector4) -> BVector4: ...
    @overload
    def __radd__(self, other: Number) -> BVector4: ...

    @overload
    def __sub__(self, other: BVector4) -> BVector4: ...
    @overload
    def __sub__(self, other: Number) -> BVector4: ...
    @overload
    def __rsub__(self, other: BVector4) -> BVector4: ...
    @overload
    def __rsub__(self, other: Number) -> BVector4: ...

    @overload
    def __mul__(self, other: BVector4) -> BVector4: ...
    @overload
    def __mul__(self, other: Number) -> BVector4: ...
    @overload
    def __rmul__(self, other: BVector4) -> BVector4: ...
    @overload
    def __rmul__(self, other: Number) -> BVector4: ...







    def __abs__(self) -> BVector4: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> bool: ...

    @property
    def y(self) -> bool: ...

    @property
    def z(self) -> bool: ...

    @property
    def w(self) -> bool: ...



    @property
    def xx(self) -> tuple[bool, bool, ]: ...

    @property
    def xy(self) -> tuple[bool, bool, ]: ...

    @property
    def xz(self) -> tuple[bool, bool, ]: ...

    @property
    def xw(self) -> tuple[bool, bool, ]: ...

    @property
    def yy(self) -> tuple[bool, bool, ]: ...

    @property
    def yz(self) -> tuple[bool, bool, ]: ...

    @property
    def yw(self) -> tuple[bool, bool, ]: ...

    @property
    def zz(self) -> tuple[bool, bool, ]: ...

    @property
    def zw(self) -> tuple[bool, bool, ]: ...

    @property
    def ww(self) -> tuple[bool, bool, ]: ...



    @property
    def xxx(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def xxy(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def xxz(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def xxw(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def xyy(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def xyz(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def xyw(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def xzz(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def xzw(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def xww(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def yyy(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def yyz(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def yyw(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def yzz(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def yzw(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def yww(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def zzz(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def zzw(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def zww(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def www(self) -> tuple[bool, bool, bool, ]: ...



    @property
    def xxxx(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def xxxy(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def xxxz(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def xxxw(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def xxyy(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def xxyz(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def xxyw(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def xxzz(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def xxzw(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def xxww(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def xyyy(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def xyyz(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def xyyw(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def xyzz(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def xyzw(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def xyww(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def xzzz(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def xzzw(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def xzww(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def xwww(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def yyyy(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def yyyz(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def yyyw(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def yyzz(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def yyzw(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def yyww(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def yzzz(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def yzzw(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def yzww(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def ywww(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def zzzz(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def zzzw(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def zzww(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def zwww(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def wwww(self) -> tuple[bool, bool, bool, bool, ]: ...





    @property
    def r(self) -> bool: ...

    @property
    def g(self) -> bool: ...

    @property
    def b(self) -> bool: ...

    @property
    def a(self) -> bool: ...



    @property
    def rr(self) -> tuple[bool, bool, ]: ...

    @property
    def rg(self) -> tuple[bool, bool, ]: ...

    @property
    def rb(self) -> tuple[bool, bool, ]: ...

    @property
    def ra(self) -> tuple[bool, bool, ]: ...

    @property
    def gg(self) -> tuple[bool, bool, ]: ...

    @property
    def gb(self) -> tuple[bool, bool, ]: ...

    @property
    def ga(self) -> tuple[bool, bool, ]: ...

    @property
    def bb(self) -> tuple[bool, bool, ]: ...

    @property
    def ba(self) -> tuple[bool, bool, ]: ...

    @property
    def aa(self) -> tuple[bool, bool, ]: ...



    @property
    def rrr(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def rrg(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def rrb(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def rra(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def rgg(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def rgb(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def rga(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def rbb(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def rba(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def raa(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def ggg(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def ggb(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def gga(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def gbb(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def gba(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def gaa(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def bbb(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def bba(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def baa(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def aaa(self) -> tuple[bool, bool, bool, ]: ...



    @property
    def rrrr(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def rrrg(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def rrrb(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def rrra(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def rrgg(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def rrgb(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def rrga(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def rrbb(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def rrba(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def rraa(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def rggg(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def rggb(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def rgga(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def rgbb(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def rgba(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def rgaa(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def rbbb(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def rbba(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def rbaa(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def raaa(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def gggg(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def gggb(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def ggga(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def ggbb(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def ggba(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def ggaa(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def gbbb(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def gbba(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def gbaa(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def gaaa(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def bbbb(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def bbba(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def bbaa(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def baaa(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def aaaa(self) -> tuple[bool, bool, bool, bool, ]: ...





    @property
    def s(self) -> bool: ...

    @property
    def t(self) -> bool: ...

    @property
    def q(self) -> bool: ...

    @property
    def p(self) -> bool: ...



    @property
    def ss(self) -> tuple[bool, bool, ]: ...

    @property
    def st(self) -> tuple[bool, bool, ]: ...

    @property
    def sq(self) -> tuple[bool, bool, ]: ...

    @property
    def sp(self) -> tuple[bool, bool, ]: ...

    @property
    def tt(self) -> tuple[bool, bool, ]: ...

    @property
    def tq(self) -> tuple[bool, bool, ]: ...

    @property
    def tp(self) -> tuple[bool, bool, ]: ...

    @property
    def qq(self) -> tuple[bool, bool, ]: ...

    @property
    def qp(self) -> tuple[bool, bool, ]: ...

    @property
    def pp(self) -> tuple[bool, bool, ]: ...



    @property
    def sss(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def sst(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def ssq(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def ssp(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def stt(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def stq(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def stp(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def sqq(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def sqp(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def spp(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def ttt(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def ttq(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def ttp(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def tqq(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def tqp(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def tpp(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def qqq(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def qqp(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def qpp(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def ppp(self) -> tuple[bool, bool, bool, ]: ...



    @property
    def ssss(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def ssst(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def sssq(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def sssp(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def sstt(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def sstq(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def sstp(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def ssqq(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def ssqp(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def sspp(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def sttt(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def sttq(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def sttp(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def stqq(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def stqp(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def stpp(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def sqqq(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def sqqp(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def sqpp(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def sppp(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def tttt(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def tttq(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def tttp(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def ttqq(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def ttqp(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def ttpp(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def tqqq(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def tqqp(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def tqpp(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def tppp(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def qqqq(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def qqqp(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def qqpp(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def qppp(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def pppp(self) -> tuple[bool, bool, bool, bool, ]: ...





    @property
    def u(self) -> bool: ...

    @property
    def v(self) -> bool: ...



    @property
    def uu(self) -> tuple[bool, bool, ]: ...

    @property
    def uv(self) -> tuple[bool, bool, ]: ...

    @property
    def vv(self) -> tuple[bool, bool, ]: ...



    @property
    def uuu(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def uuv(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def uvv(self) -> tuple[bool, bool, bool, ]: ...

    @property
    def vvv(self) -> tuple[bool, bool, bool, ]: ...



    @property
    def uuuu(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def uuuv(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def uuvv(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def uvvv(self) -> tuple[bool, bool, bool, bool, ]: ...

    @property
    def vvvv(self) -> tuple[bool, bool, bool, bool, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[bool, bool]: ...









@final
class DVector4:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...




    @overload
    def __init__(self, x: Number, y: Number, z: Number, w: Number, /): ...


    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: DVector4) -> DVector4: ...
    @overload
    def __add__(self, other: Number) -> DVector4: ...
    @overload
    def __radd__(self, other: DVector4) -> DVector4: ...
    @overload
    def __radd__(self, other: Number) -> DVector4: ...

    @overload
    def __sub__(self, other: DVector4) -> DVector4: ...
    @overload
    def __sub__(self, other: Number) -> DVector4: ...
    @overload
    def __rsub__(self, other: DVector4) -> DVector4: ...
    @overload
    def __rsub__(self, other: Number) -> DVector4: ...

    @overload
    def __mul__(self, other: DVector4) -> DVector4: ...
    @overload
    def __mul__(self, other: Number) -> DVector4: ...
    @overload
    def __rmul__(self, other: DVector4) -> DVector4: ...
    @overload
    def __rmul__(self, other: Number) -> DVector4: ...




    @overload
    def __truediv__(self, other: DVector4) -> DVector4: ...
    @overload
    def __truediv__(self, other: Number) -> DVector4: ...
    @overload
    def __rtruediv__(self, other: DVector4) -> DVector4: ...
    @overload
    def __rtruediv__(self, other: Number) -> DVector4: ...




    def __abs__(self) -> DVector4: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...



    @property
    def xxx(self) -> tuple[int, int, int, ]: ...

    @property
    def xxy(self) -> tuple[int, int, int, ]: ...

    @property
    def xxz(self) -> tuple[int, int, int, ]: ...

    @property
    def xxw(self) -> tuple[int, int, int, ]: ...

    @property
    def xyy(self) -> tuple[int, int, int, ]: ...

    @property
    def xyz(self) -> tuple[int, int, int, ]: ...

    @property
    def xyw(self) -> tuple[int, int, int, ]: ...

    @property
    def xzz(self) -> tuple[int, int, int, ]: ...

    @property
    def xzw(self) -> tuple[int, int, int, ]: ...

    @property
    def xww(self) -> tuple[int, int, int, ]: ...

    @property
    def yyy(self) -> tuple[int, int, int, ]: ...

    @property
    def yyz(self) -> tuple[int, int, int, ]: ...

    @property
    def yyw(self) -> tuple[int, int, int, ]: ...

    @property
    def yzz(self) -> tuple[int, int, int, ]: ...

    @property
    def yzw(self) -> tuple[int, int, int, ]: ...

    @property
    def yww(self) -> tuple[int, int, int, ]: ...

    @property
    def zzz(self) -> tuple[int, int, int, ]: ...

    @property
    def zzw(self) -> tuple[int, int, int, ]: ...

    @property
    def zww(self) -> tuple[int, int, int, ]: ...

    @property
    def www(self) -> tuple[int, int, int, ]: ...



    @property
    def xxxx(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xwww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ywww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zwww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def wwww(self) -> tuple[int, int, int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...



    @property
    def rrr(self) -> tuple[int, int, int, ]: ...

    @property
    def rrg(self) -> tuple[int, int, int, ]: ...

    @property
    def rrb(self) -> tuple[int, int, int, ]: ...

    @property
    def rra(self) -> tuple[int, int, int, ]: ...

    @property
    def rgg(self) -> tuple[int, int, int, ]: ...

    @property
    def rgb(self) -> tuple[int, int, int, ]: ...

    @property
    def rga(self) -> tuple[int, int, int, ]: ...

    @property
    def rbb(self) -> tuple[int, int, int, ]: ...

    @property
    def rba(self) -> tuple[int, int, int, ]: ...

    @property
    def raa(self) -> tuple[int, int, int, ]: ...

    @property
    def ggg(self) -> tuple[int, int, int, ]: ...

    @property
    def ggb(self) -> tuple[int, int, int, ]: ...

    @property
    def gga(self) -> tuple[int, int, int, ]: ...

    @property
    def gbb(self) -> tuple[int, int, int, ]: ...

    @property
    def gba(self) -> tuple[int, int, int, ]: ...

    @property
    def gaa(self) -> tuple[int, int, int, ]: ...

    @property
    def bbb(self) -> tuple[int, int, int, ]: ...

    @property
    def bba(self) -> tuple[int, int, int, ]: ...

    @property
    def baa(self) -> tuple[int, int, int, ]: ...

    @property
    def aaa(self) -> tuple[int, int, int, ]: ...



    @property
    def rrrr(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrrg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrrb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrra(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrgg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrgb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rraa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rggg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rggb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def raaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gggg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gggb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gaaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def baaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def aaaa(self) -> tuple[int, int, int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...



    @property
    def sss(self) -> tuple[int, int, int, ]: ...

    @property
    def sst(self) -> tuple[int, int, int, ]: ...

    @property
    def ssq(self) -> tuple[int, int, int, ]: ...

    @property
    def ssp(self) -> tuple[int, int, int, ]: ...

    @property
    def stt(self) -> tuple[int, int, int, ]: ...

    @property
    def stq(self) -> tuple[int, int, int, ]: ...

    @property
    def stp(self) -> tuple[int, int, int, ]: ...

    @property
    def sqq(self) -> tuple[int, int, int, ]: ...

    @property
    def sqp(self) -> tuple[int, int, int, ]: ...

    @property
    def spp(self) -> tuple[int, int, int, ]: ...

    @property
    def ttt(self) -> tuple[int, int, int, ]: ...

    @property
    def ttq(self) -> tuple[int, int, int, ]: ...

    @property
    def ttp(self) -> tuple[int, int, int, ]: ...

    @property
    def tqq(self) -> tuple[int, int, int, ]: ...

    @property
    def tqp(self) -> tuple[int, int, int, ]: ...

    @property
    def tpp(self) -> tuple[int, int, int, ]: ...

    @property
    def qqq(self) -> tuple[int, int, int, ]: ...

    @property
    def qqp(self) -> tuple[int, int, int, ]: ...

    @property
    def qpp(self) -> tuple[int, int, int, ]: ...

    @property
    def ppp(self) -> tuple[int, int, int, ]: ...



    @property
    def ssss(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssst(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sssq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sssp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sspp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def pppp(self) -> tuple[int, int, int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...



    @property
    def uuu(self) -> tuple[int, int, int, ]: ...

    @property
    def uuv(self) -> tuple[int, int, int, ]: ...

    @property
    def uvv(self) -> tuple[int, int, int, ]: ...

    @property
    def vvv(self) -> tuple[int, int, int, ]: ...



    @property
    def uuuu(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uuuv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uuvv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uvvv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def vvvv(self) -> tuple[int, int, int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class FVector4:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...




    @overload
    def __init__(self, x: Number, y: Number, z: Number, w: Number, /): ...


    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> float: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: FVector4) -> FVector4: ...
    @overload
    def __add__(self, other: Number) -> FVector4: ...
    @overload
    def __radd__(self, other: FVector4) -> FVector4: ...
    @overload
    def __radd__(self, other: Number) -> FVector4: ...

    @overload
    def __sub__(self, other: FVector4) -> FVector4: ...
    @overload
    def __sub__(self, other: Number) -> FVector4: ...
    @overload
    def __rsub__(self, other: FVector4) -> FVector4: ...
    @overload
    def __rsub__(self, other: Number) -> FVector4: ...

    @overload
    def __mul__(self, other: FVector4) -> FVector4: ...
    @overload
    def __mul__(self, other: Number) -> FVector4: ...
    @overload
    def __rmul__(self, other: FVector4) -> FVector4: ...
    @overload
    def __rmul__(self, other: Number) -> FVector4: ...


    def __matmul__(self, other: FVector4) -> FVector4: ...
    def __rmatmul__(self, other: FVector4) -> FVector4: ...

    @overload
    def __mod__(self, other: FVector4) -> FVector4: ...
    @overload
    def __mod__(self, other: Number) -> FVector4: ...
    @overload
    def __rmod__(self, other: FVector4) -> FVector4: ...
    @overload
    def __rmod__(self, other: Number) -> FVector4: ...

    @overload
    def __pow__(self, other: FVector4) -> FVector4: ...
    @overload
    def __pow__(self, other: Number) -> FVector4: ...
    @overload
    def __rpow__(self, other: FVector4) -> FVector4: ...
    @overload
    def __rpow__(self, other: Number) -> FVector4: ...



    @overload
    def __truediv__(self, other: FVector4) -> FVector4: ...
    @overload
    def __truediv__(self, other: Number) -> FVector4: ...
    @overload
    def __rtruediv__(self, other: FVector4) -> FVector4: ...
    @overload
    def __rtruediv__(self, other: Number) -> FVector4: ...




    def __abs__(self) -> FVector4: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> float: ...

    @property
    def y(self) -> float: ...

    @property
    def z(self) -> float: ...

    @property
    def w(self) -> float: ...



    @property
    def xx(self) -> tuple[float, float, ]: ...

    @property
    def xy(self) -> tuple[float, float, ]: ...

    @property
    def xz(self) -> tuple[float, float, ]: ...

    @property
    def xw(self) -> tuple[float, float, ]: ...

    @property
    def yy(self) -> tuple[float, float, ]: ...

    @property
    def yz(self) -> tuple[float, float, ]: ...

    @property
    def yw(self) -> tuple[float, float, ]: ...

    @property
    def zz(self) -> tuple[float, float, ]: ...

    @property
    def zw(self) -> tuple[float, float, ]: ...

    @property
    def ww(self) -> tuple[float, float, ]: ...



    @property
    def xxx(self) -> tuple[float, float, float, ]: ...

    @property
    def xxy(self) -> tuple[float, float, float, ]: ...

    @property
    def xxz(self) -> tuple[float, float, float, ]: ...

    @property
    def xxw(self) -> tuple[float, float, float, ]: ...

    @property
    def xyy(self) -> tuple[float, float, float, ]: ...

    @property
    def xyz(self) -> tuple[float, float, float, ]: ...

    @property
    def xyw(self) -> tuple[float, float, float, ]: ...

    @property
    def xzz(self) -> tuple[float, float, float, ]: ...

    @property
    def xzw(self) -> tuple[float, float, float, ]: ...

    @property
    def xww(self) -> tuple[float, float, float, ]: ...

    @property
    def yyy(self) -> tuple[float, float, float, ]: ...

    @property
    def yyz(self) -> tuple[float, float, float, ]: ...

    @property
    def yyw(self) -> tuple[float, float, float, ]: ...

    @property
    def yzz(self) -> tuple[float, float, float, ]: ...

    @property
    def yzw(self) -> tuple[float, float, float, ]: ...

    @property
    def yww(self) -> tuple[float, float, float, ]: ...

    @property
    def zzz(self) -> tuple[float, float, float, ]: ...

    @property
    def zzw(self) -> tuple[float, float, float, ]: ...

    @property
    def zww(self) -> tuple[float, float, float, ]: ...

    @property
    def www(self) -> tuple[float, float, float, ]: ...



    @property
    def xxxx(self) -> tuple[float, float, float, float, ]: ...

    @property
    def xxxy(self) -> tuple[float, float, float, float, ]: ...

    @property
    def xxxz(self) -> tuple[float, float, float, float, ]: ...

    @property
    def xxxw(self) -> tuple[float, float, float, float, ]: ...

    @property
    def xxyy(self) -> tuple[float, float, float, float, ]: ...

    @property
    def xxyz(self) -> tuple[float, float, float, float, ]: ...

    @property
    def xxyw(self) -> tuple[float, float, float, float, ]: ...

    @property
    def xxzz(self) -> tuple[float, float, float, float, ]: ...

    @property
    def xxzw(self) -> tuple[float, float, float, float, ]: ...

    @property
    def xxww(self) -> tuple[float, float, float, float, ]: ...

    @property
    def xyyy(self) -> tuple[float, float, float, float, ]: ...

    @property
    def xyyz(self) -> tuple[float, float, float, float, ]: ...

    @property
    def xyyw(self) -> tuple[float, float, float, float, ]: ...

    @property
    def xyzz(self) -> tuple[float, float, float, float, ]: ...

    @property
    def xyzw(self) -> tuple[float, float, float, float, ]: ...

    @property
    def xyww(self) -> tuple[float, float, float, float, ]: ...

    @property
    def xzzz(self) -> tuple[float, float, float, float, ]: ...

    @property
    def xzzw(self) -> tuple[float, float, float, float, ]: ...

    @property
    def xzww(self) -> tuple[float, float, float, float, ]: ...

    @property
    def xwww(self) -> tuple[float, float, float, float, ]: ...

    @property
    def yyyy(self) -> tuple[float, float, float, float, ]: ...

    @property
    def yyyz(self) -> tuple[float, float, float, float, ]: ...

    @property
    def yyyw(self) -> tuple[float, float, float, float, ]: ...

    @property
    def yyzz(self) -> tuple[float, float, float, float, ]: ...

    @property
    def yyzw(self) -> tuple[float, float, float, float, ]: ...

    @property
    def yyww(self) -> tuple[float, float, float, float, ]: ...

    @property
    def yzzz(self) -> tuple[float, float, float, float, ]: ...

    @property
    def yzzw(self) -> tuple[float, float, float, float, ]: ...

    @property
    def yzww(self) -> tuple[float, float, float, float, ]: ...

    @property
    def ywww(self) -> tuple[float, float, float, float, ]: ...

    @property
    def zzzz(self) -> tuple[float, float, float, float, ]: ...

    @property
    def zzzw(self) -> tuple[float, float, float, float, ]: ...

    @property
    def zzww(self) -> tuple[float, float, float, float, ]: ...

    @property
    def zwww(self) -> tuple[float, float, float, float, ]: ...

    @property
    def wwww(self) -> tuple[float, float, float, float, ]: ...





    @property
    def r(self) -> float: ...

    @property
    def g(self) -> float: ...

    @property
    def b(self) -> float: ...

    @property
    def a(self) -> float: ...



    @property
    def rr(self) -> tuple[float, float, ]: ...

    @property
    def rg(self) -> tuple[float, float, ]: ...

    @property
    def rb(self) -> tuple[float, float, ]: ...

    @property
    def ra(self) -> tuple[float, float, ]: ...

    @property
    def gg(self) -> tuple[float, float, ]: ...

    @property
    def gb(self) -> tuple[float, float, ]: ...

    @property
    def ga(self) -> tuple[float, float, ]: ...

    @property
    def bb(self) -> tuple[float, float, ]: ...

    @property
    def ba(self) -> tuple[float, float, ]: ...

    @property
    def aa(self) -> tuple[float, float, ]: ...



    @property
    def rrr(self) -> tuple[float, float, float, ]: ...

    @property
    def rrg(self) -> tuple[float, float, float, ]: ...

    @property
    def rrb(self) -> tuple[float, float, float, ]: ...

    @property
    def rra(self) -> tuple[float, float, float, ]: ...

    @property
    def rgg(self) -> tuple[float, float, float, ]: ...

    @property
    def rgb(self) -> tuple[float, float, float, ]: ...

    @property
    def rga(self) -> tuple[float, float, float, ]: ...

    @property
    def rbb(self) -> tuple[float, float, float, ]: ...

    @property
    def rba(self) -> tuple[float, float, float, ]: ...

    @property
    def raa(self) -> tuple[float, float, float, ]: ...

    @property
    def ggg(self) -> tuple[float, float, float, ]: ...

    @property
    def ggb(self) -> tuple[float, float, float, ]: ...

    @property
    def gga(self) -> tuple[float, float, float, ]: ...

    @property
    def gbb(self) -> tuple[float, float, float, ]: ...

    @property
    def gba(self) -> tuple[float, float, float, ]: ...

    @property
    def gaa(self) -> tuple[float, float, float, ]: ...

    @property
    def bbb(self) -> tuple[float, float, float, ]: ...

    @property
    def bba(self) -> tuple[float, float, float, ]: ...

    @property
    def baa(self) -> tuple[float, float, float, ]: ...

    @property
    def aaa(self) -> tuple[float, float, float, ]: ...



    @property
    def rrrr(self) -> tuple[float, float, float, float, ]: ...

    @property
    def rrrg(self) -> tuple[float, float, float, float, ]: ...

    @property
    def rrrb(self) -> tuple[float, float, float, float, ]: ...

    @property
    def rrra(self) -> tuple[float, float, float, float, ]: ...

    @property
    def rrgg(self) -> tuple[float, float, float, float, ]: ...

    @property
    def rrgb(self) -> tuple[float, float, float, float, ]: ...

    @property
    def rrga(self) -> tuple[float, float, float, float, ]: ...

    @property
    def rrbb(self) -> tuple[float, float, float, float, ]: ...

    @property
    def rrba(self) -> tuple[float, float, float, float, ]: ...

    @property
    def rraa(self) -> tuple[float, float, float, float, ]: ...

    @property
    def rggg(self) -> tuple[float, float, float, float, ]: ...

    @property
    def rggb(self) -> tuple[float, float, float, float, ]: ...

    @property
    def rgga(self) -> tuple[float, float, float, float, ]: ...

    @property
    def rgbb(self) -> tuple[float, float, float, float, ]: ...

    @property
    def rgba(self) -> tuple[float, float, float, float, ]: ...

    @property
    def rgaa(self) -> tuple[float, float, float, float, ]: ...

    @property
    def rbbb(self) -> tuple[float, float, float, float, ]: ...

    @property
    def rbba(self) -> tuple[float, float, float, float, ]: ...

    @property
    def rbaa(self) -> tuple[float, float, float, float, ]: ...

    @property
    def raaa(self) -> tuple[float, float, float, float, ]: ...

    @property
    def gggg(self) -> tuple[float, float, float, float, ]: ...

    @property
    def gggb(self) -> tuple[float, float, float, float, ]: ...

    @property
    def ggga(self) -> tuple[float, float, float, float, ]: ...

    @property
    def ggbb(self) -> tuple[float, float, float, float, ]: ...

    @property
    def ggba(self) -> tuple[float, float, float, float, ]: ...

    @property
    def ggaa(self) -> tuple[float, float, float, float, ]: ...

    @property
    def gbbb(self) -> tuple[float, float, float, float, ]: ...

    @property
    def gbba(self) -> tuple[float, float, float, float, ]: ...

    @property
    def gbaa(self) -> tuple[float, float, float, float, ]: ...

    @property
    def gaaa(self) -> tuple[float, float, float, float, ]: ...

    @property
    def bbbb(self) -> tuple[float, float, float, float, ]: ...

    @property
    def bbba(self) -> tuple[float, float, float, float, ]: ...

    @property
    def bbaa(self) -> tuple[float, float, float, float, ]: ...

    @property
    def baaa(self) -> tuple[float, float, float, float, ]: ...

    @property
    def aaaa(self) -> tuple[float, float, float, float, ]: ...





    @property
    def s(self) -> float: ...

    @property
    def t(self) -> float: ...

    @property
    def q(self) -> float: ...

    @property
    def p(self) -> float: ...



    @property
    def ss(self) -> tuple[float, float, ]: ...

    @property
    def st(self) -> tuple[float, float, ]: ...

    @property
    def sq(self) -> tuple[float, float, ]: ...

    @property
    def sp(self) -> tuple[float, float, ]: ...

    @property
    def tt(self) -> tuple[float, float, ]: ...

    @property
    def tq(self) -> tuple[float, float, ]: ...

    @property
    def tp(self) -> tuple[float, float, ]: ...

    @property
    def qq(self) -> tuple[float, float, ]: ...

    @property
    def qp(self) -> tuple[float, float, ]: ...

    @property
    def pp(self) -> tuple[float, float, ]: ...



    @property
    def sss(self) -> tuple[float, float, float, ]: ...

    @property
    def sst(self) -> tuple[float, float, float, ]: ...

    @property
    def ssq(self) -> tuple[float, float, float, ]: ...

    @property
    def ssp(self) -> tuple[float, float, float, ]: ...

    @property
    def stt(self) -> tuple[float, float, float, ]: ...

    @property
    def stq(self) -> tuple[float, float, float, ]: ...

    @property
    def stp(self) -> tuple[float, float, float, ]: ...

    @property
    def sqq(self) -> tuple[float, float, float, ]: ...

    @property
    def sqp(self) -> tuple[float, float, float, ]: ...

    @property
    def spp(self) -> tuple[float, float, float, ]: ...

    @property
    def ttt(self) -> tuple[float, float, float, ]: ...

    @property
    def ttq(self) -> tuple[float, float, float, ]: ...

    @property
    def ttp(self) -> tuple[float, float, float, ]: ...

    @property
    def tqq(self) -> tuple[float, float, float, ]: ...

    @property
    def tqp(self) -> tuple[float, float, float, ]: ...

    @property
    def tpp(self) -> tuple[float, float, float, ]: ...

    @property
    def qqq(self) -> tuple[float, float, float, ]: ...

    @property
    def qqp(self) -> tuple[float, float, float, ]: ...

    @property
    def qpp(self) -> tuple[float, float, float, ]: ...

    @property
    def ppp(self) -> tuple[float, float, float, ]: ...



    @property
    def ssss(self) -> tuple[float, float, float, float, ]: ...

    @property
    def ssst(self) -> tuple[float, float, float, float, ]: ...

    @property
    def sssq(self) -> tuple[float, float, float, float, ]: ...

    @property
    def sssp(self) -> tuple[float, float, float, float, ]: ...

    @property
    def sstt(self) -> tuple[float, float, float, float, ]: ...

    @property
    def sstq(self) -> tuple[float, float, float, float, ]: ...

    @property
    def sstp(self) -> tuple[float, float, float, float, ]: ...

    @property
    def ssqq(self) -> tuple[float, float, float, float, ]: ...

    @property
    def ssqp(self) -> tuple[float, float, float, float, ]: ...

    @property
    def sspp(self) -> tuple[float, float, float, float, ]: ...

    @property
    def sttt(self) -> tuple[float, float, float, float, ]: ...

    @property
    def sttq(self) -> tuple[float, float, float, float, ]: ...

    @property
    def sttp(self) -> tuple[float, float, float, float, ]: ...

    @property
    def stqq(self) -> tuple[float, float, float, float, ]: ...

    @property
    def stqp(self) -> tuple[float, float, float, float, ]: ...

    @property
    def stpp(self) -> tuple[float, float, float, float, ]: ...

    @property
    def sqqq(self) -> tuple[float, float, float, float, ]: ...

    @property
    def sqqp(self) -> tuple[float, float, float, float, ]: ...

    @property
    def sqpp(self) -> tuple[float, float, float, float, ]: ...

    @property
    def sppp(self) -> tuple[float, float, float, float, ]: ...

    @property
    def tttt(self) -> tuple[float, float, float, float, ]: ...

    @property
    def tttq(self) -> tuple[float, float, float, float, ]: ...

    @property
    def tttp(self) -> tuple[float, float, float, float, ]: ...

    @property
    def ttqq(self) -> tuple[float, float, float, float, ]: ...

    @property
    def ttqp(self) -> tuple[float, float, float, float, ]: ...

    @property
    def ttpp(self) -> tuple[float, float, float, float, ]: ...

    @property
    def tqqq(self) -> tuple[float, float, float, float, ]: ...

    @property
    def tqqp(self) -> tuple[float, float, float, float, ]: ...

    @property
    def tqpp(self) -> tuple[float, float, float, float, ]: ...

    @property
    def tppp(self) -> tuple[float, float, float, float, ]: ...

    @property
    def qqqq(self) -> tuple[float, float, float, float, ]: ...

    @property
    def qqqp(self) -> tuple[float, float, float, float, ]: ...

    @property
    def qqpp(self) -> tuple[float, float, float, float, ]: ...

    @property
    def qppp(self) -> tuple[float, float, float, float, ]: ...

    @property
    def pppp(self) -> tuple[float, float, float, float, ]: ...





    @property
    def u(self) -> float: ...

    @property
    def v(self) -> float: ...



    @property
    def uu(self) -> tuple[float, float, ]: ...

    @property
    def uv(self) -> tuple[float, float, ]: ...

    @property
    def vv(self) -> tuple[float, float, ]: ...



    @property
    def uuu(self) -> tuple[float, float, float, ]: ...

    @property
    def uuv(self) -> tuple[float, float, float, ]: ...

    @property
    def uvv(self) -> tuple[float, float, float, ]: ...

    @property
    def vvv(self) -> tuple[float, float, float, ]: ...



    @property
    def uuuu(self) -> tuple[float, float, float, float, ]: ...

    @property
    def uuuv(self) -> tuple[float, float, float, float, ]: ...

    @property
    def uuvv(self) -> tuple[float, float, float, float, ]: ...

    @property
    def uvvv(self) -> tuple[float, float, float, float, ]: ...

    @property
    def vvvv(self) -> tuple[float, float, float, float, ]: ...





    @property
    def magnitude(self) -> float: ...

    def cross(self, other: FVector4, /) -> FVector4: ...
    def normalize(self) -> float: ...
    def distance(self, other: FVector4, /) -> float: ...


    @classmethod
    def get_limits(cls) -> tuple[float, float]: ...









@final
class I8Vector4:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...




    @overload
    def __init__(self, x: Number, y: Number, z: Number, w: Number, /): ...


    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: I8Vector4) -> I8Vector4: ...
    @overload
    def __add__(self, other: Number) -> I8Vector4: ...
    @overload
    def __radd__(self, other: I8Vector4) -> I8Vector4: ...
    @overload
    def __radd__(self, other: Number) -> I8Vector4: ...

    @overload
    def __sub__(self, other: I8Vector4) -> I8Vector4: ...
    @overload
    def __sub__(self, other: Number) -> I8Vector4: ...
    @overload
    def __rsub__(self, other: I8Vector4) -> I8Vector4: ...
    @overload
    def __rsub__(self, other: Number) -> I8Vector4: ...

    @overload
    def __mul__(self, other: I8Vector4) -> I8Vector4: ...
    @overload
    def __mul__(self, other: Number) -> I8Vector4: ...
    @overload
    def __rmul__(self, other: I8Vector4) -> I8Vector4: ...
    @overload
    def __rmul__(self, other: Number) -> I8Vector4: ...




    @overload
    def __truediv__(self, other: I8Vector4) -> I8Vector4: ...
    @overload
    def __truediv__(self, other: Number) -> I8Vector4: ...
    @overload
    def __rtruediv__(self, other: I8Vector4) -> I8Vector4: ...
    @overload
    def __rtruediv__(self, other: Number) -> I8Vector4: ...




    def __abs__(self) -> I8Vector4: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...



    @property
    def xxx(self) -> tuple[int, int, int, ]: ...

    @property
    def xxy(self) -> tuple[int, int, int, ]: ...

    @property
    def xxz(self) -> tuple[int, int, int, ]: ...

    @property
    def xxw(self) -> tuple[int, int, int, ]: ...

    @property
    def xyy(self) -> tuple[int, int, int, ]: ...

    @property
    def xyz(self) -> tuple[int, int, int, ]: ...

    @property
    def xyw(self) -> tuple[int, int, int, ]: ...

    @property
    def xzz(self) -> tuple[int, int, int, ]: ...

    @property
    def xzw(self) -> tuple[int, int, int, ]: ...

    @property
    def xww(self) -> tuple[int, int, int, ]: ...

    @property
    def yyy(self) -> tuple[int, int, int, ]: ...

    @property
    def yyz(self) -> tuple[int, int, int, ]: ...

    @property
    def yyw(self) -> tuple[int, int, int, ]: ...

    @property
    def yzz(self) -> tuple[int, int, int, ]: ...

    @property
    def yzw(self) -> tuple[int, int, int, ]: ...

    @property
    def yww(self) -> tuple[int, int, int, ]: ...

    @property
    def zzz(self) -> tuple[int, int, int, ]: ...

    @property
    def zzw(self) -> tuple[int, int, int, ]: ...

    @property
    def zww(self) -> tuple[int, int, int, ]: ...

    @property
    def www(self) -> tuple[int, int, int, ]: ...



    @property
    def xxxx(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xwww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ywww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zwww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def wwww(self) -> tuple[int, int, int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...



    @property
    def rrr(self) -> tuple[int, int, int, ]: ...

    @property
    def rrg(self) -> tuple[int, int, int, ]: ...

    @property
    def rrb(self) -> tuple[int, int, int, ]: ...

    @property
    def rra(self) -> tuple[int, int, int, ]: ...

    @property
    def rgg(self) -> tuple[int, int, int, ]: ...

    @property
    def rgb(self) -> tuple[int, int, int, ]: ...

    @property
    def rga(self) -> tuple[int, int, int, ]: ...

    @property
    def rbb(self) -> tuple[int, int, int, ]: ...

    @property
    def rba(self) -> tuple[int, int, int, ]: ...

    @property
    def raa(self) -> tuple[int, int, int, ]: ...

    @property
    def ggg(self) -> tuple[int, int, int, ]: ...

    @property
    def ggb(self) -> tuple[int, int, int, ]: ...

    @property
    def gga(self) -> tuple[int, int, int, ]: ...

    @property
    def gbb(self) -> tuple[int, int, int, ]: ...

    @property
    def gba(self) -> tuple[int, int, int, ]: ...

    @property
    def gaa(self) -> tuple[int, int, int, ]: ...

    @property
    def bbb(self) -> tuple[int, int, int, ]: ...

    @property
    def bba(self) -> tuple[int, int, int, ]: ...

    @property
    def baa(self) -> tuple[int, int, int, ]: ...

    @property
    def aaa(self) -> tuple[int, int, int, ]: ...



    @property
    def rrrr(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrrg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrrb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrra(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrgg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrgb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rraa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rggg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rggb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def raaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gggg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gggb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gaaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def baaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def aaaa(self) -> tuple[int, int, int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...



    @property
    def sss(self) -> tuple[int, int, int, ]: ...

    @property
    def sst(self) -> tuple[int, int, int, ]: ...

    @property
    def ssq(self) -> tuple[int, int, int, ]: ...

    @property
    def ssp(self) -> tuple[int, int, int, ]: ...

    @property
    def stt(self) -> tuple[int, int, int, ]: ...

    @property
    def stq(self) -> tuple[int, int, int, ]: ...

    @property
    def stp(self) -> tuple[int, int, int, ]: ...

    @property
    def sqq(self) -> tuple[int, int, int, ]: ...

    @property
    def sqp(self) -> tuple[int, int, int, ]: ...

    @property
    def spp(self) -> tuple[int, int, int, ]: ...

    @property
    def ttt(self) -> tuple[int, int, int, ]: ...

    @property
    def ttq(self) -> tuple[int, int, int, ]: ...

    @property
    def ttp(self) -> tuple[int, int, int, ]: ...

    @property
    def tqq(self) -> tuple[int, int, int, ]: ...

    @property
    def tqp(self) -> tuple[int, int, int, ]: ...

    @property
    def tpp(self) -> tuple[int, int, int, ]: ...

    @property
    def qqq(self) -> tuple[int, int, int, ]: ...

    @property
    def qqp(self) -> tuple[int, int, int, ]: ...

    @property
    def qpp(self) -> tuple[int, int, int, ]: ...

    @property
    def ppp(self) -> tuple[int, int, int, ]: ...



    @property
    def ssss(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssst(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sssq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sssp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sspp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def pppp(self) -> tuple[int, int, int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...



    @property
    def uuu(self) -> tuple[int, int, int, ]: ...

    @property
    def uuv(self) -> tuple[int, int, int, ]: ...

    @property
    def uvv(self) -> tuple[int, int, int, ]: ...

    @property
    def vvv(self) -> tuple[int, int, int, ]: ...



    @property
    def uuuu(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uuuv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uuvv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uvvv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def vvvv(self) -> tuple[int, int, int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class U8Vector4:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...




    @overload
    def __init__(self, x: Number, y: Number, z: Number, w: Number, /): ...


    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: U8Vector4) -> U8Vector4: ...
    @overload
    def __add__(self, other: Number) -> U8Vector4: ...
    @overload
    def __radd__(self, other: U8Vector4) -> U8Vector4: ...
    @overload
    def __radd__(self, other: Number) -> U8Vector4: ...

    @overload
    def __sub__(self, other: U8Vector4) -> U8Vector4: ...
    @overload
    def __sub__(self, other: Number) -> U8Vector4: ...
    @overload
    def __rsub__(self, other: U8Vector4) -> U8Vector4: ...
    @overload
    def __rsub__(self, other: Number) -> U8Vector4: ...

    @overload
    def __mul__(self, other: U8Vector4) -> U8Vector4: ...
    @overload
    def __mul__(self, other: Number) -> U8Vector4: ...
    @overload
    def __rmul__(self, other: U8Vector4) -> U8Vector4: ...
    @overload
    def __rmul__(self, other: Number) -> U8Vector4: ...




    @overload
    def __truediv__(self, other: U8Vector4) -> U8Vector4: ...
    @overload
    def __truediv__(self, other: Number) -> U8Vector4: ...
    @overload
    def __rtruediv__(self, other: U8Vector4) -> U8Vector4: ...
    @overload
    def __rtruediv__(self, other: Number) -> U8Vector4: ...



    def __neg__(self) -> U8Vector4: ...


    def __abs__(self) -> U8Vector4: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...



    @property
    def xxx(self) -> tuple[int, int, int, ]: ...

    @property
    def xxy(self) -> tuple[int, int, int, ]: ...

    @property
    def xxz(self) -> tuple[int, int, int, ]: ...

    @property
    def xxw(self) -> tuple[int, int, int, ]: ...

    @property
    def xyy(self) -> tuple[int, int, int, ]: ...

    @property
    def xyz(self) -> tuple[int, int, int, ]: ...

    @property
    def xyw(self) -> tuple[int, int, int, ]: ...

    @property
    def xzz(self) -> tuple[int, int, int, ]: ...

    @property
    def xzw(self) -> tuple[int, int, int, ]: ...

    @property
    def xww(self) -> tuple[int, int, int, ]: ...

    @property
    def yyy(self) -> tuple[int, int, int, ]: ...

    @property
    def yyz(self) -> tuple[int, int, int, ]: ...

    @property
    def yyw(self) -> tuple[int, int, int, ]: ...

    @property
    def yzz(self) -> tuple[int, int, int, ]: ...

    @property
    def yzw(self) -> tuple[int, int, int, ]: ...

    @property
    def yww(self) -> tuple[int, int, int, ]: ...

    @property
    def zzz(self) -> tuple[int, int, int, ]: ...

    @property
    def zzw(self) -> tuple[int, int, int, ]: ...

    @property
    def zww(self) -> tuple[int, int, int, ]: ...

    @property
    def www(self) -> tuple[int, int, int, ]: ...



    @property
    def xxxx(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xwww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ywww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zwww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def wwww(self) -> tuple[int, int, int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...



    @property
    def rrr(self) -> tuple[int, int, int, ]: ...

    @property
    def rrg(self) -> tuple[int, int, int, ]: ...

    @property
    def rrb(self) -> tuple[int, int, int, ]: ...

    @property
    def rra(self) -> tuple[int, int, int, ]: ...

    @property
    def rgg(self) -> tuple[int, int, int, ]: ...

    @property
    def rgb(self) -> tuple[int, int, int, ]: ...

    @property
    def rga(self) -> tuple[int, int, int, ]: ...

    @property
    def rbb(self) -> tuple[int, int, int, ]: ...

    @property
    def rba(self) -> tuple[int, int, int, ]: ...

    @property
    def raa(self) -> tuple[int, int, int, ]: ...

    @property
    def ggg(self) -> tuple[int, int, int, ]: ...

    @property
    def ggb(self) -> tuple[int, int, int, ]: ...

    @property
    def gga(self) -> tuple[int, int, int, ]: ...

    @property
    def gbb(self) -> tuple[int, int, int, ]: ...

    @property
    def gba(self) -> tuple[int, int, int, ]: ...

    @property
    def gaa(self) -> tuple[int, int, int, ]: ...

    @property
    def bbb(self) -> tuple[int, int, int, ]: ...

    @property
    def bba(self) -> tuple[int, int, int, ]: ...

    @property
    def baa(self) -> tuple[int, int, int, ]: ...

    @property
    def aaa(self) -> tuple[int, int, int, ]: ...



    @property
    def rrrr(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrrg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrrb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrra(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrgg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrgb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rraa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rggg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rggb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def raaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gggg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gggb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gaaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def baaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def aaaa(self) -> tuple[int, int, int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...



    @property
    def sss(self) -> tuple[int, int, int, ]: ...

    @property
    def sst(self) -> tuple[int, int, int, ]: ...

    @property
    def ssq(self) -> tuple[int, int, int, ]: ...

    @property
    def ssp(self) -> tuple[int, int, int, ]: ...

    @property
    def stt(self) -> tuple[int, int, int, ]: ...

    @property
    def stq(self) -> tuple[int, int, int, ]: ...

    @property
    def stp(self) -> tuple[int, int, int, ]: ...

    @property
    def sqq(self) -> tuple[int, int, int, ]: ...

    @property
    def sqp(self) -> tuple[int, int, int, ]: ...

    @property
    def spp(self) -> tuple[int, int, int, ]: ...

    @property
    def ttt(self) -> tuple[int, int, int, ]: ...

    @property
    def ttq(self) -> tuple[int, int, int, ]: ...

    @property
    def ttp(self) -> tuple[int, int, int, ]: ...

    @property
    def tqq(self) -> tuple[int, int, int, ]: ...

    @property
    def tqp(self) -> tuple[int, int, int, ]: ...

    @property
    def tpp(self) -> tuple[int, int, int, ]: ...

    @property
    def qqq(self) -> tuple[int, int, int, ]: ...

    @property
    def qqp(self) -> tuple[int, int, int, ]: ...

    @property
    def qpp(self) -> tuple[int, int, int, ]: ...

    @property
    def ppp(self) -> tuple[int, int, int, ]: ...



    @property
    def ssss(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssst(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sssq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sssp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sspp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def pppp(self) -> tuple[int, int, int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...



    @property
    def uuu(self) -> tuple[int, int, int, ]: ...

    @property
    def uuv(self) -> tuple[int, int, int, ]: ...

    @property
    def uvv(self) -> tuple[int, int, int, ]: ...

    @property
    def vvv(self) -> tuple[int, int, int, ]: ...



    @property
    def uuuu(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uuuv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uuvv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uvvv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def vvvv(self) -> tuple[int, int, int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class I16Vector4:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...




    @overload
    def __init__(self, x: Number, y: Number, z: Number, w: Number, /): ...


    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: I16Vector4) -> I16Vector4: ...
    @overload
    def __add__(self, other: Number) -> I16Vector4: ...
    @overload
    def __radd__(self, other: I16Vector4) -> I16Vector4: ...
    @overload
    def __radd__(self, other: Number) -> I16Vector4: ...

    @overload
    def __sub__(self, other: I16Vector4) -> I16Vector4: ...
    @overload
    def __sub__(self, other: Number) -> I16Vector4: ...
    @overload
    def __rsub__(self, other: I16Vector4) -> I16Vector4: ...
    @overload
    def __rsub__(self, other: Number) -> I16Vector4: ...

    @overload
    def __mul__(self, other: I16Vector4) -> I16Vector4: ...
    @overload
    def __mul__(self, other: Number) -> I16Vector4: ...
    @overload
    def __rmul__(self, other: I16Vector4) -> I16Vector4: ...
    @overload
    def __rmul__(self, other: Number) -> I16Vector4: ...




    @overload
    def __truediv__(self, other: I16Vector4) -> I16Vector4: ...
    @overload
    def __truediv__(self, other: Number) -> I16Vector4: ...
    @overload
    def __rtruediv__(self, other: I16Vector4) -> I16Vector4: ...
    @overload
    def __rtruediv__(self, other: Number) -> I16Vector4: ...




    def __abs__(self) -> I16Vector4: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...



    @property
    def xxx(self) -> tuple[int, int, int, ]: ...

    @property
    def xxy(self) -> tuple[int, int, int, ]: ...

    @property
    def xxz(self) -> tuple[int, int, int, ]: ...

    @property
    def xxw(self) -> tuple[int, int, int, ]: ...

    @property
    def xyy(self) -> tuple[int, int, int, ]: ...

    @property
    def xyz(self) -> tuple[int, int, int, ]: ...

    @property
    def xyw(self) -> tuple[int, int, int, ]: ...

    @property
    def xzz(self) -> tuple[int, int, int, ]: ...

    @property
    def xzw(self) -> tuple[int, int, int, ]: ...

    @property
    def xww(self) -> tuple[int, int, int, ]: ...

    @property
    def yyy(self) -> tuple[int, int, int, ]: ...

    @property
    def yyz(self) -> tuple[int, int, int, ]: ...

    @property
    def yyw(self) -> tuple[int, int, int, ]: ...

    @property
    def yzz(self) -> tuple[int, int, int, ]: ...

    @property
    def yzw(self) -> tuple[int, int, int, ]: ...

    @property
    def yww(self) -> tuple[int, int, int, ]: ...

    @property
    def zzz(self) -> tuple[int, int, int, ]: ...

    @property
    def zzw(self) -> tuple[int, int, int, ]: ...

    @property
    def zww(self) -> tuple[int, int, int, ]: ...

    @property
    def www(self) -> tuple[int, int, int, ]: ...



    @property
    def xxxx(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xwww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ywww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zwww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def wwww(self) -> tuple[int, int, int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...



    @property
    def rrr(self) -> tuple[int, int, int, ]: ...

    @property
    def rrg(self) -> tuple[int, int, int, ]: ...

    @property
    def rrb(self) -> tuple[int, int, int, ]: ...

    @property
    def rra(self) -> tuple[int, int, int, ]: ...

    @property
    def rgg(self) -> tuple[int, int, int, ]: ...

    @property
    def rgb(self) -> tuple[int, int, int, ]: ...

    @property
    def rga(self) -> tuple[int, int, int, ]: ...

    @property
    def rbb(self) -> tuple[int, int, int, ]: ...

    @property
    def rba(self) -> tuple[int, int, int, ]: ...

    @property
    def raa(self) -> tuple[int, int, int, ]: ...

    @property
    def ggg(self) -> tuple[int, int, int, ]: ...

    @property
    def ggb(self) -> tuple[int, int, int, ]: ...

    @property
    def gga(self) -> tuple[int, int, int, ]: ...

    @property
    def gbb(self) -> tuple[int, int, int, ]: ...

    @property
    def gba(self) -> tuple[int, int, int, ]: ...

    @property
    def gaa(self) -> tuple[int, int, int, ]: ...

    @property
    def bbb(self) -> tuple[int, int, int, ]: ...

    @property
    def bba(self) -> tuple[int, int, int, ]: ...

    @property
    def baa(self) -> tuple[int, int, int, ]: ...

    @property
    def aaa(self) -> tuple[int, int, int, ]: ...



    @property
    def rrrr(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrrg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrrb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrra(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrgg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrgb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rraa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rggg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rggb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def raaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gggg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gggb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gaaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def baaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def aaaa(self) -> tuple[int, int, int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...



    @property
    def sss(self) -> tuple[int, int, int, ]: ...

    @property
    def sst(self) -> tuple[int, int, int, ]: ...

    @property
    def ssq(self) -> tuple[int, int, int, ]: ...

    @property
    def ssp(self) -> tuple[int, int, int, ]: ...

    @property
    def stt(self) -> tuple[int, int, int, ]: ...

    @property
    def stq(self) -> tuple[int, int, int, ]: ...

    @property
    def stp(self) -> tuple[int, int, int, ]: ...

    @property
    def sqq(self) -> tuple[int, int, int, ]: ...

    @property
    def sqp(self) -> tuple[int, int, int, ]: ...

    @property
    def spp(self) -> tuple[int, int, int, ]: ...

    @property
    def ttt(self) -> tuple[int, int, int, ]: ...

    @property
    def ttq(self) -> tuple[int, int, int, ]: ...

    @property
    def ttp(self) -> tuple[int, int, int, ]: ...

    @property
    def tqq(self) -> tuple[int, int, int, ]: ...

    @property
    def tqp(self) -> tuple[int, int, int, ]: ...

    @property
    def tpp(self) -> tuple[int, int, int, ]: ...

    @property
    def qqq(self) -> tuple[int, int, int, ]: ...

    @property
    def qqp(self) -> tuple[int, int, int, ]: ...

    @property
    def qpp(self) -> tuple[int, int, int, ]: ...

    @property
    def ppp(self) -> tuple[int, int, int, ]: ...



    @property
    def ssss(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssst(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sssq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sssp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sspp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def pppp(self) -> tuple[int, int, int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...



    @property
    def uuu(self) -> tuple[int, int, int, ]: ...

    @property
    def uuv(self) -> tuple[int, int, int, ]: ...

    @property
    def uvv(self) -> tuple[int, int, int, ]: ...

    @property
    def vvv(self) -> tuple[int, int, int, ]: ...



    @property
    def uuuu(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uuuv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uuvv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uvvv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def vvvv(self) -> tuple[int, int, int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class U16Vector4:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...




    @overload
    def __init__(self, x: Number, y: Number, z: Number, w: Number, /): ...


    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: U16Vector4) -> U16Vector4: ...
    @overload
    def __add__(self, other: Number) -> U16Vector4: ...
    @overload
    def __radd__(self, other: U16Vector4) -> U16Vector4: ...
    @overload
    def __radd__(self, other: Number) -> U16Vector4: ...

    @overload
    def __sub__(self, other: U16Vector4) -> U16Vector4: ...
    @overload
    def __sub__(self, other: Number) -> U16Vector4: ...
    @overload
    def __rsub__(self, other: U16Vector4) -> U16Vector4: ...
    @overload
    def __rsub__(self, other: Number) -> U16Vector4: ...

    @overload
    def __mul__(self, other: U16Vector4) -> U16Vector4: ...
    @overload
    def __mul__(self, other: Number) -> U16Vector4: ...
    @overload
    def __rmul__(self, other: U16Vector4) -> U16Vector4: ...
    @overload
    def __rmul__(self, other: Number) -> U16Vector4: ...




    @overload
    def __truediv__(self, other: U16Vector4) -> U16Vector4: ...
    @overload
    def __truediv__(self, other: Number) -> U16Vector4: ...
    @overload
    def __rtruediv__(self, other: U16Vector4) -> U16Vector4: ...
    @overload
    def __rtruediv__(self, other: Number) -> U16Vector4: ...



    def __neg__(self) -> U16Vector4: ...


    def __abs__(self) -> U16Vector4: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...



    @property
    def xxx(self) -> tuple[int, int, int, ]: ...

    @property
    def xxy(self) -> tuple[int, int, int, ]: ...

    @property
    def xxz(self) -> tuple[int, int, int, ]: ...

    @property
    def xxw(self) -> tuple[int, int, int, ]: ...

    @property
    def xyy(self) -> tuple[int, int, int, ]: ...

    @property
    def xyz(self) -> tuple[int, int, int, ]: ...

    @property
    def xyw(self) -> tuple[int, int, int, ]: ...

    @property
    def xzz(self) -> tuple[int, int, int, ]: ...

    @property
    def xzw(self) -> tuple[int, int, int, ]: ...

    @property
    def xww(self) -> tuple[int, int, int, ]: ...

    @property
    def yyy(self) -> tuple[int, int, int, ]: ...

    @property
    def yyz(self) -> tuple[int, int, int, ]: ...

    @property
    def yyw(self) -> tuple[int, int, int, ]: ...

    @property
    def yzz(self) -> tuple[int, int, int, ]: ...

    @property
    def yzw(self) -> tuple[int, int, int, ]: ...

    @property
    def yww(self) -> tuple[int, int, int, ]: ...

    @property
    def zzz(self) -> tuple[int, int, int, ]: ...

    @property
    def zzw(self) -> tuple[int, int, int, ]: ...

    @property
    def zww(self) -> tuple[int, int, int, ]: ...

    @property
    def www(self) -> tuple[int, int, int, ]: ...



    @property
    def xxxx(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xwww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ywww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zwww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def wwww(self) -> tuple[int, int, int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...



    @property
    def rrr(self) -> tuple[int, int, int, ]: ...

    @property
    def rrg(self) -> tuple[int, int, int, ]: ...

    @property
    def rrb(self) -> tuple[int, int, int, ]: ...

    @property
    def rra(self) -> tuple[int, int, int, ]: ...

    @property
    def rgg(self) -> tuple[int, int, int, ]: ...

    @property
    def rgb(self) -> tuple[int, int, int, ]: ...

    @property
    def rga(self) -> tuple[int, int, int, ]: ...

    @property
    def rbb(self) -> tuple[int, int, int, ]: ...

    @property
    def rba(self) -> tuple[int, int, int, ]: ...

    @property
    def raa(self) -> tuple[int, int, int, ]: ...

    @property
    def ggg(self) -> tuple[int, int, int, ]: ...

    @property
    def ggb(self) -> tuple[int, int, int, ]: ...

    @property
    def gga(self) -> tuple[int, int, int, ]: ...

    @property
    def gbb(self) -> tuple[int, int, int, ]: ...

    @property
    def gba(self) -> tuple[int, int, int, ]: ...

    @property
    def gaa(self) -> tuple[int, int, int, ]: ...

    @property
    def bbb(self) -> tuple[int, int, int, ]: ...

    @property
    def bba(self) -> tuple[int, int, int, ]: ...

    @property
    def baa(self) -> tuple[int, int, int, ]: ...

    @property
    def aaa(self) -> tuple[int, int, int, ]: ...



    @property
    def rrrr(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrrg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrrb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrra(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrgg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrgb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rraa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rggg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rggb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def raaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gggg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gggb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gaaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def baaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def aaaa(self) -> tuple[int, int, int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...



    @property
    def sss(self) -> tuple[int, int, int, ]: ...

    @property
    def sst(self) -> tuple[int, int, int, ]: ...

    @property
    def ssq(self) -> tuple[int, int, int, ]: ...

    @property
    def ssp(self) -> tuple[int, int, int, ]: ...

    @property
    def stt(self) -> tuple[int, int, int, ]: ...

    @property
    def stq(self) -> tuple[int, int, int, ]: ...

    @property
    def stp(self) -> tuple[int, int, int, ]: ...

    @property
    def sqq(self) -> tuple[int, int, int, ]: ...

    @property
    def sqp(self) -> tuple[int, int, int, ]: ...

    @property
    def spp(self) -> tuple[int, int, int, ]: ...

    @property
    def ttt(self) -> tuple[int, int, int, ]: ...

    @property
    def ttq(self) -> tuple[int, int, int, ]: ...

    @property
    def ttp(self) -> tuple[int, int, int, ]: ...

    @property
    def tqq(self) -> tuple[int, int, int, ]: ...

    @property
    def tqp(self) -> tuple[int, int, int, ]: ...

    @property
    def tpp(self) -> tuple[int, int, int, ]: ...

    @property
    def qqq(self) -> tuple[int, int, int, ]: ...

    @property
    def qqp(self) -> tuple[int, int, int, ]: ...

    @property
    def qpp(self) -> tuple[int, int, int, ]: ...

    @property
    def ppp(self) -> tuple[int, int, int, ]: ...



    @property
    def ssss(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssst(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sssq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sssp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sspp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def pppp(self) -> tuple[int, int, int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...



    @property
    def uuu(self) -> tuple[int, int, int, ]: ...

    @property
    def uuv(self) -> tuple[int, int, int, ]: ...

    @property
    def uvv(self) -> tuple[int, int, int, ]: ...

    @property
    def vvv(self) -> tuple[int, int, int, ]: ...



    @property
    def uuuu(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uuuv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uuvv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uvvv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def vvvv(self) -> tuple[int, int, int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class I32Vector4:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...




    @overload
    def __init__(self, x: Number, y: Number, z: Number, w: Number, /): ...


    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: I32Vector4) -> I32Vector4: ...
    @overload
    def __add__(self, other: Number) -> I32Vector4: ...
    @overload
    def __radd__(self, other: I32Vector4) -> I32Vector4: ...
    @overload
    def __radd__(self, other: Number) -> I32Vector4: ...

    @overload
    def __sub__(self, other: I32Vector4) -> I32Vector4: ...
    @overload
    def __sub__(self, other: Number) -> I32Vector4: ...
    @overload
    def __rsub__(self, other: I32Vector4) -> I32Vector4: ...
    @overload
    def __rsub__(self, other: Number) -> I32Vector4: ...

    @overload
    def __mul__(self, other: I32Vector4) -> I32Vector4: ...
    @overload
    def __mul__(self, other: Number) -> I32Vector4: ...
    @overload
    def __rmul__(self, other: I32Vector4) -> I32Vector4: ...
    @overload
    def __rmul__(self, other: Number) -> I32Vector4: ...




    @overload
    def __truediv__(self, other: I32Vector4) -> I32Vector4: ...
    @overload
    def __truediv__(self, other: Number) -> I32Vector4: ...
    @overload
    def __rtruediv__(self, other: I32Vector4) -> I32Vector4: ...
    @overload
    def __rtruediv__(self, other: Number) -> I32Vector4: ...




    def __abs__(self) -> I32Vector4: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...



    @property
    def xxx(self) -> tuple[int, int, int, ]: ...

    @property
    def xxy(self) -> tuple[int, int, int, ]: ...

    @property
    def xxz(self) -> tuple[int, int, int, ]: ...

    @property
    def xxw(self) -> tuple[int, int, int, ]: ...

    @property
    def xyy(self) -> tuple[int, int, int, ]: ...

    @property
    def xyz(self) -> tuple[int, int, int, ]: ...

    @property
    def xyw(self) -> tuple[int, int, int, ]: ...

    @property
    def xzz(self) -> tuple[int, int, int, ]: ...

    @property
    def xzw(self) -> tuple[int, int, int, ]: ...

    @property
    def xww(self) -> tuple[int, int, int, ]: ...

    @property
    def yyy(self) -> tuple[int, int, int, ]: ...

    @property
    def yyz(self) -> tuple[int, int, int, ]: ...

    @property
    def yyw(self) -> tuple[int, int, int, ]: ...

    @property
    def yzz(self) -> tuple[int, int, int, ]: ...

    @property
    def yzw(self) -> tuple[int, int, int, ]: ...

    @property
    def yww(self) -> tuple[int, int, int, ]: ...

    @property
    def zzz(self) -> tuple[int, int, int, ]: ...

    @property
    def zzw(self) -> tuple[int, int, int, ]: ...

    @property
    def zww(self) -> tuple[int, int, int, ]: ...

    @property
    def www(self) -> tuple[int, int, int, ]: ...



    @property
    def xxxx(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xwww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ywww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zwww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def wwww(self) -> tuple[int, int, int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...



    @property
    def rrr(self) -> tuple[int, int, int, ]: ...

    @property
    def rrg(self) -> tuple[int, int, int, ]: ...

    @property
    def rrb(self) -> tuple[int, int, int, ]: ...

    @property
    def rra(self) -> tuple[int, int, int, ]: ...

    @property
    def rgg(self) -> tuple[int, int, int, ]: ...

    @property
    def rgb(self) -> tuple[int, int, int, ]: ...

    @property
    def rga(self) -> tuple[int, int, int, ]: ...

    @property
    def rbb(self) -> tuple[int, int, int, ]: ...

    @property
    def rba(self) -> tuple[int, int, int, ]: ...

    @property
    def raa(self) -> tuple[int, int, int, ]: ...

    @property
    def ggg(self) -> tuple[int, int, int, ]: ...

    @property
    def ggb(self) -> tuple[int, int, int, ]: ...

    @property
    def gga(self) -> tuple[int, int, int, ]: ...

    @property
    def gbb(self) -> tuple[int, int, int, ]: ...

    @property
    def gba(self) -> tuple[int, int, int, ]: ...

    @property
    def gaa(self) -> tuple[int, int, int, ]: ...

    @property
    def bbb(self) -> tuple[int, int, int, ]: ...

    @property
    def bba(self) -> tuple[int, int, int, ]: ...

    @property
    def baa(self) -> tuple[int, int, int, ]: ...

    @property
    def aaa(self) -> tuple[int, int, int, ]: ...



    @property
    def rrrr(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrrg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrrb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrra(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrgg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrgb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rraa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rggg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rggb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def raaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gggg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gggb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gaaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def baaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def aaaa(self) -> tuple[int, int, int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...



    @property
    def sss(self) -> tuple[int, int, int, ]: ...

    @property
    def sst(self) -> tuple[int, int, int, ]: ...

    @property
    def ssq(self) -> tuple[int, int, int, ]: ...

    @property
    def ssp(self) -> tuple[int, int, int, ]: ...

    @property
    def stt(self) -> tuple[int, int, int, ]: ...

    @property
    def stq(self) -> tuple[int, int, int, ]: ...

    @property
    def stp(self) -> tuple[int, int, int, ]: ...

    @property
    def sqq(self) -> tuple[int, int, int, ]: ...

    @property
    def sqp(self) -> tuple[int, int, int, ]: ...

    @property
    def spp(self) -> tuple[int, int, int, ]: ...

    @property
    def ttt(self) -> tuple[int, int, int, ]: ...

    @property
    def ttq(self) -> tuple[int, int, int, ]: ...

    @property
    def ttp(self) -> tuple[int, int, int, ]: ...

    @property
    def tqq(self) -> tuple[int, int, int, ]: ...

    @property
    def tqp(self) -> tuple[int, int, int, ]: ...

    @property
    def tpp(self) -> tuple[int, int, int, ]: ...

    @property
    def qqq(self) -> tuple[int, int, int, ]: ...

    @property
    def qqp(self) -> tuple[int, int, int, ]: ...

    @property
    def qpp(self) -> tuple[int, int, int, ]: ...

    @property
    def ppp(self) -> tuple[int, int, int, ]: ...



    @property
    def ssss(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssst(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sssq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sssp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sspp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def pppp(self) -> tuple[int, int, int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...



    @property
    def uuu(self) -> tuple[int, int, int, ]: ...

    @property
    def uuv(self) -> tuple[int, int, int, ]: ...

    @property
    def uvv(self) -> tuple[int, int, int, ]: ...

    @property
    def vvv(self) -> tuple[int, int, int, ]: ...



    @property
    def uuuu(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uuuv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uuvv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uvvv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def vvvv(self) -> tuple[int, int, int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class U32Vector4:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...




    @overload
    def __init__(self, x: Number, y: Number, z: Number, w: Number, /): ...


    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: U32Vector4) -> U32Vector4: ...
    @overload
    def __add__(self, other: Number) -> U32Vector4: ...
    @overload
    def __radd__(self, other: U32Vector4) -> U32Vector4: ...
    @overload
    def __radd__(self, other: Number) -> U32Vector4: ...

    @overload
    def __sub__(self, other: U32Vector4) -> U32Vector4: ...
    @overload
    def __sub__(self, other: Number) -> U32Vector4: ...
    @overload
    def __rsub__(self, other: U32Vector4) -> U32Vector4: ...
    @overload
    def __rsub__(self, other: Number) -> U32Vector4: ...

    @overload
    def __mul__(self, other: U32Vector4) -> U32Vector4: ...
    @overload
    def __mul__(self, other: Number) -> U32Vector4: ...
    @overload
    def __rmul__(self, other: U32Vector4) -> U32Vector4: ...
    @overload
    def __rmul__(self, other: Number) -> U32Vector4: ...




    @overload
    def __truediv__(self, other: U32Vector4) -> U32Vector4: ...
    @overload
    def __truediv__(self, other: Number) -> U32Vector4: ...
    @overload
    def __rtruediv__(self, other: U32Vector4) -> U32Vector4: ...
    @overload
    def __rtruediv__(self, other: Number) -> U32Vector4: ...



    def __neg__(self) -> U32Vector4: ...


    def __abs__(self) -> U32Vector4: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...



    @property
    def xxx(self) -> tuple[int, int, int, ]: ...

    @property
    def xxy(self) -> tuple[int, int, int, ]: ...

    @property
    def xxz(self) -> tuple[int, int, int, ]: ...

    @property
    def xxw(self) -> tuple[int, int, int, ]: ...

    @property
    def xyy(self) -> tuple[int, int, int, ]: ...

    @property
    def xyz(self) -> tuple[int, int, int, ]: ...

    @property
    def xyw(self) -> tuple[int, int, int, ]: ...

    @property
    def xzz(self) -> tuple[int, int, int, ]: ...

    @property
    def xzw(self) -> tuple[int, int, int, ]: ...

    @property
    def xww(self) -> tuple[int, int, int, ]: ...

    @property
    def yyy(self) -> tuple[int, int, int, ]: ...

    @property
    def yyz(self) -> tuple[int, int, int, ]: ...

    @property
    def yyw(self) -> tuple[int, int, int, ]: ...

    @property
    def yzz(self) -> tuple[int, int, int, ]: ...

    @property
    def yzw(self) -> tuple[int, int, int, ]: ...

    @property
    def yww(self) -> tuple[int, int, int, ]: ...

    @property
    def zzz(self) -> tuple[int, int, int, ]: ...

    @property
    def zzw(self) -> tuple[int, int, int, ]: ...

    @property
    def zww(self) -> tuple[int, int, int, ]: ...

    @property
    def www(self) -> tuple[int, int, int, ]: ...



    @property
    def xxxx(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xwww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ywww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zwww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def wwww(self) -> tuple[int, int, int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...



    @property
    def rrr(self) -> tuple[int, int, int, ]: ...

    @property
    def rrg(self) -> tuple[int, int, int, ]: ...

    @property
    def rrb(self) -> tuple[int, int, int, ]: ...

    @property
    def rra(self) -> tuple[int, int, int, ]: ...

    @property
    def rgg(self) -> tuple[int, int, int, ]: ...

    @property
    def rgb(self) -> tuple[int, int, int, ]: ...

    @property
    def rga(self) -> tuple[int, int, int, ]: ...

    @property
    def rbb(self) -> tuple[int, int, int, ]: ...

    @property
    def rba(self) -> tuple[int, int, int, ]: ...

    @property
    def raa(self) -> tuple[int, int, int, ]: ...

    @property
    def ggg(self) -> tuple[int, int, int, ]: ...

    @property
    def ggb(self) -> tuple[int, int, int, ]: ...

    @property
    def gga(self) -> tuple[int, int, int, ]: ...

    @property
    def gbb(self) -> tuple[int, int, int, ]: ...

    @property
    def gba(self) -> tuple[int, int, int, ]: ...

    @property
    def gaa(self) -> tuple[int, int, int, ]: ...

    @property
    def bbb(self) -> tuple[int, int, int, ]: ...

    @property
    def bba(self) -> tuple[int, int, int, ]: ...

    @property
    def baa(self) -> tuple[int, int, int, ]: ...

    @property
    def aaa(self) -> tuple[int, int, int, ]: ...



    @property
    def rrrr(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrrg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrrb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrra(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrgg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrgb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rraa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rggg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rggb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def raaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gggg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gggb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gaaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def baaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def aaaa(self) -> tuple[int, int, int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...



    @property
    def sss(self) -> tuple[int, int, int, ]: ...

    @property
    def sst(self) -> tuple[int, int, int, ]: ...

    @property
    def ssq(self) -> tuple[int, int, int, ]: ...

    @property
    def ssp(self) -> tuple[int, int, int, ]: ...

    @property
    def stt(self) -> tuple[int, int, int, ]: ...

    @property
    def stq(self) -> tuple[int, int, int, ]: ...

    @property
    def stp(self) -> tuple[int, int, int, ]: ...

    @property
    def sqq(self) -> tuple[int, int, int, ]: ...

    @property
    def sqp(self) -> tuple[int, int, int, ]: ...

    @property
    def spp(self) -> tuple[int, int, int, ]: ...

    @property
    def ttt(self) -> tuple[int, int, int, ]: ...

    @property
    def ttq(self) -> tuple[int, int, int, ]: ...

    @property
    def ttp(self) -> tuple[int, int, int, ]: ...

    @property
    def tqq(self) -> tuple[int, int, int, ]: ...

    @property
    def tqp(self) -> tuple[int, int, int, ]: ...

    @property
    def tpp(self) -> tuple[int, int, int, ]: ...

    @property
    def qqq(self) -> tuple[int, int, int, ]: ...

    @property
    def qqp(self) -> tuple[int, int, int, ]: ...

    @property
    def qpp(self) -> tuple[int, int, int, ]: ...

    @property
    def ppp(self) -> tuple[int, int, int, ]: ...



    @property
    def ssss(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssst(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sssq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sssp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sspp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def pppp(self) -> tuple[int, int, int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...



    @property
    def uuu(self) -> tuple[int, int, int, ]: ...

    @property
    def uuv(self) -> tuple[int, int, int, ]: ...

    @property
    def uvv(self) -> tuple[int, int, int, ]: ...

    @property
    def vvv(self) -> tuple[int, int, int, ]: ...



    @property
    def uuuu(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uuuv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uuvv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uvvv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def vvvv(self) -> tuple[int, int, int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class IVector4:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...




    @overload
    def __init__(self, x: Number, y: Number, z: Number, w: Number, /): ...


    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: IVector4) -> IVector4: ...
    @overload
    def __add__(self, other: Number) -> IVector4: ...
    @overload
    def __radd__(self, other: IVector4) -> IVector4: ...
    @overload
    def __radd__(self, other: Number) -> IVector4: ...

    @overload
    def __sub__(self, other: IVector4) -> IVector4: ...
    @overload
    def __sub__(self, other: Number) -> IVector4: ...
    @overload
    def __rsub__(self, other: IVector4) -> IVector4: ...
    @overload
    def __rsub__(self, other: Number) -> IVector4: ...

    @overload
    def __mul__(self, other: IVector4) -> IVector4: ...
    @overload
    def __mul__(self, other: Number) -> IVector4: ...
    @overload
    def __rmul__(self, other: IVector4) -> IVector4: ...
    @overload
    def __rmul__(self, other: Number) -> IVector4: ...




    @overload
    def __truediv__(self, other: IVector4) -> IVector4: ...
    @overload
    def __truediv__(self, other: Number) -> IVector4: ...
    @overload
    def __rtruediv__(self, other: IVector4) -> IVector4: ...
    @overload
    def __rtruediv__(self, other: Number) -> IVector4: ...




    def __abs__(self) -> IVector4: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...



    @property
    def xxx(self) -> tuple[int, int, int, ]: ...

    @property
    def xxy(self) -> tuple[int, int, int, ]: ...

    @property
    def xxz(self) -> tuple[int, int, int, ]: ...

    @property
    def xxw(self) -> tuple[int, int, int, ]: ...

    @property
    def xyy(self) -> tuple[int, int, int, ]: ...

    @property
    def xyz(self) -> tuple[int, int, int, ]: ...

    @property
    def xyw(self) -> tuple[int, int, int, ]: ...

    @property
    def xzz(self) -> tuple[int, int, int, ]: ...

    @property
    def xzw(self) -> tuple[int, int, int, ]: ...

    @property
    def xww(self) -> tuple[int, int, int, ]: ...

    @property
    def yyy(self) -> tuple[int, int, int, ]: ...

    @property
    def yyz(self) -> tuple[int, int, int, ]: ...

    @property
    def yyw(self) -> tuple[int, int, int, ]: ...

    @property
    def yzz(self) -> tuple[int, int, int, ]: ...

    @property
    def yzw(self) -> tuple[int, int, int, ]: ...

    @property
    def yww(self) -> tuple[int, int, int, ]: ...

    @property
    def zzz(self) -> tuple[int, int, int, ]: ...

    @property
    def zzw(self) -> tuple[int, int, int, ]: ...

    @property
    def zww(self) -> tuple[int, int, int, ]: ...

    @property
    def www(self) -> tuple[int, int, int, ]: ...



    @property
    def xxxx(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xwww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ywww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zwww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def wwww(self) -> tuple[int, int, int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...



    @property
    def rrr(self) -> tuple[int, int, int, ]: ...

    @property
    def rrg(self) -> tuple[int, int, int, ]: ...

    @property
    def rrb(self) -> tuple[int, int, int, ]: ...

    @property
    def rra(self) -> tuple[int, int, int, ]: ...

    @property
    def rgg(self) -> tuple[int, int, int, ]: ...

    @property
    def rgb(self) -> tuple[int, int, int, ]: ...

    @property
    def rga(self) -> tuple[int, int, int, ]: ...

    @property
    def rbb(self) -> tuple[int, int, int, ]: ...

    @property
    def rba(self) -> tuple[int, int, int, ]: ...

    @property
    def raa(self) -> tuple[int, int, int, ]: ...

    @property
    def ggg(self) -> tuple[int, int, int, ]: ...

    @property
    def ggb(self) -> tuple[int, int, int, ]: ...

    @property
    def gga(self) -> tuple[int, int, int, ]: ...

    @property
    def gbb(self) -> tuple[int, int, int, ]: ...

    @property
    def gba(self) -> tuple[int, int, int, ]: ...

    @property
    def gaa(self) -> tuple[int, int, int, ]: ...

    @property
    def bbb(self) -> tuple[int, int, int, ]: ...

    @property
    def bba(self) -> tuple[int, int, int, ]: ...

    @property
    def baa(self) -> tuple[int, int, int, ]: ...

    @property
    def aaa(self) -> tuple[int, int, int, ]: ...



    @property
    def rrrr(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrrg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrrb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrra(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrgg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrgb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rraa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rggg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rggb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def raaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gggg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gggb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gaaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def baaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def aaaa(self) -> tuple[int, int, int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...



    @property
    def sss(self) -> tuple[int, int, int, ]: ...

    @property
    def sst(self) -> tuple[int, int, int, ]: ...

    @property
    def ssq(self) -> tuple[int, int, int, ]: ...

    @property
    def ssp(self) -> tuple[int, int, int, ]: ...

    @property
    def stt(self) -> tuple[int, int, int, ]: ...

    @property
    def stq(self) -> tuple[int, int, int, ]: ...

    @property
    def stp(self) -> tuple[int, int, int, ]: ...

    @property
    def sqq(self) -> tuple[int, int, int, ]: ...

    @property
    def sqp(self) -> tuple[int, int, int, ]: ...

    @property
    def spp(self) -> tuple[int, int, int, ]: ...

    @property
    def ttt(self) -> tuple[int, int, int, ]: ...

    @property
    def ttq(self) -> tuple[int, int, int, ]: ...

    @property
    def ttp(self) -> tuple[int, int, int, ]: ...

    @property
    def tqq(self) -> tuple[int, int, int, ]: ...

    @property
    def tqp(self) -> tuple[int, int, int, ]: ...

    @property
    def tpp(self) -> tuple[int, int, int, ]: ...

    @property
    def qqq(self) -> tuple[int, int, int, ]: ...

    @property
    def qqp(self) -> tuple[int, int, int, ]: ...

    @property
    def qpp(self) -> tuple[int, int, int, ]: ...

    @property
    def ppp(self) -> tuple[int, int, int, ]: ...



    @property
    def ssss(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssst(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sssq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sssp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sspp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def pppp(self) -> tuple[int, int, int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...



    @property
    def uuu(self) -> tuple[int, int, int, ]: ...

    @property
    def uuv(self) -> tuple[int, int, int, ]: ...

    @property
    def uvv(self) -> tuple[int, int, int, ]: ...

    @property
    def vvv(self) -> tuple[int, int, int, ]: ...



    @property
    def uuuu(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uuuv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uuvv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uvvv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def vvvv(self) -> tuple[int, int, int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class UVector4:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...




    @overload
    def __init__(self, x: Number, y: Number, z: Number, w: Number, /): ...


    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: UVector4) -> UVector4: ...
    @overload
    def __add__(self, other: Number) -> UVector4: ...
    @overload
    def __radd__(self, other: UVector4) -> UVector4: ...
    @overload
    def __radd__(self, other: Number) -> UVector4: ...

    @overload
    def __sub__(self, other: UVector4) -> UVector4: ...
    @overload
    def __sub__(self, other: Number) -> UVector4: ...
    @overload
    def __rsub__(self, other: UVector4) -> UVector4: ...
    @overload
    def __rsub__(self, other: Number) -> UVector4: ...

    @overload
    def __mul__(self, other: UVector4) -> UVector4: ...
    @overload
    def __mul__(self, other: Number) -> UVector4: ...
    @overload
    def __rmul__(self, other: UVector4) -> UVector4: ...
    @overload
    def __rmul__(self, other: Number) -> UVector4: ...




    @overload
    def __truediv__(self, other: UVector4) -> UVector4: ...
    @overload
    def __truediv__(self, other: Number) -> UVector4: ...
    @overload
    def __rtruediv__(self, other: UVector4) -> UVector4: ...
    @overload
    def __rtruediv__(self, other: Number) -> UVector4: ...



    def __neg__(self) -> UVector4: ...


    def __abs__(self) -> UVector4: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...



    @property
    def xxx(self) -> tuple[int, int, int, ]: ...

    @property
    def xxy(self) -> tuple[int, int, int, ]: ...

    @property
    def xxz(self) -> tuple[int, int, int, ]: ...

    @property
    def xxw(self) -> tuple[int, int, int, ]: ...

    @property
    def xyy(self) -> tuple[int, int, int, ]: ...

    @property
    def xyz(self) -> tuple[int, int, int, ]: ...

    @property
    def xyw(self) -> tuple[int, int, int, ]: ...

    @property
    def xzz(self) -> tuple[int, int, int, ]: ...

    @property
    def xzw(self) -> tuple[int, int, int, ]: ...

    @property
    def xww(self) -> tuple[int, int, int, ]: ...

    @property
    def yyy(self) -> tuple[int, int, int, ]: ...

    @property
    def yyz(self) -> tuple[int, int, int, ]: ...

    @property
    def yyw(self) -> tuple[int, int, int, ]: ...

    @property
    def yzz(self) -> tuple[int, int, int, ]: ...

    @property
    def yzw(self) -> tuple[int, int, int, ]: ...

    @property
    def yww(self) -> tuple[int, int, int, ]: ...

    @property
    def zzz(self) -> tuple[int, int, int, ]: ...

    @property
    def zzw(self) -> tuple[int, int, int, ]: ...

    @property
    def zww(self) -> tuple[int, int, int, ]: ...

    @property
    def www(self) -> tuple[int, int, int, ]: ...



    @property
    def xxxx(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xwww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ywww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zwww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def wwww(self) -> tuple[int, int, int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...



    @property
    def rrr(self) -> tuple[int, int, int, ]: ...

    @property
    def rrg(self) -> tuple[int, int, int, ]: ...

    @property
    def rrb(self) -> tuple[int, int, int, ]: ...

    @property
    def rra(self) -> tuple[int, int, int, ]: ...

    @property
    def rgg(self) -> tuple[int, int, int, ]: ...

    @property
    def rgb(self) -> tuple[int, int, int, ]: ...

    @property
    def rga(self) -> tuple[int, int, int, ]: ...

    @property
    def rbb(self) -> tuple[int, int, int, ]: ...

    @property
    def rba(self) -> tuple[int, int, int, ]: ...

    @property
    def raa(self) -> tuple[int, int, int, ]: ...

    @property
    def ggg(self) -> tuple[int, int, int, ]: ...

    @property
    def ggb(self) -> tuple[int, int, int, ]: ...

    @property
    def gga(self) -> tuple[int, int, int, ]: ...

    @property
    def gbb(self) -> tuple[int, int, int, ]: ...

    @property
    def gba(self) -> tuple[int, int, int, ]: ...

    @property
    def gaa(self) -> tuple[int, int, int, ]: ...

    @property
    def bbb(self) -> tuple[int, int, int, ]: ...

    @property
    def bba(self) -> tuple[int, int, int, ]: ...

    @property
    def baa(self) -> tuple[int, int, int, ]: ...

    @property
    def aaa(self) -> tuple[int, int, int, ]: ...



    @property
    def rrrr(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrrg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrrb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrra(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrgg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrgb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rraa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rggg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rggb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def raaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gggg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gggb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gaaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def baaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def aaaa(self) -> tuple[int, int, int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...



    @property
    def sss(self) -> tuple[int, int, int, ]: ...

    @property
    def sst(self) -> tuple[int, int, int, ]: ...

    @property
    def ssq(self) -> tuple[int, int, int, ]: ...

    @property
    def ssp(self) -> tuple[int, int, int, ]: ...

    @property
    def stt(self) -> tuple[int, int, int, ]: ...

    @property
    def stq(self) -> tuple[int, int, int, ]: ...

    @property
    def stp(self) -> tuple[int, int, int, ]: ...

    @property
    def sqq(self) -> tuple[int, int, int, ]: ...

    @property
    def sqp(self) -> tuple[int, int, int, ]: ...

    @property
    def spp(self) -> tuple[int, int, int, ]: ...

    @property
    def ttt(self) -> tuple[int, int, int, ]: ...

    @property
    def ttq(self) -> tuple[int, int, int, ]: ...

    @property
    def ttp(self) -> tuple[int, int, int, ]: ...

    @property
    def tqq(self) -> tuple[int, int, int, ]: ...

    @property
    def tqp(self) -> tuple[int, int, int, ]: ...

    @property
    def tpp(self) -> tuple[int, int, int, ]: ...

    @property
    def qqq(self) -> tuple[int, int, int, ]: ...

    @property
    def qqp(self) -> tuple[int, int, int, ]: ...

    @property
    def qpp(self) -> tuple[int, int, int, ]: ...

    @property
    def ppp(self) -> tuple[int, int, int, ]: ...



    @property
    def ssss(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssst(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sssq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sssp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sspp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def pppp(self) -> tuple[int, int, int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...



    @property
    def uuu(self) -> tuple[int, int, int, ]: ...

    @property
    def uuv(self) -> tuple[int, int, int, ]: ...

    @property
    def uvv(self) -> tuple[int, int, int, ]: ...

    @property
    def vvv(self) -> tuple[int, int, int, ]: ...



    @property
    def uuuu(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uuuv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uuvv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uvvv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def vvvv(self) -> tuple[int, int, int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class I64Vector4:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...




    @overload
    def __init__(self, x: Number, y: Number, z: Number, w: Number, /): ...


    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: I64Vector4) -> I64Vector4: ...
    @overload
    def __add__(self, other: Number) -> I64Vector4: ...
    @overload
    def __radd__(self, other: I64Vector4) -> I64Vector4: ...
    @overload
    def __radd__(self, other: Number) -> I64Vector4: ...

    @overload
    def __sub__(self, other: I64Vector4) -> I64Vector4: ...
    @overload
    def __sub__(self, other: Number) -> I64Vector4: ...
    @overload
    def __rsub__(self, other: I64Vector4) -> I64Vector4: ...
    @overload
    def __rsub__(self, other: Number) -> I64Vector4: ...

    @overload
    def __mul__(self, other: I64Vector4) -> I64Vector4: ...
    @overload
    def __mul__(self, other: Number) -> I64Vector4: ...
    @overload
    def __rmul__(self, other: I64Vector4) -> I64Vector4: ...
    @overload
    def __rmul__(self, other: Number) -> I64Vector4: ...




    @overload
    def __truediv__(self, other: I64Vector4) -> I64Vector4: ...
    @overload
    def __truediv__(self, other: Number) -> I64Vector4: ...
    @overload
    def __rtruediv__(self, other: I64Vector4) -> I64Vector4: ...
    @overload
    def __rtruediv__(self, other: Number) -> I64Vector4: ...




    def __abs__(self) -> I64Vector4: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...



    @property
    def xxx(self) -> tuple[int, int, int, ]: ...

    @property
    def xxy(self) -> tuple[int, int, int, ]: ...

    @property
    def xxz(self) -> tuple[int, int, int, ]: ...

    @property
    def xxw(self) -> tuple[int, int, int, ]: ...

    @property
    def xyy(self) -> tuple[int, int, int, ]: ...

    @property
    def xyz(self) -> tuple[int, int, int, ]: ...

    @property
    def xyw(self) -> tuple[int, int, int, ]: ...

    @property
    def xzz(self) -> tuple[int, int, int, ]: ...

    @property
    def xzw(self) -> tuple[int, int, int, ]: ...

    @property
    def xww(self) -> tuple[int, int, int, ]: ...

    @property
    def yyy(self) -> tuple[int, int, int, ]: ...

    @property
    def yyz(self) -> tuple[int, int, int, ]: ...

    @property
    def yyw(self) -> tuple[int, int, int, ]: ...

    @property
    def yzz(self) -> tuple[int, int, int, ]: ...

    @property
    def yzw(self) -> tuple[int, int, int, ]: ...

    @property
    def yww(self) -> tuple[int, int, int, ]: ...

    @property
    def zzz(self) -> tuple[int, int, int, ]: ...

    @property
    def zzw(self) -> tuple[int, int, int, ]: ...

    @property
    def zww(self) -> tuple[int, int, int, ]: ...

    @property
    def www(self) -> tuple[int, int, int, ]: ...



    @property
    def xxxx(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xwww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ywww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zwww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def wwww(self) -> tuple[int, int, int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...



    @property
    def rrr(self) -> tuple[int, int, int, ]: ...

    @property
    def rrg(self) -> tuple[int, int, int, ]: ...

    @property
    def rrb(self) -> tuple[int, int, int, ]: ...

    @property
    def rra(self) -> tuple[int, int, int, ]: ...

    @property
    def rgg(self) -> tuple[int, int, int, ]: ...

    @property
    def rgb(self) -> tuple[int, int, int, ]: ...

    @property
    def rga(self) -> tuple[int, int, int, ]: ...

    @property
    def rbb(self) -> tuple[int, int, int, ]: ...

    @property
    def rba(self) -> tuple[int, int, int, ]: ...

    @property
    def raa(self) -> tuple[int, int, int, ]: ...

    @property
    def ggg(self) -> tuple[int, int, int, ]: ...

    @property
    def ggb(self) -> tuple[int, int, int, ]: ...

    @property
    def gga(self) -> tuple[int, int, int, ]: ...

    @property
    def gbb(self) -> tuple[int, int, int, ]: ...

    @property
    def gba(self) -> tuple[int, int, int, ]: ...

    @property
    def gaa(self) -> tuple[int, int, int, ]: ...

    @property
    def bbb(self) -> tuple[int, int, int, ]: ...

    @property
    def bba(self) -> tuple[int, int, int, ]: ...

    @property
    def baa(self) -> tuple[int, int, int, ]: ...

    @property
    def aaa(self) -> tuple[int, int, int, ]: ...



    @property
    def rrrr(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrrg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrrb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrra(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrgg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrgb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rraa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rggg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rggb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def raaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gggg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gggb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gaaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def baaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def aaaa(self) -> tuple[int, int, int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...



    @property
    def sss(self) -> tuple[int, int, int, ]: ...

    @property
    def sst(self) -> tuple[int, int, int, ]: ...

    @property
    def ssq(self) -> tuple[int, int, int, ]: ...

    @property
    def ssp(self) -> tuple[int, int, int, ]: ...

    @property
    def stt(self) -> tuple[int, int, int, ]: ...

    @property
    def stq(self) -> tuple[int, int, int, ]: ...

    @property
    def stp(self) -> tuple[int, int, int, ]: ...

    @property
    def sqq(self) -> tuple[int, int, int, ]: ...

    @property
    def sqp(self) -> tuple[int, int, int, ]: ...

    @property
    def spp(self) -> tuple[int, int, int, ]: ...

    @property
    def ttt(self) -> tuple[int, int, int, ]: ...

    @property
    def ttq(self) -> tuple[int, int, int, ]: ...

    @property
    def ttp(self) -> tuple[int, int, int, ]: ...

    @property
    def tqq(self) -> tuple[int, int, int, ]: ...

    @property
    def tqp(self) -> tuple[int, int, int, ]: ...

    @property
    def tpp(self) -> tuple[int, int, int, ]: ...

    @property
    def qqq(self) -> tuple[int, int, int, ]: ...

    @property
    def qqp(self) -> tuple[int, int, int, ]: ...

    @property
    def qpp(self) -> tuple[int, int, int, ]: ...

    @property
    def ppp(self) -> tuple[int, int, int, ]: ...



    @property
    def ssss(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssst(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sssq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sssp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sspp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def pppp(self) -> tuple[int, int, int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...



    @property
    def uuu(self) -> tuple[int, int, int, ]: ...

    @property
    def uuv(self) -> tuple[int, int, int, ]: ...

    @property
    def uvv(self) -> tuple[int, int, int, ]: ...

    @property
    def vvv(self) -> tuple[int, int, int, ]: ...



    @property
    def uuuu(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uuuv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uuvv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uvvv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def vvvv(self) -> tuple[int, int, int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...









@final
class U64Vector4:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...




    @overload
    def __init__(self, x: Number, y: Number, z: Number, w: Number, /): ...


    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: U64Vector4) -> U64Vector4: ...
    @overload
    def __add__(self, other: Number) -> U64Vector4: ...
    @overload
    def __radd__(self, other: U64Vector4) -> U64Vector4: ...
    @overload
    def __radd__(self, other: Number) -> U64Vector4: ...

    @overload
    def __sub__(self, other: U64Vector4) -> U64Vector4: ...
    @overload
    def __sub__(self, other: Number) -> U64Vector4: ...
    @overload
    def __rsub__(self, other: U64Vector4) -> U64Vector4: ...
    @overload
    def __rsub__(self, other: Number) -> U64Vector4: ...

    @overload
    def __mul__(self, other: U64Vector4) -> U64Vector4: ...
    @overload
    def __mul__(self, other: Number) -> U64Vector4: ...
    @overload
    def __rmul__(self, other: U64Vector4) -> U64Vector4: ...
    @overload
    def __rmul__(self, other: Number) -> U64Vector4: ...




    @overload
    def __truediv__(self, other: U64Vector4) -> U64Vector4: ...
    @overload
    def __truediv__(self, other: Number) -> U64Vector4: ...
    @overload
    def __rtruediv__(self, other: U64Vector4) -> U64Vector4: ...
    @overload
    def __rtruediv__(self, other: Number) -> U64Vector4: ...



    def __neg__(self) -> U64Vector4: ...


    def __abs__(self) -> U64Vector4: ...
    def __bool__(self) -> bool: ...




    @property
    def x(self) -> int: ...

    @property
    def y(self) -> int: ...

    @property
    def z(self) -> int: ...

    @property
    def w(self) -> int: ...



    @property
    def xx(self) -> tuple[int, int, ]: ...

    @property
    def xy(self) -> tuple[int, int, ]: ...

    @property
    def xz(self) -> tuple[int, int, ]: ...

    @property
    def xw(self) -> tuple[int, int, ]: ...

    @property
    def yy(self) -> tuple[int, int, ]: ...

    @property
    def yz(self) -> tuple[int, int, ]: ...

    @property
    def yw(self) -> tuple[int, int, ]: ...

    @property
    def zz(self) -> tuple[int, int, ]: ...

    @property
    def zw(self) -> tuple[int, int, ]: ...

    @property
    def ww(self) -> tuple[int, int, ]: ...



    @property
    def xxx(self) -> tuple[int, int, int, ]: ...

    @property
    def xxy(self) -> tuple[int, int, int, ]: ...

    @property
    def xxz(self) -> tuple[int, int, int, ]: ...

    @property
    def xxw(self) -> tuple[int, int, int, ]: ...

    @property
    def xyy(self) -> tuple[int, int, int, ]: ...

    @property
    def xyz(self) -> tuple[int, int, int, ]: ...

    @property
    def xyw(self) -> tuple[int, int, int, ]: ...

    @property
    def xzz(self) -> tuple[int, int, int, ]: ...

    @property
    def xzw(self) -> tuple[int, int, int, ]: ...

    @property
    def xww(self) -> tuple[int, int, int, ]: ...

    @property
    def yyy(self) -> tuple[int, int, int, ]: ...

    @property
    def yyz(self) -> tuple[int, int, int, ]: ...

    @property
    def yyw(self) -> tuple[int, int, int, ]: ...

    @property
    def yzz(self) -> tuple[int, int, int, ]: ...

    @property
    def yzw(self) -> tuple[int, int, int, ]: ...

    @property
    def yww(self) -> tuple[int, int, int, ]: ...

    @property
    def zzz(self) -> tuple[int, int, int, ]: ...

    @property
    def zzw(self) -> tuple[int, int, int, ]: ...

    @property
    def zww(self) -> tuple[int, int, int, ]: ...

    @property
    def www(self) -> tuple[int, int, int, ]: ...



    @property
    def xxxx(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxxw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xxww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xyww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def xwww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyy(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyyw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yyww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def yzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ywww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzzz(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzzw(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zzww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def zwww(self) -> tuple[int, int, int, int, ]: ...

    @property
    def wwww(self) -> tuple[int, int, int, int, ]: ...





    @property
    def r(self) -> int: ...

    @property
    def g(self) -> int: ...

    @property
    def b(self) -> int: ...

    @property
    def a(self) -> int: ...



    @property
    def rr(self) -> tuple[int, int, ]: ...

    @property
    def rg(self) -> tuple[int, int, ]: ...

    @property
    def rb(self) -> tuple[int, int, ]: ...

    @property
    def ra(self) -> tuple[int, int, ]: ...

    @property
    def gg(self) -> tuple[int, int, ]: ...

    @property
    def gb(self) -> tuple[int, int, ]: ...

    @property
    def ga(self) -> tuple[int, int, ]: ...

    @property
    def bb(self) -> tuple[int, int, ]: ...

    @property
    def ba(self) -> tuple[int, int, ]: ...

    @property
    def aa(self) -> tuple[int, int, ]: ...



    @property
    def rrr(self) -> tuple[int, int, int, ]: ...

    @property
    def rrg(self) -> tuple[int, int, int, ]: ...

    @property
    def rrb(self) -> tuple[int, int, int, ]: ...

    @property
    def rra(self) -> tuple[int, int, int, ]: ...

    @property
    def rgg(self) -> tuple[int, int, int, ]: ...

    @property
    def rgb(self) -> tuple[int, int, int, ]: ...

    @property
    def rga(self) -> tuple[int, int, int, ]: ...

    @property
    def rbb(self) -> tuple[int, int, int, ]: ...

    @property
    def rba(self) -> tuple[int, int, int, ]: ...

    @property
    def raa(self) -> tuple[int, int, int, ]: ...

    @property
    def ggg(self) -> tuple[int, int, int, ]: ...

    @property
    def ggb(self) -> tuple[int, int, int, ]: ...

    @property
    def gga(self) -> tuple[int, int, int, ]: ...

    @property
    def gbb(self) -> tuple[int, int, int, ]: ...

    @property
    def gba(self) -> tuple[int, int, int, ]: ...

    @property
    def gaa(self) -> tuple[int, int, int, ]: ...

    @property
    def bbb(self) -> tuple[int, int, int, ]: ...

    @property
    def bba(self) -> tuple[int, int, int, ]: ...

    @property
    def baa(self) -> tuple[int, int, int, ]: ...

    @property
    def aaa(self) -> tuple[int, int, int, ]: ...



    @property
    def rrrr(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrrg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrrb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrra(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrgg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrgb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rrba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rraa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rggg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rggb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rgaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def rbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def raaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gggg(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gggb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggga(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ggaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def gaaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbbb(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbba(self) -> tuple[int, int, int, int, ]: ...

    @property
    def bbaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def baaa(self) -> tuple[int, int, int, int, ]: ...

    @property
    def aaaa(self) -> tuple[int, int, int, int, ]: ...





    @property
    def s(self) -> int: ...

    @property
    def t(self) -> int: ...

    @property
    def q(self) -> int: ...

    @property
    def p(self) -> int: ...



    @property
    def ss(self) -> tuple[int, int, ]: ...

    @property
    def st(self) -> tuple[int, int, ]: ...

    @property
    def sq(self) -> tuple[int, int, ]: ...

    @property
    def sp(self) -> tuple[int, int, ]: ...

    @property
    def tt(self) -> tuple[int, int, ]: ...

    @property
    def tq(self) -> tuple[int, int, ]: ...

    @property
    def tp(self) -> tuple[int, int, ]: ...

    @property
    def qq(self) -> tuple[int, int, ]: ...

    @property
    def qp(self) -> tuple[int, int, ]: ...

    @property
    def pp(self) -> tuple[int, int, ]: ...



    @property
    def sss(self) -> tuple[int, int, int, ]: ...

    @property
    def sst(self) -> tuple[int, int, int, ]: ...

    @property
    def ssq(self) -> tuple[int, int, int, ]: ...

    @property
    def ssp(self) -> tuple[int, int, int, ]: ...

    @property
    def stt(self) -> tuple[int, int, int, ]: ...

    @property
    def stq(self) -> tuple[int, int, int, ]: ...

    @property
    def stp(self) -> tuple[int, int, int, ]: ...

    @property
    def sqq(self) -> tuple[int, int, int, ]: ...

    @property
    def sqp(self) -> tuple[int, int, int, ]: ...

    @property
    def spp(self) -> tuple[int, int, int, ]: ...

    @property
    def ttt(self) -> tuple[int, int, int, ]: ...

    @property
    def ttq(self) -> tuple[int, int, int, ]: ...

    @property
    def ttp(self) -> tuple[int, int, int, ]: ...

    @property
    def tqq(self) -> tuple[int, int, int, ]: ...

    @property
    def tqp(self) -> tuple[int, int, int, ]: ...

    @property
    def tpp(self) -> tuple[int, int, int, ]: ...

    @property
    def qqq(self) -> tuple[int, int, int, ]: ...

    @property
    def qqp(self) -> tuple[int, int, int, ]: ...

    @property
    def qpp(self) -> tuple[int, int, int, ]: ...

    @property
    def ppp(self) -> tuple[int, int, int, ]: ...



    @property
    def ssss(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssst(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sssq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sssp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sstp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ssqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sspp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sttp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def stpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def sppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttt(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tttp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def ttpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def tppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqqq(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqqp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qqpp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def qppp(self) -> tuple[int, int, int, int, ]: ...

    @property
    def pppp(self) -> tuple[int, int, int, int, ]: ...





    @property
    def u(self) -> int: ...

    @property
    def v(self) -> int: ...



    @property
    def uu(self) -> tuple[int, int, ]: ...

    @property
    def uv(self) -> tuple[int, int, ]: ...

    @property
    def vv(self) -> tuple[int, int, ]: ...



    @property
    def uuu(self) -> tuple[int, int, int, ]: ...

    @property
    def uuv(self) -> tuple[int, int, int, ]: ...

    @property
    def uvv(self) -> tuple[int, int, int, ]: ...

    @property
    def vvv(self) -> tuple[int, int, int, ]: ...



    @property
    def uuuu(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uuuv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uuvv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def uvvv(self) -> tuple[int, int, int, int, ]: ...

    @property
    def vvvv(self) -> tuple[int, int, int, int, ]: ...






    @classmethod
    def get_limits(cls) -> tuple[int, int]: ...














@final
class DMatrix2x2:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...

    @overload
    def __init__(
        self,

            _0: DVector2,

            _1: DVector2,

        /
    ): ...

    @overload
    def __init__(
        self,

            _0: Number,

            _1: Number,

            _2: Number,

            _3: Number,

        /
    ): ...

    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> DVector2: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: DMatrix2x2) -> DMatrix2x2: ...
    @overload
    def __add__(self, other: Number) -> DMatrix2x2: ...
    @overload
    def __radd__(self, other: DMatrix2x2) -> DMatrix2x2: ...
    @overload
    def __radd__(self, other: Number) -> DMatrix2x2: ...

    @overload
    def __sub__(self, other: DMatrix2x2) -> DMatrix2x2: ...
    @overload
    def __sub__(self, other: Number) -> DMatrix2x2: ...
    @overload
    def __rsub__(self, other: DMatrix2x2) -> DMatrix2x2: ...
    @overload
    def __rsub__(self, other: Number) -> DMatrix2x2: ...

    def __mul__(self, other: Number) -> DMatrix2x2: ...
    def __rmul__(self, other: Number) -> DMatrix2x2: ...




    @overload
    def __matmul__(self, other: DMatrix2x2) -> DMatrix2x2: ...





    @overload
    def __matmul__(self, other: DMatrix3x2) -> DMatrix3x2: ...





    @overload
    def __matmul__(self, other: DMatrix4x2) -> DMatrix4x2: ...



    @overload
    def __matmul__(self, other: DVector2) -> DVector2: ...

    def __rmatmul__(self, other: DVector2) -> DVector2: ...


    @overload

    def __truediv__(self, other: Number) -> DMatrix2x2: ...

    @overload
    def __truediv__(self, other: DMatrix2x2) -> DMatrix2x2: ...
    @overload
    def __truediv__(self, other: DVector2) -> DVector2: ...
    @overload
    def __rtruediv__(self, other: DVector2) -> DVector2: ...
    @overload

    def __rtruediv__(self, other: Number) -> DMatrix2x2: ...

    def __neg__(self) -> DMatrix2x2: ...
    def __bool__(self) -> bool: ...


    def inverse(self) -> DMatrix2x2: ...



    def transpose(self) -> DMatrix2x2: ...


    @classmethod
    def get_limits(cls) -> tuple[float, float]: ...













@final
class FMatrix2x2:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...

    @overload
    def __init__(
        self,

            _0: FVector2,

            _1: FVector2,

        /
    ): ...

    @overload
    def __init__(
        self,

            _0: Number,

            _1: Number,

            _2: Number,

            _3: Number,

        /
    ): ...

    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> FVector2: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: FMatrix2x2) -> FMatrix2x2: ...
    @overload
    def __add__(self, other: Number) -> FMatrix2x2: ...
    @overload
    def __radd__(self, other: FMatrix2x2) -> FMatrix2x2: ...
    @overload
    def __radd__(self, other: Number) -> FMatrix2x2: ...

    @overload
    def __sub__(self, other: FMatrix2x2) -> FMatrix2x2: ...
    @overload
    def __sub__(self, other: Number) -> FMatrix2x2: ...
    @overload
    def __rsub__(self, other: FMatrix2x2) -> FMatrix2x2: ...
    @overload
    def __rsub__(self, other: Number) -> FMatrix2x2: ...

    def __mul__(self, other: Number) -> FMatrix2x2: ...
    def __rmul__(self, other: Number) -> FMatrix2x2: ...




    @overload
    def __matmul__(self, other: FMatrix2x2) -> FMatrix2x2: ...





    @overload
    def __matmul__(self, other: FMatrix3x2) -> FMatrix3x2: ...





    @overload
    def __matmul__(self, other: FMatrix4x2) -> FMatrix4x2: ...



    @overload
    def __matmul__(self, other: FVector2) -> FVector2: ...

    def __rmatmul__(self, other: FVector2) -> FVector2: ...


    @overload

    def __truediv__(self, other: Number) -> FMatrix2x2: ...

    @overload
    def __truediv__(self, other: FMatrix2x2) -> FMatrix2x2: ...
    @overload
    def __truediv__(self, other: FVector2) -> FVector2: ...
    @overload
    def __rtruediv__(self, other: FVector2) -> FVector2: ...
    @overload

    def __rtruediv__(self, other: Number) -> FMatrix2x2: ...

    def __neg__(self) -> FMatrix2x2: ...
    def __bool__(self) -> bool: ...


    def inverse(self) -> FMatrix2x2: ...



    def transpose(self) -> FMatrix2x2: ...


    @classmethod
    def get_limits(cls) -> tuple[float, float]: ...













@final
class DMatrix2x3:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...

    @overload
    def __init__(
        self,

            _0: DVector3,

            _1: DVector3,

        /
    ): ...

    @overload
    def __init__(
        self,

            _0: Number,

            _1: Number,

            _2: Number,

            _3: Number,

            _4: Number,

            _5: Number,

        /
    ): ...

    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> DVector3: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: DMatrix2x3) -> DMatrix2x3: ...
    @overload
    def __add__(self, other: Number) -> DMatrix2x3: ...
    @overload
    def __radd__(self, other: DMatrix2x3) -> DMatrix2x3: ...
    @overload
    def __radd__(self, other: Number) -> DMatrix2x3: ...

    @overload
    def __sub__(self, other: DMatrix2x3) -> DMatrix2x3: ...
    @overload
    def __sub__(self, other: Number) -> DMatrix2x3: ...
    @overload
    def __rsub__(self, other: DMatrix2x3) -> DMatrix2x3: ...
    @overload
    def __rsub__(self, other: Number) -> DMatrix2x3: ...

    def __mul__(self, other: Number) -> DMatrix2x3: ...
    def __rmul__(self, other: Number) -> DMatrix2x3: ...




    @overload
    def __matmul__(self, other: DMatrix2x2) -> DMatrix2x3: ...





    @overload
    def __matmul__(self, other: DMatrix3x2) -> DMatrix3x3: ...





    @overload
    def __matmul__(self, other: DMatrix4x2) -> DMatrix4x3: ...



    @overload
    def __matmul__(self, other: DVector2) -> DVector3: ...

    def __rmatmul__(self, other: DVector3) -> DVector2: ...


    def __truediv__(self, other: Number) -> DMatrix2x3: ...

    def __rtruediv__(self, other: Number) -> DMatrix2x3: ...

    def __neg__(self) -> DMatrix2x3: ...
    def __bool__(self) -> bool: ...




    def transpose(self) -> DMatrix3x2: ...


    @classmethod
    def get_limits(cls) -> tuple[float, float]: ...













@final
class FMatrix2x3:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...

    @overload
    def __init__(
        self,

            _0: FVector3,

            _1: FVector3,

        /
    ): ...

    @overload
    def __init__(
        self,

            _0: Number,

            _1: Number,

            _2: Number,

            _3: Number,

            _4: Number,

            _5: Number,

        /
    ): ...

    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> FVector3: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: FMatrix2x3) -> FMatrix2x3: ...
    @overload
    def __add__(self, other: Number) -> FMatrix2x3: ...
    @overload
    def __radd__(self, other: FMatrix2x3) -> FMatrix2x3: ...
    @overload
    def __radd__(self, other: Number) -> FMatrix2x3: ...

    @overload
    def __sub__(self, other: FMatrix2x3) -> FMatrix2x3: ...
    @overload
    def __sub__(self, other: Number) -> FMatrix2x3: ...
    @overload
    def __rsub__(self, other: FMatrix2x3) -> FMatrix2x3: ...
    @overload
    def __rsub__(self, other: Number) -> FMatrix2x3: ...

    def __mul__(self, other: Number) -> FMatrix2x3: ...
    def __rmul__(self, other: Number) -> FMatrix2x3: ...




    @overload
    def __matmul__(self, other: FMatrix2x2) -> FMatrix2x3: ...





    @overload
    def __matmul__(self, other: FMatrix3x2) -> FMatrix3x3: ...





    @overload
    def __matmul__(self, other: FMatrix4x2) -> FMatrix4x3: ...



    @overload
    def __matmul__(self, other: FVector2) -> FVector3: ...

    def __rmatmul__(self, other: FVector3) -> FVector2: ...


    def __truediv__(self, other: Number) -> FMatrix2x3: ...

    def __rtruediv__(self, other: Number) -> FMatrix2x3: ...

    def __neg__(self) -> FMatrix2x3: ...
    def __bool__(self) -> bool: ...




    def transpose(self) -> FMatrix3x2: ...


    @classmethod
    def get_limits(cls) -> tuple[float, float]: ...













@final
class DMatrix2x4:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...

    @overload
    def __init__(
        self,

            _0: DVector4,

            _1: DVector4,

        /
    ): ...

    @overload
    def __init__(
        self,

            _0: Number,

            _1: Number,

            _2: Number,

            _3: Number,

            _4: Number,

            _5: Number,

            _6: Number,

            _7: Number,

        /
    ): ...

    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> DVector4: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: DMatrix2x4) -> DMatrix2x4: ...
    @overload
    def __add__(self, other: Number) -> DMatrix2x4: ...
    @overload
    def __radd__(self, other: DMatrix2x4) -> DMatrix2x4: ...
    @overload
    def __radd__(self, other: Number) -> DMatrix2x4: ...

    @overload
    def __sub__(self, other: DMatrix2x4) -> DMatrix2x4: ...
    @overload
    def __sub__(self, other: Number) -> DMatrix2x4: ...
    @overload
    def __rsub__(self, other: DMatrix2x4) -> DMatrix2x4: ...
    @overload
    def __rsub__(self, other: Number) -> DMatrix2x4: ...

    def __mul__(self, other: Number) -> DMatrix2x4: ...
    def __rmul__(self, other: Number) -> DMatrix2x4: ...




    @overload
    def __matmul__(self, other: DMatrix2x2) -> DMatrix2x4: ...





    @overload
    def __matmul__(self, other: DMatrix3x2) -> DMatrix3x4: ...





    @overload
    def __matmul__(self, other: DMatrix4x2) -> DMatrix4x4: ...



    @overload
    def __matmul__(self, other: DVector2) -> DVector4: ...

    def __rmatmul__(self, other: DVector4) -> DVector2: ...


    def __truediv__(self, other: Number) -> DMatrix2x4: ...

    def __rtruediv__(self, other: Number) -> DMatrix2x4: ...

    def __neg__(self) -> DMatrix2x4: ...
    def __bool__(self) -> bool: ...




    def transpose(self) -> DMatrix4x2: ...


    @classmethod
    def get_limits(cls) -> tuple[float, float]: ...













@final
class FMatrix2x4:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...

    @overload
    def __init__(
        self,

            _0: FVector4,

            _1: FVector4,

        /
    ): ...

    @overload
    def __init__(
        self,

            _0: Number,

            _1: Number,

            _2: Number,

            _3: Number,

            _4: Number,

            _5: Number,

            _6: Number,

            _7: Number,

        /
    ): ...

    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> FVector4: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: FMatrix2x4) -> FMatrix2x4: ...
    @overload
    def __add__(self, other: Number) -> FMatrix2x4: ...
    @overload
    def __radd__(self, other: FMatrix2x4) -> FMatrix2x4: ...
    @overload
    def __radd__(self, other: Number) -> FMatrix2x4: ...

    @overload
    def __sub__(self, other: FMatrix2x4) -> FMatrix2x4: ...
    @overload
    def __sub__(self, other: Number) -> FMatrix2x4: ...
    @overload
    def __rsub__(self, other: FMatrix2x4) -> FMatrix2x4: ...
    @overload
    def __rsub__(self, other: Number) -> FMatrix2x4: ...

    def __mul__(self, other: Number) -> FMatrix2x4: ...
    def __rmul__(self, other: Number) -> FMatrix2x4: ...




    @overload
    def __matmul__(self, other: FMatrix2x2) -> FMatrix2x4: ...





    @overload
    def __matmul__(self, other: FMatrix3x2) -> FMatrix3x4: ...





    @overload
    def __matmul__(self, other: FMatrix4x2) -> FMatrix4x4: ...



    @overload
    def __matmul__(self, other: FVector2) -> FVector4: ...

    def __rmatmul__(self, other: FVector4) -> FVector2: ...


    def __truediv__(self, other: Number) -> FMatrix2x4: ...

    def __rtruediv__(self, other: Number) -> FMatrix2x4: ...

    def __neg__(self) -> FMatrix2x4: ...
    def __bool__(self) -> bool: ...




    def transpose(self) -> FMatrix4x2: ...


    @classmethod
    def get_limits(cls) -> tuple[float, float]: ...













@final
class DMatrix3x2:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...

    @overload
    def __init__(
        self,

            _0: DVector2,

            _1: DVector2,

            _2: DVector2,

        /
    ): ...

    @overload
    def __init__(
        self,

            _0: Number,

            _1: Number,

            _2: Number,

            _3: Number,

            _4: Number,

            _5: Number,

        /
    ): ...

    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> DVector2: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: DMatrix3x2) -> DMatrix3x2: ...
    @overload
    def __add__(self, other: Number) -> DMatrix3x2: ...
    @overload
    def __radd__(self, other: DMatrix3x2) -> DMatrix3x2: ...
    @overload
    def __radd__(self, other: Number) -> DMatrix3x2: ...

    @overload
    def __sub__(self, other: DMatrix3x2) -> DMatrix3x2: ...
    @overload
    def __sub__(self, other: Number) -> DMatrix3x2: ...
    @overload
    def __rsub__(self, other: DMatrix3x2) -> DMatrix3x2: ...
    @overload
    def __rsub__(self, other: Number) -> DMatrix3x2: ...

    def __mul__(self, other: Number) -> DMatrix3x2: ...
    def __rmul__(self, other: Number) -> DMatrix3x2: ...




    @overload
    def __matmul__(self, other: DMatrix2x3) -> DMatrix2x2: ...





    @overload
    def __matmul__(self, other: DMatrix3x3) -> DMatrix3x2: ...





    @overload
    def __matmul__(self, other: DMatrix4x3) -> DMatrix4x2: ...



    @overload
    def __matmul__(self, other: DVector3) -> DVector2: ...

    def __rmatmul__(self, other: DVector2) -> DVector3: ...


    def __truediv__(self, other: Number) -> DMatrix3x2: ...

    def __rtruediv__(self, other: Number) -> DMatrix3x2: ...

    def __neg__(self) -> DMatrix3x2: ...
    def __bool__(self) -> bool: ...




    def transpose(self) -> DMatrix2x3: ...


    @classmethod
    def get_limits(cls) -> tuple[float, float]: ...













@final
class FMatrix3x2:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...

    @overload
    def __init__(
        self,

            _0: FVector2,

            _1: FVector2,

            _2: FVector2,

        /
    ): ...

    @overload
    def __init__(
        self,

            _0: Number,

            _1: Number,

            _2: Number,

            _3: Number,

            _4: Number,

            _5: Number,

        /
    ): ...

    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> FVector2: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: FMatrix3x2) -> FMatrix3x2: ...
    @overload
    def __add__(self, other: Number) -> FMatrix3x2: ...
    @overload
    def __radd__(self, other: FMatrix3x2) -> FMatrix3x2: ...
    @overload
    def __radd__(self, other: Number) -> FMatrix3x2: ...

    @overload
    def __sub__(self, other: FMatrix3x2) -> FMatrix3x2: ...
    @overload
    def __sub__(self, other: Number) -> FMatrix3x2: ...
    @overload
    def __rsub__(self, other: FMatrix3x2) -> FMatrix3x2: ...
    @overload
    def __rsub__(self, other: Number) -> FMatrix3x2: ...

    def __mul__(self, other: Number) -> FMatrix3x2: ...
    def __rmul__(self, other: Number) -> FMatrix3x2: ...




    @overload
    def __matmul__(self, other: FMatrix2x3) -> FMatrix2x2: ...





    @overload
    def __matmul__(self, other: FMatrix3x3) -> FMatrix3x2: ...





    @overload
    def __matmul__(self, other: FMatrix4x3) -> FMatrix4x2: ...



    @overload
    def __matmul__(self, other: FVector3) -> FVector2: ...

    def __rmatmul__(self, other: FVector2) -> FVector3: ...


    def __truediv__(self, other: Number) -> FMatrix3x2: ...

    def __rtruediv__(self, other: Number) -> FMatrix3x2: ...

    def __neg__(self) -> FMatrix3x2: ...
    def __bool__(self) -> bool: ...




    def transpose(self) -> FMatrix2x3: ...


    @classmethod
    def get_limits(cls) -> tuple[float, float]: ...













@final
class DMatrix3x3:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...

    @overload
    def __init__(
        self,

            _0: DVector3,

            _1: DVector3,

            _2: DVector3,

        /
    ): ...

    @overload
    def __init__(
        self,

            _0: Number,

            _1: Number,

            _2: Number,

            _3: Number,

            _4: Number,

            _5: Number,

            _6: Number,

            _7: Number,

            _8: Number,

        /
    ): ...

    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> DVector3: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: DMatrix3x3) -> DMatrix3x3: ...
    @overload
    def __add__(self, other: Number) -> DMatrix3x3: ...
    @overload
    def __radd__(self, other: DMatrix3x3) -> DMatrix3x3: ...
    @overload
    def __radd__(self, other: Number) -> DMatrix3x3: ...

    @overload
    def __sub__(self, other: DMatrix3x3) -> DMatrix3x3: ...
    @overload
    def __sub__(self, other: Number) -> DMatrix3x3: ...
    @overload
    def __rsub__(self, other: DMatrix3x3) -> DMatrix3x3: ...
    @overload
    def __rsub__(self, other: Number) -> DMatrix3x3: ...

    def __mul__(self, other: Number) -> DMatrix3x3: ...
    def __rmul__(self, other: Number) -> DMatrix3x3: ...




    @overload
    def __matmul__(self, other: DMatrix2x3) -> DMatrix2x3: ...





    @overload
    def __matmul__(self, other: DMatrix3x3) -> DMatrix3x3: ...





    @overload
    def __matmul__(self, other: DMatrix4x3) -> DMatrix4x3: ...



    @overload
    def __matmul__(self, other: DVector3) -> DVector3: ...

    def __rmatmul__(self, other: DVector3) -> DVector3: ...


    @overload

    def __truediv__(self, other: Number) -> DMatrix3x3: ...

    @overload
    def __truediv__(self, other: DMatrix3x3) -> DMatrix3x3: ...
    @overload
    def __truediv__(self, other: DVector3) -> DVector3: ...
    @overload
    def __rtruediv__(self, other: DVector3) -> DVector3: ...
    @overload

    def __rtruediv__(self, other: Number) -> DMatrix3x3: ...

    def __neg__(self) -> DMatrix3x3: ...
    def __bool__(self) -> bool: ...


    def inverse(self) -> DMatrix3x3: ...



    def transpose(self) -> DMatrix3x3: ...


    @classmethod
    def get_limits(cls) -> tuple[float, float]: ...













@final
class FMatrix3x3:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...

    @overload
    def __init__(
        self,

            _0: FVector3,

            _1: FVector3,

            _2: FVector3,

        /
    ): ...

    @overload
    def __init__(
        self,

            _0: Number,

            _1: Number,

            _2: Number,

            _3: Number,

            _4: Number,

            _5: Number,

            _6: Number,

            _7: Number,

            _8: Number,

        /
    ): ...

    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> FVector3: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: FMatrix3x3) -> FMatrix3x3: ...
    @overload
    def __add__(self, other: Number) -> FMatrix3x3: ...
    @overload
    def __radd__(self, other: FMatrix3x3) -> FMatrix3x3: ...
    @overload
    def __radd__(self, other: Number) -> FMatrix3x3: ...

    @overload
    def __sub__(self, other: FMatrix3x3) -> FMatrix3x3: ...
    @overload
    def __sub__(self, other: Number) -> FMatrix3x3: ...
    @overload
    def __rsub__(self, other: FMatrix3x3) -> FMatrix3x3: ...
    @overload
    def __rsub__(self, other: Number) -> FMatrix3x3: ...

    def __mul__(self, other: Number) -> FMatrix3x3: ...
    def __rmul__(self, other: Number) -> FMatrix3x3: ...




    @overload
    def __matmul__(self, other: FMatrix2x3) -> FMatrix2x3: ...





    @overload
    def __matmul__(self, other: FMatrix3x3) -> FMatrix3x3: ...





    @overload
    def __matmul__(self, other: FMatrix4x3) -> FMatrix4x3: ...



    @overload
    def __matmul__(self, other: FVector3) -> FVector3: ...

    def __rmatmul__(self, other: FVector3) -> FVector3: ...


    @overload

    def __truediv__(self, other: Number) -> FMatrix3x3: ...

    @overload
    def __truediv__(self, other: FMatrix3x3) -> FMatrix3x3: ...
    @overload
    def __truediv__(self, other: FVector3) -> FVector3: ...
    @overload
    def __rtruediv__(self, other: FVector3) -> FVector3: ...
    @overload

    def __rtruediv__(self, other: Number) -> FMatrix3x3: ...

    def __neg__(self) -> FMatrix3x3: ...
    def __bool__(self) -> bool: ...


    def inverse(self) -> FMatrix3x3: ...



    def transpose(self) -> FMatrix3x3: ...


    @classmethod
    def get_limits(cls) -> tuple[float, float]: ...













@final
class DMatrix3x4:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...

    @overload
    def __init__(
        self,

            _0: DVector4,

            _1: DVector4,

            _2: DVector4,

        /
    ): ...

    @overload
    def __init__(
        self,

            _0: Number,

            _1: Number,

            _2: Number,

            _3: Number,

            _4: Number,

            _5: Number,

            _6: Number,

            _7: Number,

            _8: Number,

            _9: Number,

            _10: Number,

            _11: Number,

        /
    ): ...

    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> DVector4: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: DMatrix3x4) -> DMatrix3x4: ...
    @overload
    def __add__(self, other: Number) -> DMatrix3x4: ...
    @overload
    def __radd__(self, other: DMatrix3x4) -> DMatrix3x4: ...
    @overload
    def __radd__(self, other: Number) -> DMatrix3x4: ...

    @overload
    def __sub__(self, other: DMatrix3x4) -> DMatrix3x4: ...
    @overload
    def __sub__(self, other: Number) -> DMatrix3x4: ...
    @overload
    def __rsub__(self, other: DMatrix3x4) -> DMatrix3x4: ...
    @overload
    def __rsub__(self, other: Number) -> DMatrix3x4: ...

    def __mul__(self, other: Number) -> DMatrix3x4: ...
    def __rmul__(self, other: Number) -> DMatrix3x4: ...




    @overload
    def __matmul__(self, other: DMatrix2x3) -> DMatrix2x4: ...





    @overload
    def __matmul__(self, other: DMatrix3x3) -> DMatrix3x4: ...





    @overload
    def __matmul__(self, other: DMatrix4x3) -> DMatrix4x4: ...



    @overload
    def __matmul__(self, other: DVector3) -> DVector4: ...

    def __rmatmul__(self, other: DVector4) -> DVector3: ...


    def __truediv__(self, other: Number) -> DMatrix3x4: ...

    def __rtruediv__(self, other: Number) -> DMatrix3x4: ...

    def __neg__(self) -> DMatrix3x4: ...
    def __bool__(self) -> bool: ...




    def transpose(self) -> DMatrix4x3: ...


    @classmethod
    def get_limits(cls) -> tuple[float, float]: ...













@final
class FMatrix3x4:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...

    @overload
    def __init__(
        self,

            _0: FVector4,

            _1: FVector4,

            _2: FVector4,

        /
    ): ...

    @overload
    def __init__(
        self,

            _0: Number,

            _1: Number,

            _2: Number,

            _3: Number,

            _4: Number,

            _5: Number,

            _6: Number,

            _7: Number,

            _8: Number,

            _9: Number,

            _10: Number,

            _11: Number,

        /
    ): ...

    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> FVector4: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: FMatrix3x4) -> FMatrix3x4: ...
    @overload
    def __add__(self, other: Number) -> FMatrix3x4: ...
    @overload
    def __radd__(self, other: FMatrix3x4) -> FMatrix3x4: ...
    @overload
    def __radd__(self, other: Number) -> FMatrix3x4: ...

    @overload
    def __sub__(self, other: FMatrix3x4) -> FMatrix3x4: ...
    @overload
    def __sub__(self, other: Number) -> FMatrix3x4: ...
    @overload
    def __rsub__(self, other: FMatrix3x4) -> FMatrix3x4: ...
    @overload
    def __rsub__(self, other: Number) -> FMatrix3x4: ...

    def __mul__(self, other: Number) -> FMatrix3x4: ...
    def __rmul__(self, other: Number) -> FMatrix3x4: ...




    @overload
    def __matmul__(self, other: FMatrix2x3) -> FMatrix2x4: ...





    @overload
    def __matmul__(self, other: FMatrix3x3) -> FMatrix3x4: ...





    @overload
    def __matmul__(self, other: FMatrix4x3) -> FMatrix4x4: ...



    @overload
    def __matmul__(self, other: FVector3) -> FVector4: ...

    def __rmatmul__(self, other: FVector4) -> FVector3: ...


    def __truediv__(self, other: Number) -> FMatrix3x4: ...

    def __rtruediv__(self, other: Number) -> FMatrix3x4: ...

    def __neg__(self) -> FMatrix3x4: ...
    def __bool__(self) -> bool: ...




    def transpose(self) -> FMatrix4x3: ...


    @classmethod
    def get_limits(cls) -> tuple[float, float]: ...













@final
class DMatrix4x2:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...

    @overload
    def __init__(
        self,

            _0: DVector2,

            _1: DVector2,

            _2: DVector2,

            _3: DVector2,

        /
    ): ...

    @overload
    def __init__(
        self,

            _0: Number,

            _1: Number,

            _2: Number,

            _3: Number,

            _4: Number,

            _5: Number,

            _6: Number,

            _7: Number,

        /
    ): ...

    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> DVector2: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: DMatrix4x2) -> DMatrix4x2: ...
    @overload
    def __add__(self, other: Number) -> DMatrix4x2: ...
    @overload
    def __radd__(self, other: DMatrix4x2) -> DMatrix4x2: ...
    @overload
    def __radd__(self, other: Number) -> DMatrix4x2: ...

    @overload
    def __sub__(self, other: DMatrix4x2) -> DMatrix4x2: ...
    @overload
    def __sub__(self, other: Number) -> DMatrix4x2: ...
    @overload
    def __rsub__(self, other: DMatrix4x2) -> DMatrix4x2: ...
    @overload
    def __rsub__(self, other: Number) -> DMatrix4x2: ...

    def __mul__(self, other: Number) -> DMatrix4x2: ...
    def __rmul__(self, other: Number) -> DMatrix4x2: ...




    @overload
    def __matmul__(self, other: DMatrix2x4) -> DMatrix2x2: ...





    @overload
    def __matmul__(self, other: DMatrix3x4) -> DMatrix3x2: ...





    @overload
    def __matmul__(self, other: DMatrix4x4) -> DMatrix4x2: ...



    @overload
    def __matmul__(self, other: DVector4) -> DVector2: ...

    def __rmatmul__(self, other: DVector2) -> DVector4: ...


    def __truediv__(self, other: Number) -> DMatrix4x2: ...

    def __rtruediv__(self, other: Number) -> DMatrix4x2: ...

    def __neg__(self) -> DMatrix4x2: ...
    def __bool__(self) -> bool: ...




    def transpose(self) -> DMatrix2x4: ...


    @classmethod
    def get_limits(cls) -> tuple[float, float]: ...













@final
class FMatrix4x2:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...

    @overload
    def __init__(
        self,

            _0: FVector2,

            _1: FVector2,

            _2: FVector2,

            _3: FVector2,

        /
    ): ...

    @overload
    def __init__(
        self,

            _0: Number,

            _1: Number,

            _2: Number,

            _3: Number,

            _4: Number,

            _5: Number,

            _6: Number,

            _7: Number,

        /
    ): ...

    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> FVector2: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: FMatrix4x2) -> FMatrix4x2: ...
    @overload
    def __add__(self, other: Number) -> FMatrix4x2: ...
    @overload
    def __radd__(self, other: FMatrix4x2) -> FMatrix4x2: ...
    @overload
    def __radd__(self, other: Number) -> FMatrix4x2: ...

    @overload
    def __sub__(self, other: FMatrix4x2) -> FMatrix4x2: ...
    @overload
    def __sub__(self, other: Number) -> FMatrix4x2: ...
    @overload
    def __rsub__(self, other: FMatrix4x2) -> FMatrix4x2: ...
    @overload
    def __rsub__(self, other: Number) -> FMatrix4x2: ...

    def __mul__(self, other: Number) -> FMatrix4x2: ...
    def __rmul__(self, other: Number) -> FMatrix4x2: ...




    @overload
    def __matmul__(self, other: FMatrix2x4) -> FMatrix2x2: ...





    @overload
    def __matmul__(self, other: FMatrix3x4) -> FMatrix3x2: ...





    @overload
    def __matmul__(self, other: FMatrix4x4) -> FMatrix4x2: ...



    @overload
    def __matmul__(self, other: FVector4) -> FVector2: ...

    def __rmatmul__(self, other: FVector2) -> FVector4: ...


    def __truediv__(self, other: Number) -> FMatrix4x2: ...

    def __rtruediv__(self, other: Number) -> FMatrix4x2: ...

    def __neg__(self) -> FMatrix4x2: ...
    def __bool__(self) -> bool: ...




    def transpose(self) -> FMatrix2x4: ...


    @classmethod
    def get_limits(cls) -> tuple[float, float]: ...













@final
class DMatrix4x3:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...

    @overload
    def __init__(
        self,

            _0: DVector3,

            _1: DVector3,

            _2: DVector3,

            _3: DVector3,

        /
    ): ...

    @overload
    def __init__(
        self,

            _0: Number,

            _1: Number,

            _2: Number,

            _3: Number,

            _4: Number,

            _5: Number,

            _6: Number,

            _7: Number,

            _8: Number,

            _9: Number,

            _10: Number,

            _11: Number,

        /
    ): ...

    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> DVector3: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: DMatrix4x3) -> DMatrix4x3: ...
    @overload
    def __add__(self, other: Number) -> DMatrix4x3: ...
    @overload
    def __radd__(self, other: DMatrix4x3) -> DMatrix4x3: ...
    @overload
    def __radd__(self, other: Number) -> DMatrix4x3: ...

    @overload
    def __sub__(self, other: DMatrix4x3) -> DMatrix4x3: ...
    @overload
    def __sub__(self, other: Number) -> DMatrix4x3: ...
    @overload
    def __rsub__(self, other: DMatrix4x3) -> DMatrix4x3: ...
    @overload
    def __rsub__(self, other: Number) -> DMatrix4x3: ...

    def __mul__(self, other: Number) -> DMatrix4x3: ...
    def __rmul__(self, other: Number) -> DMatrix4x3: ...




    @overload
    def __matmul__(self, other: DMatrix2x4) -> DMatrix2x3: ...





    @overload
    def __matmul__(self, other: DMatrix3x4) -> DMatrix3x3: ...





    @overload
    def __matmul__(self, other: DMatrix4x4) -> DMatrix4x3: ...



    @overload
    def __matmul__(self, other: DVector4) -> DVector3: ...

    def __rmatmul__(self, other: DVector3) -> DVector4: ...


    def __truediv__(self, other: Number) -> DMatrix4x3: ...

    def __rtruediv__(self, other: Number) -> DMatrix4x3: ...

    def __neg__(self) -> DMatrix4x3: ...
    def __bool__(self) -> bool: ...




    def transpose(self) -> DMatrix3x4: ...


    @classmethod
    def get_limits(cls) -> tuple[float, float]: ...













@final
class FMatrix4x3:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...

    @overload
    def __init__(
        self,

            _0: FVector3,

            _1: FVector3,

            _2: FVector3,

            _3: FVector3,

        /
    ): ...

    @overload
    def __init__(
        self,

            _0: Number,

            _1: Number,

            _2: Number,

            _3: Number,

            _4: Number,

            _5: Number,

            _6: Number,

            _7: Number,

            _8: Number,

            _9: Number,

            _10: Number,

            _11: Number,

        /
    ): ...

    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> FVector3: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: FMatrix4x3) -> FMatrix4x3: ...
    @overload
    def __add__(self, other: Number) -> FMatrix4x3: ...
    @overload
    def __radd__(self, other: FMatrix4x3) -> FMatrix4x3: ...
    @overload
    def __radd__(self, other: Number) -> FMatrix4x3: ...

    @overload
    def __sub__(self, other: FMatrix4x3) -> FMatrix4x3: ...
    @overload
    def __sub__(self, other: Number) -> FMatrix4x3: ...
    @overload
    def __rsub__(self, other: FMatrix4x3) -> FMatrix4x3: ...
    @overload
    def __rsub__(self, other: Number) -> FMatrix4x3: ...

    def __mul__(self, other: Number) -> FMatrix4x3: ...
    def __rmul__(self, other: Number) -> FMatrix4x3: ...




    @overload
    def __matmul__(self, other: FMatrix2x4) -> FMatrix2x3: ...





    @overload
    def __matmul__(self, other: FMatrix3x4) -> FMatrix3x3: ...





    @overload
    def __matmul__(self, other: FMatrix4x4) -> FMatrix4x3: ...



    @overload
    def __matmul__(self, other: FVector4) -> FVector3: ...

    def __rmatmul__(self, other: FVector3) -> FVector4: ...


    def __truediv__(self, other: Number) -> FMatrix4x3: ...

    def __rtruediv__(self, other: Number) -> FMatrix4x3: ...

    def __neg__(self) -> FMatrix4x3: ...
    def __bool__(self) -> bool: ...




    def transpose(self) -> FMatrix3x4: ...


    @classmethod
    def get_limits(cls) -> tuple[float, float]: ...













@final
class DMatrix4x4:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...

    @overload
    def __init__(
        self,

            _0: DVector4,

            _1: DVector4,

            _2: DVector4,

            _3: DVector4,

        /
    ): ...

    @overload
    def __init__(
        self,

            _0: Number,

            _1: Number,

            _2: Number,

            _3: Number,

            _4: Number,

            _5: Number,

            _6: Number,

            _7: Number,

            _8: Number,

            _9: Number,

            _10: Number,

            _11: Number,

            _12: Number,

            _13: Number,

            _14: Number,

            _15: Number,

        /
    ): ...

    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> DVector4: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: DMatrix4x4) -> DMatrix4x4: ...
    @overload
    def __add__(self, other: Number) -> DMatrix4x4: ...
    @overload
    def __radd__(self, other: DMatrix4x4) -> DMatrix4x4: ...
    @overload
    def __radd__(self, other: Number) -> DMatrix4x4: ...

    @overload
    def __sub__(self, other: DMatrix4x4) -> DMatrix4x4: ...
    @overload
    def __sub__(self, other: Number) -> DMatrix4x4: ...
    @overload
    def __rsub__(self, other: DMatrix4x4) -> DMatrix4x4: ...
    @overload
    def __rsub__(self, other: Number) -> DMatrix4x4: ...

    def __mul__(self, other: Number) -> DMatrix4x4: ...
    def __rmul__(self, other: Number) -> DMatrix4x4: ...




    @overload
    def __matmul__(self, other: DMatrix2x4) -> DMatrix2x4: ...





    @overload
    def __matmul__(self, other: DMatrix3x4) -> DMatrix3x4: ...





    @overload
    def __matmul__(self, other: DMatrix4x4) -> DMatrix4x4: ...



    @overload
    def __matmul__(self, other: DVector4) -> DVector4: ...

    def __rmatmul__(self, other: DVector4) -> DVector4: ...


    @overload

    def __truediv__(self, other: Number) -> DMatrix4x4: ...

    @overload
    def __truediv__(self, other: DMatrix4x4) -> DMatrix4x4: ...
    @overload
    def __truediv__(self, other: DVector4) -> DVector4: ...
    @overload
    def __rtruediv__(self, other: DVector4) -> DVector4: ...
    @overload

    def __rtruediv__(self, other: Number) -> DMatrix4x4: ...

    def __neg__(self) -> DMatrix4x4: ...
    def __bool__(self) -> bool: ...


    def inverse(self) -> DMatrix4x4: ...



    def transpose(self) -> DMatrix4x4: ...


    @classmethod
    def get_limits(cls) -> tuple[float, float]: ...













@final
class FMatrix4x4:

    __slots__ = ['__weakref__']

    @overload
    def __init__(self, all: Number, /): ...

    @overload
    def __init__(
        self,

            _0: FVector4,

            _1: FVector4,

            _2: FVector4,

            _3: FVector4,

        /
    ): ...

    @overload
    def __init__(
        self,

            _0: Number,

            _1: Number,

            _2: Number,

            _3: Number,

            _4: Number,

            _5: Number,

            _6: Number,

            _7: Number,

            _8: Number,

            _9: Number,

            _10: Number,

            _11: Number,

            _12: Number,

            _13: Number,

            _14: Number,

            _15: Number,

        /
    ): ...

    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self) -> FVector4: ...
    def __eq__(self, other: Any) -> bool: ...
    def __neq__(self, other: Any) -> bool: ...

    @overload
    def __add__(self, other: FMatrix4x4) -> FMatrix4x4: ...
    @overload
    def __add__(self, other: Number) -> FMatrix4x4: ...
    @overload
    def __radd__(self, other: FMatrix4x4) -> FMatrix4x4: ...
    @overload
    def __radd__(self, other: Number) -> FMatrix4x4: ...

    @overload
    def __sub__(self, other: FMatrix4x4) -> FMatrix4x4: ...
    @overload
    def __sub__(self, other: Number) -> FMatrix4x4: ...
    @overload
    def __rsub__(self, other: FMatrix4x4) -> FMatrix4x4: ...
    @overload
    def __rsub__(self, other: Number) -> FMatrix4x4: ...

    def __mul__(self, other: Number) -> FMatrix4x4: ...
    def __rmul__(self, other: Number) -> FMatrix4x4: ...




    @overload
    def __matmul__(self, other: FMatrix2x4) -> FMatrix2x4: ...





    @overload
    def __matmul__(self, other: FMatrix3x4) -> FMatrix3x4: ...





    @overload
    def __matmul__(self, other: FMatrix4x4) -> FMatrix4x4: ...



    @overload
    def __matmul__(self, other: FVector4) -> FVector4: ...

    def __rmatmul__(self, other: FVector4) -> FVector4: ...


    @overload

    def __truediv__(self, other: Number) -> FMatrix4x4: ...

    @overload
    def __truediv__(self, other: FMatrix4x4) -> FMatrix4x4: ...
    @overload
    def __truediv__(self, other: FVector4) -> FVector4: ...
    @overload
    def __rtruediv__(self, other: FVector4) -> FVector4: ...
    @overload

    def __rtruediv__(self, other: Number) -> FMatrix4x4: ...

    def __neg__(self) -> FMatrix4x4: ...
    def __bool__(self) -> bool: ...


    def inverse(self) -> FMatrix4x4: ...



    def transpose(self) -> FMatrix4x4: ...


    @classmethod
    def get_limits(cls) -> tuple[float, float]: ...






