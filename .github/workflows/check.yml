
name: check

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.9, '3.10']
        python-arch: [x64]

        exclude:
          - os: macos-latest
            python-version: '3.10'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}-${{ matrix.python-arch }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.python-arch }}

    - name: Upgrade pip & setuptools
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools

    - name: Install Test Dependencies
      run: |
        python -m pip install .[test]
        python -m pip install pytest-xdist

    - name: Install Mesa
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        curl.exe -L --output mesa.7z --url https://github.com/pal1000/mesa-dist-win/releases/download/21.2.4/mesa3d-21.2.4-release-msvc.7z
        "C:\Program Files\7-Zip\7z.exe" e mesa.7z x64/opengl32.dll
        "C:\Program Files\7-Zip\7z.exe" e mesa.7z x64/libglapi.dll
        dir
      shell: cmd

    - name: Test (Ubuntu)
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        python -m pip install pytest-timeout pytest-rerunfailures
        export PYTEST_RERUNFAILURES=`python -c "import pytest_rerunfailures; print(pytest_rerunfailures.__file__)"`
        sed '/^def pytest_runtest_protocol(.*/i @pytest.hookimpl(tryfirst=True)' $PYTEST_RERUNFAILURES > /tmp/pytest_rerunfailures.py
        cp /tmp/pytest_rerunfailures.py $PYTEST_RERUNFAILURES

        sudo apt-get install xvfb
        sudo modprobe uinput
        sudo chmod a+rw /dev/uinput
        sudo usermod -a -G input $USER
        sudo -u $USER env PATH=${PATH} xvfb-run -a python -m pytest -n 1 --max-worker-restart=999999 --cov=gamut --cov-report=xml -k "not test_mypy.py" --timeout=15 --timeout-method=thread -o timeout_func_only=true --reruns 3
        python -m pytest -n auto --cov=gamut --cov-report=xml -k "test_mypy.py"

    - name: Test (Windows)
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        set GALLIUM_DRIVER=llvmpipe
        set PATH=%cd%;%PATH%
        python -m pytest -n auto --max-worker-restart=999999 --cov=gamut --cov-report=xml
      shell: cmd

    - name: Test (Mac OS)
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        python -m pytest -n auto --max-worker-restart=999999 --cov=gamut --cov-report=xml

    - name: Codecov
      uses: codecov/codecov-action@v1.2.1

  static-analysis:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
        architecture: x64

    - name: Upgrade pip & setuptools
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools

    - name: Install Pre-Commit
      run: |
        python -m pip install pre-commit

    - name: Static Analysis
      run: |
        python -m pre_commit run --all-files

